(function(){"use strict";const K=["vertex","edge","face"],N=(e,t=null,n=1,o=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(o)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,f)=>e+f*n)},L=(e,t)=>e.length!==t.length?!1:e.every((n,o)=>Array.isArray(n)?L(n,t[o]):n===t[o]),re=e=>e!==""&&e!=="x",P=e=>e==="s"||e==="b",ie=(e,t)=>{let n=0;for(let o=0;o<e.length;o++)n+=e[o]*t[o];return n},ze=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]-t[o];return n},$=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]*t;return n},Se=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let o=0;o<e.length;o++)t[n].push(e[o][n])}return t},I=(e,t)=>{const n=new Array(e.length);for(let o=0;o<e.length;o++){let l=0;for(let f=0;f<e[0].length;f++)l+=e[o][f]*t[f];n[o]=l}return n},pe=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},T=e=>{const t=new Array(e).fill(1);return pe(t)},ee=(e,t)=>e.filter((n,o)=>!t.includes(o)),le=(e,t)=>ee(e,t).map(n=>ee(n,t)),ce=(e,t,n)=>ze(e,$(I(qe(n),t),2*ie(I(Ae(n),e),t))),Me=(e,t)=>t.some((n,o)=>n.some((l,f)=>o===f&&l===0))?$(e,1/e[e.length-1]):$(e,-1/We(fe(ie(I(t,e),e)))),Ae=e=>e.map((t,n)=>t.map((o,l)=>n===l&&o===0?1:o)),qe=e=>e.map(t=>t.map(n=>fe(n))),Q=(e,t,n,o)=>{const l=G/e,f=G/t,h=G/n;return ue(G/Ve(-H(l)*H(h)+R(l)*R(h)*((H(f)-H(o*l)*H(h))/(R(o*l)*R(h)))))},{abs:fe,cos:H,sin:R,tan:Le,cosh:Qe,sinh:Re,acos:Ve,acosh:Ge,atan:Je,atan2:Xe,min:Ye,max:Ze,round:ue,sqrt:We,cbrt:$e,sign:Ie,ceil:et,floor:tt,log:nt,exp:ot,hypot:st,pow:Ce,PI:G}=Math,ge=new ArrayBuffer(8),Oe=new Float64Array(ge),de=new Int32Array(ge);function _e(e){return~~e===e?~~e:(Oe[0]=e,de[0]^de[1])}const he=10**4,te=e=>{let t="";for(let n=0;n<e.length;n++)t+=_e(ue(e[n]*he)/he).toString(),n<e.length-1&&(t+="|");return t},m=e=>String.fromCharCode(97+e),ae=e=>e.charCodeAt(0)-97,U=(e,t,n,o,l,f=[],h=null)=>{let a="";const w=o.map((s,r)=>f.includes(r)||s?"":m(r)).join(""),c={},d=[];if(o.filter(s=>P(s)).length===1){const s=o.findIndex(u=>P(u)),r=(s+1)%e;for(let u=0;u<e;u++)if(!f.includes(u)){const i=m(u);a+=i,d.push(i.repeat(2)),u===s?c[i]=[s,r,s]:c[i]=[u]}for(let u=0;u<e;u++)for(let i=u+1;i<e;i++)if(!f.includes(u)&&!f.includes(i)){let y=t[u][i];if(y<2)continue;u===s&&i===r||u===r&&i===s?y%2===0?d.push((m(u)+m(i)).repeat(y/2)):d.push((m(u)+m(i)).repeat(y)):(i-u>1&&(y=t[i-1][i]),d.push((m(u)+m(i)).repeat(y)))}}else if(o.some(s=>P(s)))if(f.length===e-1){const s=Object.entries(h).find(([r,u])=>u[0]===0&&!f.includes(u[1]));if(!s)return{gens:null};a=s[0],d.push(a.repeat(2))}else{let s=0;for(let r=0;r<e;r++)for(let u=r+1;u<e;u++){const i=m(s);if(!f.includes(r)&&!f.includes(u)){a+=i,d.push(i.repeat(t[r][u])),c[i]=[r,u];for(let y=0;y<u;y++){const x=[r,u].map(z=>Object.entries(c).find(([V,j])=>j[0]===y&&j[1]===z)).filter(z=>z);x.length===2&&d.push(x[0][0]+x[1][0].toUpperCase()+i)}}s++}}else{for(let s=0;s<e;s++)if(!f.includes(s)){const r=m(s);a+=r,d.push(r.repeat(2)),c[r]=[s]}for(let s=0;s<e;s++)for(let r=s+1;r<e;r++)if(!f.includes(s)&&!f.includes(r)){const u=t[s][r];u>1&&d.push((m(s)+m(r)).repeat(u))}}if(!n.every(s=>s.every(r=>r===1))&&l.curvature>0){if(e===4&&n[0][1]>1!=n[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(s=>f.includes(s))||(n[0][1]>1&&d.push("abcdcb".repeat(Q(t[0][1],t[1][2],t[0][2],n[0][1]))),n[2][3]>1&&d.push("abcdcb".repeat(Q(t[2][3],t[1][2],t[1][3],n[2][3]))));else for(let s=1;s<e;s++)for(let r=0;r<s;r++)if(n[r][s]>1){if(r+2<e){const u=Q(t[r+1][s+1],t[r][s],t[r][s+1],n[r][s]);u&&!f.includes(r)&&!f.includes(s)&&!f.includes(r+2)&&d.push((m(r)+m(s)+m(r+2)+m(s)).repeat(u))}if(r-1>=0){const u=Q(t[r-1][s-1],t[r][s],t[r-1][s],n[r][s]);u&&!f.includes(r)&&!f.includes(s)&&!f.includes(r-1)&&d.push((m(r)+m(s)+m(r)+m(r-1)).repeat(u))}}}return{gens:a,subgens:w,rels:d,transforms:h||c}},ne=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),M=(e,t,n)=>{let o,l,f;if(t===0)o=l=f=n;else{const h=n<.5?n*(1+t):n+t-n*t,a=2*n-h;o=ne(a,h,e+1/3),l=ne(a,h,e),f=ne(a,h,e-1/3)}return[o,l,f]},J=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Ee={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>M(e.length*.03%1,.75,.7)},Ne=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e})=>M(e.length*.17%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>M(...J[e.length%J.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,opacity:.9},transparency:"oit",color:({word:e,type:t})=>t==="face"?M(e.length*.3%1,1,.6):[0,0,0]},synthwave:{background:[...M(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>M((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>M(e.length*.03%1,1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>M(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:n,size:o})=>t==="face"?M((e-2)*.21%1,1,.8):M(n/o,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?M(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:o})=>{const l=e.length?ae(e[e.length-1])/n:0;return M(l%1,1,t==="face"?.6:o.face?0:.8)}},harlequin:{background:[...M(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const o=e.split("").map(f=>ae(f)).reduce((f,h)=>f+h,0),l=[...J[o%J.length]];return t%2&&(l[2]*=.5),M(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>M(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>M(e/t,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>M(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Ce(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Ee,...t,transparent:{}}])),Fe=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},_=(e,t)=>{let n=t,o=0;for(;e.quotientMap[n];)o++,n=e.quotientMap[n];return o>1&&(e.quotientMap[t]=n),n},ye=(e,t,n)=>{const o=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=_(e,t),n=_(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const f=e.cosets.get(t),h=e.cosets.get(n);e.cosets.delete(n);for(const[a,w]of h)f.has(a)?l.push([f.get(a),w]):f.set(a,w)}return _(e,o)},we=(e,t,n,o)=>{t=_(e,t);const l=e.cosets.get(t);l.has(n)?ye(e,l.get(n),o):l.set(n,o)},X=(e,t,n,o)=>{t=_(e,t);let l;const f=e.cosets.get(t);return f.has(n)?(l=_(e,f.get(n)),o!==void 0&&l!==o&&ye(e,o,l)):(o?l=o:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),we(e,t,n,l),we(e,l,Fe(n),t)),l},be=function(e,t,n){let o=n;for(let l=t.length-1;l>0;l--)o=X(e,o,t[l]);X(e,o,t[0],n)},Be=function(e){if(!e.words){const t=_(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=_(e,t),o=e.cosets.get(n),l=e.words.get(n);if(o.size<e.gens.length*2)return;const f=[];for(let h=0;h<e.gens.length;h++){const a=e.gens[h],w=_(e,o.get(a));if(!e.words.has(w)){if(e.cosets.get(w).size<e.gens.length*2)return;f.push([a,w])}}e.remaining.shift();for(let h=0;h<f.length;h++){const[a,w]=f[h],c=a+l;if(e.words.set(w,c),e.currentWords.set(w,c),e.lastCoset=w,e.remaining.push(w),e.vertices){let d=e.vertices.get(n);for(let s=0;s<e.transforms[a].length;s++){const r=e.transforms[a][s];d=ce(d,e.rootNormals[r],e.metric)}e.vertices.set(w,d)}}}},je=(e,t)=>{let n=_(e,1);for(let o=t.length-1;o>=0;o--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=_(e,l.get(t[o])),e.cosets.get(n).size<e.gens.length*2))return}return n},ve=e=>{if(!e.cosets){e.unvisited=[1],e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)be(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length>0;){const o=_(e,e.unvisited.shift());if(!e.seen.has(o)){e.seen.add(o),n=o;break}}if(n===null){e.done=!0;break}for(let o=0;o<e.gens.length;o++)X(e,n,e.gens[o].toUpperCase()),X(e,n,e.gens[o]);for(let o=0;o<e.rels.length;o++)be(e,e.rels[o],n)}},Pe=e=>(ve(e),e.cosets.size),xe=e=>(ve(e),Be(e),e),Te=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const o=new Set;for(let l=0;l<e.length;l++){const f=e[l];if(f)for(let h=0;h<f.length;h++){const a=f[h];for(let w=0;w<n[a].length;w++){const c=m(n[a][w]);o.has(c)||o.add(c)}if(o.size>=t)return!0}}return!1},ke=(e,t,n,o,l,f)=>{const h=N(l).filter(c=>!f.includes(c));let a="";if(e.some(c=>P(c))&&t.gens.length)for(let c=0;c<t.gens.length;c++){const d=t.gens[c],s=n[o.transforms[d][0]][o.transforms[d][1]];((t.dimensions===1?s===2:s>2)||o.transforms[d].some(r=>!e[r]))&&(a+=d)}else for(let c=0;c<l;c++)(!f.includes(c)||re(e[c])&&!e[c]&&!h.some(d=>n[d][c]!==2))&&(a+=m(c));return a},oe=(e,t,n,o,l,f=null,h=null,a=new Map)=>{const w=!h;o.every(c=>!c)&&(o=o.map(()=>1)),f=f||o.map((c,d)=>re(c)?null:d).filter(c=>c!==null),h=h||{new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:o,skips:f,...U(e,t,n,o,l,f),quotient:"",facet:[""],children:[]};for(let c=0;c<e;c++){if(f.includes(c)||f.includes("s"))continue;const d=[...f,c];N(e).filter(y=>!d.includes(y));const s=d.sort().join("-");let r=!1;if(!a.has(s)){r=!0;const y={key:s,dimensions:e-d.length,coxeter:le(t,d),stellation:le(n,d),mirrors:ee(o,d),skips:d,...U(e,t,n,o,l,d,h.transforms)};if(y.gens===null)continue;xe(y),a.set(s,y)}const u=a.get(s),i=Array.from(u.words.values());if(Te(i,u.dimensions,u.transforms)){let y=ke(o,u,t,h,e,d),x={new:r,...u,quotient:y,facet:i,children:[]};u.dimensions>0&&(x=oe(e,t,n,o,l,d,x,a)),h.children.push(x)}}if(h.children.length===0&&e-f.length>1){console.info("No leaf found, digging deeper",f);for(let c=0;c<e;c++){if(f.includes(c))continue;const d=[...f,c],s=d.sort().join("-");let u={new:!1,...a.get(s),quotient:"",facet:[""],children:[]};u=oe(e,t,n,o,l,d,u,a),h.children.push(u)}}if(w&&o.some(c=>P(c))){let c=[];for(let d=1;d<e;d++){const s=[...f,...N(e-d).map(()=>"0s")],r=e-s.length;if(d===1){const u=[],i=b=>{b.children.forEach(i),b.dimensions===1&&b.new&&u.push(b)};i(h);const y=Object.entries(h.transforms).filter(([b,p])=>p.every(A=>o[A])).map(([b])=>b);for(let b=0;b<u.length;b++){const p=u[b];y.includes(p.gens)&&y.splice(y.indexOf(p.gens),1)}const x=c;c=[];const z=T(r).map((b,p)=>b.map((A,g)=>p===g?1:p===g+1||p===g-1?4:2)),V=T(r).map(b=>b.map(()=>1)),j=N(r).map(()=>"s");for(let b=0;b<y.length;b++){const p=y[b];s[s.length-1]=b+"s";const A={key:s.join("-"),dimensions:r,coxeter:z,stellation:V,mirrors:j,skips:s,...U(r,z,V,j,l,s,h.transforms)};A.gens=p;const g={new:!0,key:s.join("-"),dimensions:r,coxeter:z,stellation:V,mirrors:j,skips:s,...A,quotient:ke(o,A,t,h,e,s),facet:["",p],children:b===0?x:[]};c.push(g)}}else if(d===2){const u=T(r).map((j,b)=>j.map((p,A)=>b===A?1:b===A+1||b===A-1?3:2)),i=T(r).map(j=>j.map(()=>1)),y=N(r).map(()=>"s"),x=[];let z=0;for(let j=0;j<e;j++)for(let b=j+1;b<e;b++){const p=m(z);for(let A=0;A<b;A++){const g=[j,b].map(v=>Object.entries(h.transforms).find(([W,C])=>C[0]===A&&C[1]===v)).filter(v=>v);g.length===2&&x.push(["",g[1][0],p])}z++}const V=c;c=[];for(let j=0;j<x.length;j++){s[s.length-1]=j+"s";const b={new:!0,key:s.join("-"),dimensions:r,coxeter:u,stellation:i,mirrors:y,skips:s,...U(r,u,i,y,l,s,h.transforms),quotient:"",facet:x[j],children:j===0?V:[]};c.push(b)}}else{const u=T(r).map((V,j)=>V.map((b,p)=>j===p?1:2)),i=T(r).map(V=>V.map(()=>1)),y=N(r).map(()=>"s"),x=c;c=[];const z={new:!0,key:s.join("-"),dimensions:r,coxeter:u,stellation:i,mirrors:y,skips:s,...U(r,u,i,y,l,s,h.transforms),facet:[""],quotient:"",children:x};c.push(z)}}h.children.push(...c)}return h},He=(e,t,n)=>{const o=[],l=[],f=[];for(const[h,a]of e.currentWords){let w;if(a===""){const c=Se(n.rootVertices);e.fundamentalVertices=new Map,w=N(t.dimensions).map(d=>Me(c[d],n.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",w)}else{w=[...e.fundamentalVertices.get(a.slice(1))];const c=e.gens.indexOf(a[0]);for(let d=0;d<w.length;d++)w[d]=ce(w[d],n.rootNormals[c],n.metric)}for(let c=0;c<w.length;c++){const d=te(w[c]);e.hashes.vertex.has(d)||(o.push({word:a,cosetId:h,vertices:[w[c]]}),e.hashes.vertex.add(d));for(let s=c+1;s<w.length;s++){const r=[w[c],w[s]].sort((u,i)=>{for(let y=0;y<u.length;y++){if(u[y]<i[y])return-1;if(u[y]>i[y])return 1}return 0}).map(u=>te(u)).join("-");e.hashes.edge.has(r)||(l.push({word:a,cosetId:h,vertices:[w[c],w[s]]}),e.hashes.edge.add(r));for(let u=s+1;u<w.length;u++){const i=[w[c],w[s],w[u]].sort((y,x)=>{for(let z=0;z<y.length;z++){if(y[z]<x[z])return-1;if(y[z]>x[z])return 1}return 0}).map(y=>te(y)).join("-");e.hashes.face.has(i)||(f.push({word:a,cosetId:h,vertices:[w[c],w[s],w[u]]}),e.hashes.face.add(i))}}e.fundamentalVertices.set(a,w)}e.currentWords.delete(h)}return[o,l,f]},Ue=(e,t,n=!1,o=!1)=>{if(n){if(o)return e;const l=e>0?1-e%2:0;return e>=t/2+l?2*(t-e)-1+l:2*e-l}return e>=t/2?2*(t-e)-1:2*e},De=(e,t,n,o)=>{const l=[],f=[];if(e.subdimensions===0)for(const[h,a]of e.currentWords)l.push({word:a,vertices:[e.vertices.get(h)]}),e.currentWords.delete(h);else if(e.subdimensions===1)for(const[h,a]of e.currentWords){const w={word:a,vertices:[]};for(let c=0;c<e.facet.length;c++){const d=je(o,a+e.facet[c]);d&&o.vertices.has(d)&&w.vertices.push(o.vertices.get(d))}w.vertices.length<2||(l.push(w),e.currentWords.delete(h))}else if(e.subdimensions===2)for(const[h,a]of e.currentWords){const w=e.mirrors.every(i=>!!i),c=e.mirrors.some(i=>P(i)),d=a.length%2?0:1,s=[];for(let i=0;i<e.facet.length;i++){const y=Ue(i,e.facet.length,w,c),x=je(o,a+e.facet[y]);x&&o.vertices.has(x)&&s.push(o.vertices.get(x))}if(s.length<3)continue;const r=s.length<e.facet.length;if(s.length===3){d&&([s[2],s[1]]=[s[1],s[2]]);const i={word:a,vertices:s,faceIndex:0,faceSize:3,partial:r};r?f.push(i):(l.push(i),e.currentWords.delete(h));continue}const u=new Array(t.dimensions).fill(0);for(let i=0;i<s.length;i++){const y=s[i];for(let x=0;x<y.length;x++)u[x]+=y[x]}for(let i=0;i<t.dimensions;i++)u[i]/=s.length;for(let i=0;i<s.length;i++){const y={word:a,vertices:[s[(i+d)%s.length],s[(i+(1-d))%s.length],u],faceIndex:i,faceSize:s.length,partial:r};r?f.push(y):(l.push(y),e.currentWords.delete(h))}}return{objects:l,partials:f}};let E,D,S;onmessage=({data:{first:e,space:t,dimensions:n,coxeter:o,stellation:l,mirrors:f,ambiance:h,draw:a,batch:w,hidden:c}})=>{var d,s;try{let r=!0;e&&(E=new Map,D=[0,0,0],S=oe(n,o,l,f,t));const u=N(S.dimensions).join("-"),i=[],y=f.every(g=>!g),x={0:!0,1:a.edge&&!y,2:a.face&&!y},z=g=>{g.children.forEach(z);const v=x[g.dimensions],W=K[g.dimensions];if(g!=null&&g.new){i[g.dimensions]||(i[g.dimensions]={dimensions:g.dimensions,processing:a[W]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const C=t.eigens.values;if(E.has(g.key))E.get(g.key).keys.push(g.key);else{let O=v?w:5;W==="edge"&&t.curvature<=0&&(O*=1.5);const B={...S,keys:[g.key],subgens:g.quotient,facet:g.facet,subdimensions:g.dimensions,mirrors:g.mirrors,limit:O,...g.dimensions===0&&!y?{rootVertex:t.rootVertex,rootNormals:t.rootNormals,metric:t.metric}:{}};E.set(g.key,B)}const k=E.get(g.key);k.done||(v?(xe(k),C.some(O=>O<=0)?k.count=1/0:k.count=k.cosets.size):C.some(O=>O<=0)?(k.count=1/0,k.done=!0):k.count=Pe(k)),i[g.dimensions].detail.push({key:g.key,coxeter:g.coxeter,stellation:g.stellation,mirrors:g.mirrors,count:k.count,done:k.done});const q=i[g.dimensions].aggregated.find(({coxeter:O,stellation:B,mirrors:F})=>L(O,g.coxeter)&&L(B,g.stellation)&&L(F,g.mirrors));q?(q.done=q.done&&k.done,q.count+=k.count,q.key+=","+g.key):i[g.dimensions].aggregated.push({key:g.key,coxeter:g.coxeter,stellation:g.stellation,mirrors:g.mirrors,count:k.count,done:k.done}),a[W]&&k.words&&(i[g.dimensions].processing+=k.words.size),i[g.dimensions].count+=k.count,i[g.dimensions].done=i[g.dimensions].done&&k.done,r=r&&k.done}};S.children.forEach(z);const V=E.get(u);if(S.dimensions===2&&(S.currentWords=new Map([[1,""]]),S.facet=Array.from(V.words.values()),S.done=!0,E.set("",{...S,subgens:S.subgens,facet:S.facet,subdimensions:S.dimensions,mirrors:S.mirrors}),i[2]={dimensions:2,processing:1,count:0,detail:[{key:"",coxeter:S.coxeter,stellation:S.stellation,mirrors:S.mirrors,count:1,done:!0}],aggregated:[],done:!0}),i[0].done&&(!a.edge||(d=i[1])!=null&&d.done)&&(!a.face||(s=i[2])!=null&&s.done))for(let g of E.values())g.limit=200;const j=[];if(y){const g=He(V,S,t);for(let v=0;v<g.length;v++)a[K[v]]?(j.push({start:D[v],size:g[v].length,objects:[g[v]],partials:[]}),D[v]+=g[v].length):j.push(null)}else for(let g=0;g<i.length&&g<3;g++){if(!a[K[g]]){j.push(null);continue}const v={start:D[g],size:0,objects:[],partials:[]};for(let W=0;W<i[g].detail.length;W++){const C=i[g].detail[W];if(c.includes(C.key))continue;const k=E.get(C.key);if(k.currentWords.size){const{objects:q,partials:O}=De(k,S,t,V);v.objects.push(q),v.size+=q.length+O.length,D[g]+=q.length,v.partials.push(O)}}j.push(v)}const b=[],p=[],A=S.dimensions>4?9:S.dimensions;for(let g=0;g<j.length;g++){const v=j[g];if(!v){b.push(null),p.push(null);continue}const W=[new Float32Array(v.size*3)];for(let q=0;q<g+1;q++)W.push(new Float32Array(v.size*A));let C=0;const k=v.objects.concat(v.partials);for(let q=0;q<k.length;q++){const O=k[q];for(let B=0;B<O.length;B++){const F=O[B];for(let Y=0;Y<F.vertices.length;Y++){const me=F.vertices[Y];for(let Z=0;Z<me.length;Z++)W[Y+1][C*A+Z]=me[Z]}const se=Ne[h].color({word:F.word,key:F.key,subShape:q%v.objects.length,faceIndex:F.faceIndex,faceSize:F.faceSize,dimensions:S.dimensions,draw:a,idx:C,size:v.size,type:K[g]});W[0][C*3+0]=se[0],W[0][C*3+1]=se[1],W[0][C*3+2]=se[2],C++}}b.push(W),p.push({start:v.start,size:v.size})}i.size=y?V.words.size:V.vertices.size,i.done=r,postMessage({polytope:i,infos:p,data:b},{options:{transfer:[b.flat(1)]}})}catch(r){postMessage({error:r.message})}}})();
