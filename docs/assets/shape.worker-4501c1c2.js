(function(){"use strict";const{abs:B,cos:Je,sin:Ke,tan:Qe,cosh:Xe,sinh:Ye,acos:Ze,acosh:et,atan:tt,atan2:nt,min:st,max:rt,round:xe,sqrt:me,cbrt:ot,sign:it,ceil:lt,floor:ct,log:ft,exp:ut,hypot:gt,pow:je,PI:dt}=Math,ke=(...e)=>e.reduce((t,r)=>t+r,0)/e.length,re=new ArrayBuffer(8),Ve=new Float64Array(re),oe=new Int32Array(re);function Se(e){return~~e===e?~~e:(Ve[0]=e,oe[0]^oe[1])}const ie=10**4,X=e=>{let t="";for(let r=0;r<e.length;r++)t+=Se(xe(e[r]*ie)/ie).toString(),r<e.length-1&&(t+="|");return t},_=e=>String.fromCharCode(97+e),le=e=>e.charCodeAt(0)-97,G=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},ce=(e,t=null,r=1,n=!1)=>{if(t===null&&(t=e,e=0),r===0)throw new Error("Step cannot be zero.");if(t<e&&r>0||t>e&&r<0){if(n)return[];r=-r}return new Array(Math.ceil((t-e)/r)).fill().map((l,h)=>e+h*r)},D=(e,t)=>e.length!==t.length?!1:e.every((r,n)=>Array.isArray(r)?D(r,t[n]):r===t[n]),fe=e=>e!==""&&e!=="x",ze=e=>e==="m"||e==="b"||e==="c"||e==="d",Oe=e=>e==="c"||e==="d",W=e=>e==="s"||e==="b"||e==="d",H=(e,t)=>{let r=0;for(let n=0;n<e.length;n++)r+=e[n]*t[n];return r},N=(e,t)=>{const r=[];for(let n=0;n<e.length;n++)r[n]=e[n]+t[n];return r},Ae=(e,t)=>{const r=[];for(let n=0;n<e.length;n++)r[n]=e[n]-t[n];return r},I=(e,t)=>{const r=[];for(let n=0;n<e.length;n++)r[n]=e[n]*t;return r},Y=e=>{const t=[];for(let r=0;r<e[0].length;r++){t.push([]);for(let n=0;n<e.length;n++)t[r].push(e[n][r])}return t},p=(e,t)=>{const r=new Array(e.length);for(let n=0;n<e.length;n++){let l=0;for(let h=0;h<e[0].length;h++)l+=e[n][h]*t[h];r[n]=l}return r},Ce=e=>{const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=new Array(e.length).fill(0),t[r][r]=e[r];return t},P=e=>{const t=new Array(e).fill(1);return Ce(t)},Z=(e,t)=>e.filter((r,n)=>!t.includes(n)),ue=(e,t)=>Z(e,t).map(r=>Z(r,t)),T=(e,t,r)=>Ae(e,I(p(Ee(r),t),2*H(p(Me(r),e),t))),U=(e,t)=>{if(t.some((n,l)=>n.some((h,c)=>l===c&&h===0)))return e[e.length-1]===0&&(e[e.length-1]=1e-16),I(e,1/e[e.length-1]);let r=H(p(t,e),e);return r===0&&(r=1e-16),I(e,-1/me(B(r)))},ye=1,Me=e=>e.map((t,r)=>t.map((n,l)=>r===l&&n===0?ye:n)),Ee=e=>e.map(t=>t.map(r=>B(r))),We=e=>{const t=[];for(let c=0;c<e.length;c++)for(let b=c+1;b<e.length;b++)e[c][b]!==2&&t.push([c,b]);if(t.length!==e.length-1)return;const r=new Array(e.length).fill(0);if(t.forEach(([c,b])=>{r[c]++,r[b]++}),r.some(c=>c>3)||r.filter(c=>c===1).length!==2)return;const l=[r.indexOf(1)],h=[];for(let c=0;c<e.length-1;c++){const b=l[l.length-1],o=t.findIndex(a=>a.includes(b));let u=t[o];t.splice(o,1),u[0]===b&&u.reverse(),l.push(u[0]),h.push(u.reverse())}return{group:l,pairs:h}},Fe=e=>{const t=new Array(e.length).fill(0);for(let l=0;l<e.length;l++)for(let h=l+1;h<e.length;h++)e[l][h]!==2&&(t[l]++,t[h]++);if(t.filter(l=>l===3).length!==1||t.filter(l=>l===1).length!==e.length-1)return;const r=t.indexOf(3),n=t.map((l,h)=>[h,r]).filter(([l,h])=>l!==h);return{group:[r],pairs:n}},Ie=e=>{const t=We(e);if(t)return{type:"c",description:"C-Group",...t};const r=Fe(e);return r?{type:"star",description:"Star Group",...r}:{type:"other",description:"Other Group"}},ee=(e,t="",r=[])=>{const n=[];for(let l=0;l<e.length;l++){const[h,c]=e[l],b=e.filter((o,u)=>u!==l);if(r.length){const o=r[r.length-1];if(c.some(u=>u===o)){const u=c[1]===o,a=u?h.toUpperCase():h,v=u?[...c].reverse():c;if(v[1]===r[0])return[t+a];b.length&&n.push(...ee(b,t+a,r.concat(v.slice(1))))}}else n.push(...ee(b,h,c))}return n},Pe=(e,t,r)=>{var u,a;const n=[],l=Object.entries(e),h=l.filter(([v,d])=>d.length===1),c=l.filter(([v,d])=>d.length===2),b=l.filter(([v,d])=>d.length===3),o=Object.fromEntries(h.map(([v,d])=>[d[0],v]));for(let v=0;v<l.length;v++){const[d,s]=l[v];if([1,3].includes(s.length)&&n.push(d.repeat(2)),s.length===2){const i=t[s[0]][s[1]];i>1&&n.push(d.repeat(i))}if(s.length===1){const i=s[0];for(let f=0;f<h.length;f++){const[w,m]=h[f];if(m>i){const x=t[i][m];x>1&&n.push((d+w).repeat(x))}}}if(s.length===3){const i=t[s[0]][s[1]];if(i>1){const f=o[s[1]];f?n.push((d+f).repeat(i%2===0?i/2:i)):console.warn("No conjugate conjugate reflection",d,s)}for(let f=0;f<b.length;f++){const[w,m]=b[f];if(m[1]===s[1]&&m[0]>s[0]){let x=(u=c.find(([g,j])=>j[0]===s[0]&&j[1]===m[0]))==null?void 0:u[0];x||(x=G((a=c.find(([g,j])=>j[1]===s[0]&&j[0]===m[0]))==null?void 0:a[0])),x&&n.push(G(d)+G(x)+w+x)}if(m[0]===s[0]&&m[1]>s[1]){const x=t[s[1]][m[1]];x>1&&n.push((d+w).repeat(x))}}}}if(c.length>1){const v=ee(c);n.push(...v.map(d=>d.split("").reverse().join("")))}if(t.length>2&&t.length<6&&r.some((v,d)=>v.some((s,i)=>s>1&&t[d][i]>1))){const v=Ie(t),d=[];v.type==="c"?d.push(..._e(t,r,v.group,v.pairs)):v.type==="star"&&d.push(...Ge(t,r,v.group,v.pairs));const s=Object.fromEntries(Object.entries(e).filter(([f,w])=>w.length===1).map(([f,w])=>[w[0],f])),i=Object.entries(e).filter(([f,w])=>w.length===2).map(([f,w])=>[[w,f],[[...w].reverse(),G(f)]]).flat();for(let f=0;f<d.length;f++){const w=d[f];let m="",x=!1;for(let g=0;g<w.length;g++){const j=w[g],V=s[j];if(V)m+=V;else{const k=i.find(([S,z])=>S[0]===j&&g<w.length-1&&S[1]===w[g+1]);if(k)m+=k[1],g++;else{x=!0;break}}}x||n.push(m)}}return n},$=(e,t)=>Array(e).fill(t).flat(),_e=(e,t,r,n)=>{const l=[];if(!n.filter(([s,i])=>t[s][i]>1).map(([s,i])=>e[s][i]===5))return l;const c=n.map(([s,i])=>e[s][i]);if(c.filter(s=>s!==3&&s!==5).length>(e.length===3?0:1))return l;if(c.filter(s=>s!==3&&s!==5).length===1){const s=c.findIndex(i=>i!==3&&i!==5);if(![0,c.length-1].includes(s))return l}const b=[c,[...c].reverse()],o=n.map(([s,i])=>t[s][i]),u=[o,[...o].reverse()],a=({m:s,s:i})=>{if(s.length!==e.length-1)return!1;for(let f=0;f<b.length;f++){const w=b[f],m=u[f];if(w.every((x,g)=>x===s[g]||s[g]===null)&&m.every((x,g)=>x===i[g]||i[g]===null))return!0}};if(a({m:[null,5,5],s:[null,1,2]})&&(c[o[0]===2?c.length-1:0]=0),[{m:[null,3,5,5],s:[null,1,1,2]},{m:[null,5,5,5],s:[null,1,2,1]},{m:[null,5,3,5],s:[null,1,1,2]}].some(a)||(a({m:[5,5,5,3],s:[1,1,2,1]})&&(c[o[1]===2?c.length-1:0]=0),c.filter(s=>s===3).length>e.length-3))return l;const v=[];let d=[];for(let s=0;s<c.length;s++)c[s]===5&&(d.length?(d.push(s),v.push(d),d=[s]):d.push(s));for(let s=0;s<v.length;s++){const[i,f]=v[s],w=[];for(let m=i;m<f+2;m++)w.push(r[m]);w.push(...w.slice(1,w.length-1).reverse()),l.push($(3,w))}return l},Ge=(e,t,r,n)=>{const l=[];if(e.length!==4||!n.filter(([u,a])=>t[u][a]>1).map(([u,a])=>e[u][a]===5))return l;const c=n.map(([u,a])=>e[u][a]);if(c.find(u=>u!==3&&u!==5)||c.filter(u=>u===3).length!==1)return l;const b=n[c.findIndex(u=>u===3)],o=n.filter(([u,a])=>e[u][a]===5);return l.push($(3,[...o[0],...o[1]])),l.push($(2,[...$(3,[o[1][0],...b].reverse()),...$(2,[...o[0]].reverse())])),l},y=(e,t)=>{let r=t,n=0;for(;e.quotientMap[r];)n++,r=e.quotientMap[r];return n>1&&(e.quotientMap[t]=r),r},ge=(e,t,r)=>{const n=t,l=[[t,r]];for(;l.length>0;)if([t,r]=l.pop(),t>r&&([t,r]=[r,t]),t=y(e,t),r=y(e,r),t!==r){e.quotientMap[r]=t,e.seen.has(r)&&!e.seen.has(t)&&e.seen.add(t);const h=e.cosets.get(t),c=e.cosets.get(r);e.cosets.delete(r);for(const[b,o]of c)h.has(b)?l.push([h.get(b),o]):h.set(b,o)}return y(e,n)},de=(e,t,r,n)=>{t=y(e,t);const l=e.cosets.get(t);l.has(r)?ge(e,l.get(r),n):l.set(r,n)},L=(e,t,r,n)=>{t=y(e,t);let l;const h=e.cosets.get(t);return h.has(r)?(l=y(e,h.get(r)),n!==void 0&&l!==n&&ge(e,n,l)):(n?l=n:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),de(e,t,r,l),de(e,l,G(r),t)),l},he=function(e,t,r){let n=r;for(let l=t.length-1;l>0;l--)n=L(e,n,t[l]);L(e,n,t[0],r)},Ne=function(e){if(!e.words){const t=y(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],r=y(e,t),n=e.cosets.get(r),l=e.words.get(r);if(typeof l>"u"){e.remaining.push(e.remaining.shift());continue}if(n.size<e.gens.length*2)return;const h=[];for(let c=0;c<e.gens.length;c++){const b=e.gens[c],o=y(e,n.get(b));if(!e.words.has(o)){if(e.cosets.get(o).size<e.gens.length*2)return;h.push([b,o])}}e.remaining.shift();for(let c=0;c<h.length;c++){const[b,o]=h[c],u=b+l;if(e.words.set(o,u),e.currentWords.set(o,u),e.lastCoset=o,e.remaining.push(o),e.vertices){let a=e.vertices.get(r);for(let v=0;v<e.transforms[b].length;v++){const d=e.transforms[b][v];a=T(a,e.rootNormals[d],e.metric)}e.vertices.set(o,a)}}}},F=(e,t)=>{let r=y(e,1);for(let n=t.length-1;n>=0;n--){const l=e.cosets.get(r);if(l.size<e.gens.length*2||(r=y(e,l.get(t[n])),e.cosets.get(r).size<e.gens.length*2))return}return r},ae=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)he(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let r=null;for(;e.unvisited.length-e.pointer>0;){const n=e.unvisited[e.pointer++],l=y(e,n);if(!e.seen.has(l)){e.seen.add(l),r=l;break}}if(r===null){e.done=!0;break}for(let n=0;n<e.gens.length;n++)L(e,r,e.gens[n].toUpperCase()),L(e,r,e.gens[n]);for(let n=0;n<e.rels.length;n++)he(e,e.rels[n],r)}},Te=e=>(ae(e),e.cosets.size),ve=e=>(ae(e),Ne(e),e),be=(e,t,r)=>{if(r){t%2&&t--;const n=e>0?1-e%2:0;return e>=t/2+n?2*(t-e)-1+n:2*e-n}return e>=t/2?2*(t-e)-1:2*e},$e=(e,t,r)=>{if(t===0)return!0;if(e.length<=t)return!1;const n=new Set;for(let l=0;l<e.length;l++){const h=e[l];if(h)for(let c=0;c<h.length;c++){const b=h[c];for(let o=0;o<r[b].length;o++){const u=_(r[b][o]);n.has(u)||n.add(u)}if(n.size>=t)return!0}}return!1},te=(e,t,r,n,l,h=null,c=null)=>{if(!h){n.every(s=>!s)&&(n=n.map(()=>1));let o="",u=0;const a={};for(let s=0;s<e;s++)if(fe(n[s])){if(!W(n[s])){const i=_(u++);o+=i,a[i]=[s]}for(let i=s+1;i<e;i++)if(fe(n[i])){if(W(n[s])&&W(n[i])){const f=_(u++);o+=f,a[f]=[s,i]}else if(W(n[s])&&!W(n[i])){const f=_(u++);o+=f,a[f]=[s,i,s]}else if(!W(n[s])&&W(n[i])){const f=_(u++);o+=f,a[f]=[i,s,i]}}}const v=Object.entries(a).filter(([s,i])=>i.every(f=>!n[f])).map(([s])=>s).join(""),d=Pe(a,t,r);if(h={new:!0,key:"",dimensions:e,coxeter:t,stellation:r,mirrors:n,gens:o,subgens:v,transforms:a,rels:d,facet:[""],removed:[],children:[]},c=h,c.solved=new Map,n.filter(s=>s).length===1){const s=n.findIndex(i=>i);if(t[s].every((i,f)=>s===f||i===2)){const i=s===e-1?e-2:s+1,[f]=Object.entries(h.transforms).find(([w,m])=>m.includes(i));c.hosotope={gen:f,index:i}}}}const b=[];for(let o=0;o<e;o++){if(h.removed.includes(o))continue;let u=h.gens.split("").filter(f=>!h.transforms[f].includes(o)).join("");const a=[...h.removed,o],v=a.sort().join("-");let d=!1;if(!c.solved.has(v)){d=!0;const f={dimensions:h.dimensions-1,coxeter:ue(c.coxeter,a),stellation:ue(c.stellation,a),mirrors:Z(c.mirrors,a),gens:u,subgens:c.subgens.split("").filter(w=>u.includes(w)).join(""),rels:c.rels.filter(w=>w.toLowerCase().split("").every(m=>u.includes(m))),transforms:Object.fromEntries(Object.entries(h.transforms).filter(([w])=>u.includes(w))),removed:a,key:v,limit:l.curvature>0?5e3:1e3};ve(f),f.facet=Array.from(f.words.values()),c.solved.set(v,f)}const s=c.solved.get(v),i=c.hosotope&&s.removed.length&&s.removed[0]===c.hosotope.index&&s.removed.every((f,w)=>w===0||f===(s.removed[w-1]+1)%e);if($e(s.facet,s.dimensions,c.transforms)||i){if(d&&s.dimensions===2){const w=[...s.facet],m=s.gens.split("").every(g=>c.mirrors[c.transforms[g][0]]),x=s.gens.split("").every(g=>c.transforms[g].length===2);for(let g=0;g<w.length;g++)s.facet[g]=w[x?g:be(g,s.facet.length,m)]}const f={new:d,children:[],...s};f.removed.length<e?h.children.push(te(e,t,r,n,l,f,c)):h.children.push(f)}else b.push(s)}if(h.children.length===0&&h.dimensions>0){console.debug("No leaf found, digging deeper",h.gens);for(let o=0;o<b.length;o++){const u=b[o],a={new:!1,children:[],...u};a.removed.length<e?h.children.push(te(e,t,r,n,l,a,c)):h.children.push(a)}}if(h===c&&n.some(o=>W(o))){let o="",u=[];for(let a=1;a<e;a++)if(a===1){const v=[],d=x=>{x.dimensions===1?x.new&&v.push(x):x.children.forEach(d)};d(h);const s=Object.entries(c.transforms).filter(([x,g])=>g.length!==1||n[g[0]]).filter(([x,g])=>g.length!==3||t[g[0]][g[1]]!==2).map(([x])=>x);for(let x=0;x<v.length;x++){const g=v[x];s.includes(g.gens)&&s.splice(s.indexOf(g.gens),1)}const i=u;u=[];const f=P(1).map((x,g)=>x.map((j,V)=>g===V?1:g===V+1||g===V-1?4:2)),w=P(1).map(x=>x.map(()=>1)),m=ce(1).map(()=>"s");for(let x=0;x<s.length;x++){const g=s[x],j={dimensions:1,coxeter:f,stellation:w,mirrors:m};j.gens=g;const V={new:!0,done:!0,key:`se-${g}`,...j,facet:["",g],children:x===0?i:[]};u.push(V)}}else if(a===2){const v=j=>P(2).map((V,k)=>V.map((S,z)=>k===z?1:k===z+1||k===z-1?j:2)),d=j=>P(2).map(V=>V.map(()=>j)),s={},i=Object.entries(c.transforms).filter(([j,V])=>V.length===2),f=Object.entries(c.transforms).filter(([j,V])=>V.length===3);let w="";const m=j=>{j.dimensions===2?j.new&&j.gens.length===1&&(w+=j.gens):j.children.forEach(m)};m(h),o+=w;for(let j=0;j<i.length;j++){const[V,k]=i[j];for(let S=j+1;S<i.length;S++){const[z,A]=i[S];k[k.length-1]===A[A.length-1]&&(s[V+z]={facet:["",V,z]},o+=V+z)}}for(let j=0;j<f.length;j++){const[V,k]=f[j];for(let S=j+1;S<f.length;S++){const[z,A]=f[S];if(k[0]===A[0]&&t[k[1]][A[1]]!==2&&(t[k[1]][k[0]]!==2||t[k[0]][A[1]]!==2)){const M=t[k[1]][A[1]],E=n[A[1]]||t[k[0]][A[1]]!==2,K=[];for(let Q=0;Q<M;Q++)E&&K.push(V+(z+V).repeat(M-Q)),K.push((z+V).repeat(Q));s[V+z]={facet:K,snubCoxeter:v(K.length),snubMirrors:["s",E?1:0]},o+=V+z}}for(let S=0;S<i.length;S++){const[z,A]=i[S];k[0]===A[1]&&(t[k[1]][A[0]]!==2||t[k[1]][A[1]]!==2||n[k[1]])&&(n[k[1]]||t[k[1]][A[0]]!==2&&t[k[1]][A[1]]!==2?s[V+z]={facet:["",V,V+z,z],snubCoxeter:v(4)}:t[k[1]][A[0]]!==2?s[V+z]={facet:["",z,V+z]}:s[V+z]={facet:["",V,z]},o+=V+z)}}const x=u;u=[],Object.keys(s).length||(s[""]=[""]);const g=Object.entries(s);for(let j=0;j<g.length;j++){const[V,{facet:k,snubCoxeter:S,snubStellation:z,snubMirrors:A}]=g[j],M={dimensions:2,coxeter:S||v(3),stellation:z||d(1),mirrors:A||["s","s"]};M.gens=V;const E={new:k.length!==1,done:!0,key:`sf-${V}`,...M,facet:k,children:j===0?x:[]};u.push(E)}}else{const v=P(a).map((m,x)=>m.map((g,j)=>x===j?1:2)),d=P(a).map(m=>m.map(()=>1)),s=ce(a).map(()=>"s"),i=u;u=[];let f=o;const w={new:!0,done:!0,key:`s${a}`,gens:h.gens.split("").filter(m=>!f.includes(m)).join(""),dimensions:a,coxeter:v,stellation:d,mirrors:s,facet:[],children:i};u.push(w)}h.children.push(...u)}return h},q=["vertex","edge","face"],ne=(e,t,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+(t-e)*6*r:r<1/2?t:r<2/3?e+(t-e)*(2/3-r)*6:e),C=(e,t,r)=>{let n,l,h;if(t===0)n=l=h=r;else{const c=r<.5?r*(1+t):r+t-r*t,b=2*r-c;n=ne(b,c,e+1/3),l=ne(b,c,e),h=ne(b,c,e-1/3)}return[n,l,h]},J=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],qe={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>C(e.length*.03%1,.75,.7)},Re=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>C((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>C(...J[e.length%J.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},shading:!1,face:{opacity:.9},transparency:"oit",color:({word:e,subShape:t,type:r})=>r==="face"?C((t*.23+e.length*.07)%1,1,.58):[0,0,0]},synthwave:{background:[...C(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>C((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>C(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>C(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:r,size:n})=>t==="face"?C((e-2)*.21%1,1,.8):C(r/n,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?C(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:r,draw:n})=>{const l=e.length?le(e[e.length-1])/r:0;return C(l%1,1,t==="face"?.6:n.face?0:.8)}},harlequin:{background:[...C(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:r})=>{const n=e.split("").map(h=>le(h)).reduce((h,c)=>h+c,0),l=[...J[n%J.length]];return t%2&&(l[2]*=.5),C(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>C(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>C((e||0)/(t||1),.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},glass:{background:[0,0,0,1],transparency:"blend",opacity:.2,ambient:0,diffuse:"fresnel",specular:"blinn-phong",face:{shininess:16,diffuse:!1},color:({subShape:e,word:t,type:r})=>r!=="vertex"?C((e*.21+t.length*.03)%1,1,.8):[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:r})=>C(e.length*.06%1,1,t==="face"?.6:r.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-je(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...qe,...t,transparent:{}}])),Be=(e,t,r,n)=>{const l=[],h=[],c=e>4?9:e;for(let b=0;b<t.length;b++){const o=t[b];if(!o){l.push(null),h.push(null);continue}const u=[new Float32Array(o.size*3)];for(let d=0;d<b+1;d++)u.push(new Float32Array(o.size*c));let a=0;const v=o.objects.concat(o.partials);for(let d=0;d<v.length;d++){const s=v[d];if(s)for(let i=0;i<s.length;i++){const f=s[i];for(let m=0;m<f.vertices.length;m++){const x=f.vertices[m];for(let g=0;g<x.length;g++)u[m+1][a*c+g]=x[g]}const w=Re[r].color({word:f.word,key:f.key,subShape:d%o.objects.length,faceIndex:f.faceIndex,faceSize:f.faceSize,dimensions:e,draw:n,idx:a,size:o.size,type:q[b],dual:!!f.dual});u[0][a*3+0]=w[0],u[0][a*3+1]=w[1],u[0][a*3+2]=w[2],a++}}l.push(u),h.push({start:o.start,size:o.size})}return{infos:h,data:l}},De=(e,t,r,n)=>{const l=[],h=[];if(e===0)for(const[c,b]of t.currentWords)l.push({word:b,vertices:[t.vertices.get(c)]}),t.currentWords.delete(c);else if(e===1)for(const[c,b]of t.currentWords){const o={word:b,vertices:[]};for(let u=0;u<t.facet.length;u++){const a=F(n.root,b+t.facet[u]);a&&n.root.vertices.has(a)&&o.vertices.push(n.root.vertices.get(a))}if(!(o.vertices.length<e+1)){if(n.root.hosotope){let u;n.root.hosotopeVertex?u=b.split("").reverse().reduce((a,v)=>T(a,n.root.rootNormals[n.root.gens.indexOf(v)],n.root.metric),n.root.hosotopeVertex):(n.root.hosotopeVertex=U(Y(n.root.rootVertices)[n.root.hosotope.index],n.root.metric),u=n.root.hosotopeVertex),l.push({...o,vertices:[o.vertices[0],u]}),l.push({...o,vertices:[u,o.vertices[1]]})}else l.push(o);t.currentWords.delete(c)}}else if(e===2){n.root.hosotopePair=null;for(const[c,b]of t.currentWords){const o=b.length%2?0:1,u=[];for(let s=0;s<t.facet.length;s++){const i=F(n.root,b+t.facet[s]);i&&n.root.vertices.has(i)&&u.push(n.root.vertices.get(i))}if(n.root.hosotope){let s;if(n.root.hosotopePair)s=n.root.hosotopePair.map(i=>b.split("").reverse().reduce((f,w)=>T(f,n.root.rootNormals[n.root.gens.indexOf(w)],n.root.metric),i));else{const i=U(Y(n.root.rootVertices)[n.root.hosotope.index],n.root.metric);n.root.hosotopePair=[i,T(i,n.root.rootNormals[n.root.hosotope.index],n.root.metric)],s=n.root.hosotopePair}u.splice(1,0,s[0]),u.push(s[1])}if(u.length<e+1)continue;const a=u.length<t.facet.length;if(a||t.currentWords.delete(c),u.length===3&&!u.reduce((s,i)=>N(s,i),new Array(r.dimensions).fill(0)).every(s=>B(s)<1e-12)){o&&([u[2],u[1]]=[u[1],u[2]]);const s={word:b,vertices:u,faceIndex:0,faceSize:3,partial:a};a?h.push(s):l.push(s);continue}let v=new Array(r.dimensions).fill(0);for(let s=0;s<u.length;s++){const i=u[s];v=N(v,i)}v=I(v,1/u.length);const d=[];if(v.every(s=>B(s)<1e-12)){const s=u[0].map((i,f)=>i===0?f:null).filter(i=>i!==null);if(!s.length)d.push(v);else for(let i=0;i<s.length;i++){const f=s[i];for(let w=-1;w<2;w+=2){const m=v.map((x,g)=>g===f?w:x);d.push(m)}}}else d.push(v);for(let s=0;s<u.length;s++)for(let i=0;i<d.length;i++){const f={word:b,vertices:[u[(s+o)%u.length],u[(s+(1-o))%u.length],d[i]],faceIndex:s,faceSize:u.length,partial:a};a?h.push(f):l.push(f)}}}return{objects:l,partials:h}},se=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],se(e.slice(1),t);const r=t[t.length-1],n=e.find(h=>h[0]===r||h[1]===r);if(!n)return t;const l=e.indexOf(n);return e.splice(l,1),n[0]===r?t.push(n[1]):t.push(n[0]),se(e,t)},He=(e,t,r,n)=>{const l=[],h=t.children.find(o=>o.key===r.replace("d","")),c=[],b=o=>{o.dimensions===e&&c.push(o.facet),o.children.forEach(b)};b(h),t.children.filter(o=>o.key.includes("s")).forEach(b);for(let o=0;o<c.length;o++){const u=c[o];if(u.length<2)continue;const a=[];for(let d=0;d<u.length;d++){const s=F(n,u[d]);s&&n.vertices.has(s)&&a.push(n.vertices.get(s))}let v=new Array(a[0].length).fill(0);for(let d=0;d<a.length;d++){const s=a[d];v=N(v,s)}v=I(v,1/a.length),l.push(H(v,v))}return ke(...l)},pe=(e,t,r,n,l,h)=>{var u,a,v;const{space:c}=n.root,b=[],o=[];if(e===0){n.root.dualVertices=n.root.dualVertices||new Map;for(const[d,s]of t.currentWords){const i=[];for(let x=0;x<t.facet.length;x++){const g=F(n.root,s+t.facet[x]);g&&n.root.vertices.has(g)&&i.push(g)}if(i.length<2)continue;const f=i.length<t.facet.length;let w=new Array(r.dimensions).fill(0);for(let x=0;x<i.length;x++){const g=n.root.vertices.get(i[x]);w=N(w,g)}if(w=U(w,c.metric),c.curvature){let x=0;if(l>=0){let g=1;l>0&&l<r.dimensions-1&&(t.midradius||(t.midradius=He(l,r,h,n.root)),g=t.midradius);const j=p(c.metric,w);for(let V=0;V<i.length;V++){const k=n.root.vertices.get(i[V]);x+=H(j,k)}x/=g*i.length,l===r.dimensions-1&&(x=1/x)}else x=1;w=I(w,c.curvature/x)}const m={word:s,vertices:[w],dual:!0,partial:f};n.root.dualVertices.set(`${h}#${s}`,{vertex:w,facet:i,partial:f}),f?o.push(m):(b.push(m),t.currentWords.delete(d))}}else if(e===1){if(!((u=n.root.dualVertices)!=null&&u.size))return{objects:b,partials:o};n.root.dualEdges=n.root.dualEdges||new Map;for(const[d,s]of t.currentWords){const i=[];for(let g=0;g<t.facet.length;g++){const j=F(n.root,s+t.facet[g]);j&&n.root.vertices.has(j)&&i.push(j)}if(!i.length)continue;let f=i.length<t.facet.length;const w=[],m=[];for(const[g,{vertex:j,facet:V,partial:k}]of n.root.dualVertices.entries())if(i.every(S=>V.includes(S))&&(w.push(j),m.push(g)),f=f||k,w.length===2)break;if(w.length!==2)continue;const x={word:s,vertices:w,dual:!0,partial:f};n.root.dualEdges.set(`${h}#${s}`,{edge:m,partial:f}),f?o.push(x):(b.push(x),t.currentWords.delete(d))}}else if(e===2){if(!((a=n.root.dualVertices)!=null&&a.size)||!((v=n.root.dualEdges)!=null&&v.size))return{objects:b,partials:o};for(const[d,s]of t.currentWords){const i=[];for(let S=0;S<t.facet.length;S++){const z=F(n.root,s+t.facet[S]);z&&n.root.vertices.has(z)&&i.push(z)}if(i.length<t.facet.length)continue;let f=!1;const w={},m=[];for(const[S,{vertex:z,facet:A,partial:M}]of n.root.dualVertices.entries())(i.every(E=>A.includes(E))||r.dimensions===2)&&(w[S]=z,m.push(S),f=f||M);if(m.length<3)continue;const x=[];for(const{edge:S,partial:z}of n.root.dualEdges.values())m.includes(S[0])&&m.includes(S[1])&&(f=f||z,x.push([...S]));if(x.length<3)continue;const g=[],j=se(x);if(j.length<4)continue;j[0]===j[j.length-1]&&j.pop();for(let S=0;S<j.length;S++){const z=j[S];g.push(w[z])}if(g.length===3){const S={word:s,vertices:g,dual:!0,partial:f};f?o.push(S):(b.push(S),t.currentWords.delete(d));continue}const V=s.length%2?0:1;let k=new Array(r.dimensions).fill(0);for(let S=0;S<g.length;S++){const z=g[S];k=N(k,z)}k=I(k,1/g.length);for(let S=0;S<g.length;S++){const z={word:s,vertices:[g[(S+V)%g.length],g[(S+(1-V))%g.length],k],dual:!0,faceIndex:S,faceSize:g.length,partial:f};f?o.push(z):(b.push(z),t.currentWords.delete(d))}}}return{objects:b,partials:o}},Ue=(e,t,r)=>{const n=[],l=[],h=[];for(const[c,b]of e.currentWords){let o;if(b===""){const u=Y(r.rootVertices);e.fundamentalVertices=new Map,o=u.map(a=>U(a,r.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",o)}else{o=[...e.fundamentalVertices.get(b.slice(1))];const u=e.gens.indexOf(b[0]);for(let a=0;a<o.length;a++)o[a]=T(o[a],r.rootNormals[u],r.metric)}for(let u=0;u<o.length;u++){const a=X(o[u]);e.hashes.vertex.has(a)||(n.push({word:b,cosetId:c,vertices:[o[u]]}),e.hashes.vertex.add(a));for(let v=u+1;v<o.length;v++){const d=[o[u],o[v]].sort((s,i)=>{for(let f=0;f<s.length;f++){if(s[f]<i[f])return-1;if(s[f]>i[f])return 1}return 0}).map(s=>X(s)).join("-");e.hashes.edge.has(d)||(l.push({word:b,cosetId:c,vertices:[o[u],o[v]]}),e.hashes.edge.add(d));for(let s=v+1;s<o.length;s++){const i=[o[u],o[v],o[s]].sort((f,w)=>{for(let m=0;m<f.length;m++){if(f[m]<w[m])return-1;if(f[m]>w[m])return 1}return 0}).map(f=>X(f)).join("-");e.hashes.face.has(i)||(h.push({word:b,cosetId:c,vertices:[o[u],o[v],o[s]]}),e.hashes.face.add(i))}}e.fundamentalVertices.set(b,o)}e.currentWords.delete(c)}return[n,l,h]},Le=(e,t,r,n,l,h,c,b,o)=>{c.root.lasts||(c.root.lasts=new Array(3).fill(0));const u=[];if(l){const a=Ue(c.root,e,r);for(let v=0;v<a.length;v++)n[q[v]]?(u.push({start:c.root.lasts[v],size:a[v].length,objects:[a[v]],partials:[]}),c.root.lasts[v]+=a[v].length):u.push(null)}else for(let a=0;a<3;a++){if(!c[a]||!h&&!n[q[a]]){u.push(null);continue}const v={start:c.root.lasts[a],size:0,objects:[],partials:[]};for(let d=0;d<c[a].detail.length;d++){const s=c[a].detail[d],i=t.get(s.key);if(!s.dual&&b.includes(s.key)||!i.compute||!i.currentWords.size){v.objects.push(null),v.partials.push(null);continue}const{objects:f,partials:w}=s.dual?pe(a,i,e,c,o,s.key):De(a,i,e,c);!n[q[a]]||b.includes(s.key)||(v.objects.push(f),v.size+=f.length+w.length,c.root.lasts[a]+=f.length,v.partials.push(w))}u.push(v)}return u},we=(e,t,r,n,l,h,c,b,o=[])=>{o.done=!0;let u=!0;for(const d of r.values())if(d.compute&&!d.done){u=!1;break}const a=(d,s,i)=>{if(s.done===!1||s.facet.length===0)return s.gens.includes(d);const f=[],w=[];for(const m of s.facet){const x=F(i,m);if(!x)return null;const g=F(i,d+m);if(!g)return null;f.push(x),w.push(g)}return f.sort((m,x)=>m-x),w.sort((m,x)=>m-x),f.every((m,x)=>m===w[x])},v=d=>{var m;const s=c||h?t.dimensions-d.dimensions-1:d.dimensions;d.children.forEach(v);const i=b[s],f=q[s],w=`${c?"d":h?"f":""}${d.key}`;if(d!=null&&d.new){o[s]||(o[s]={dimensions:s,processing:l[f]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const x=n.eigens.values;if(!r.has(w)){let k="";if(d.dimensions===0)k=t.subgens;else for(let z=0;z<t.gens.length;z++){const A=a(t.gens[z],d,o.root);if(A===null)return;A&&(k+=t.gens[z])}if((m=o.root)!=null&&m.hosotope){if(d.dimensions===1)k=k.replace(o.root.hosotope.gen,"");else if(d.dimensions===2){let z=o.root.coxeter[o.root.hosotope.index].findIndex((M,E)=>E!==o.root.hosotope.index&&M!==2);z<0&&(z=o.root.hosotope.index<o.root.dimensions-1?o.root.hosotope.index+1:0);const A=Object.entries(o.root.transforms).find(([M,E])=>E.includes(z))[0];k=k.replace(A,o.root.hosotope.gen)}}const S={...t,key:w,subgens:k,facet:d.facet,subdimensions:s,mirrors:d.mirrors,compute:i,space:n,...d.dimensions===0&&!h?{rootVertex:n.rootVertex,rootNormals:n.rootNormals,rootVertices:n.rootVertices,metric:n.metric}:{}};r.set(w,S)}const g=r.get(w);d.dimensions===0&&(o.root=g),g.done||(g.limit=i?e:u?1e3:1,f==="edge"&&n.curvature<=0&&(g.limit*=1.75),i?(ve(g),x.some(k=>k<=0)?g.count=1/0:g.count=g.cosets.size):x.some(k=>k<=0)?(g.count=1/0,g.done=!0):g.limit&&(g.count=Te(g)));const j=h?d.mirrors.map(()=>0):d.mirrors;o[s].detail.push({key:w,coxeter:d.coxeter,stellation:d.stellation,mirrors:j,dual:c,fundamental:h,count:g.count,done:g.done});const V=o[s].aggregated.find(({coxeter:k,stellation:S,mirrors:z})=>D(k,d.coxeter)&&D(S,d.stellation)&&D(z,j));V?(V.done=V.done&&g.done,V.count+=g.count,V.key+=","+w):o[s].aggregated.push({key:w,coxeter:d.coxeter,stellation:d.stellation,mirrors:j,count:g.count,done:g.done}),l[f]&&g.words&&(o[s].processing+=g.words.size),o[s].count+=g.count,o[s].done=o[s].done&&g.done,o[s].dual=c,o[s].fundamental=h,o.done=o.done&&g.done}};return t.children.forEach(v),o.size=h?o.root.words.size:o.root.vertices.size,o};let R,O;onmessage=({data:{first:e,space:t,dimensions:r,coxeter:n,stellation:l,mirrors:h,ambiance:c,draw:b,batch:o,hidden:u,reciprocation:a}})=>{try{e&&(R=new Map,O=te(r,n,l,h,t));const v=h.every(g=>!g),d=h.some(g=>ze(g)),s=h.some(g=>Oe(g)),i=v?{[r-1]:!0}:d?{[r-1]:!0,[r-2]:b.edge||b.face,[r-3]:b.face,0:!0}:{0:!0,1:b.edge,2:b.face},f=we(o,O,R,t,b,v,d&&!s,i);if(s&&we(o,O,R,t,b,v,d,i,f),O.dimensions===2){O.currentWords=new Map([[1,""]]);const g=O.gens.split("").every(k=>O.mirrors[O.transforms[k][0]]),j=O.gens.split("").every(k=>O.transforms[k].length===2),V=Array.from(f.root.words.values());O.facet=new Array(V.length);for(let k=0;k<V.length;k++)O.facet[k]=V[j?k:be(k,O.facet.length,g)];O.done=!0,R.set("f",{...O,subgens:O.subgens,facet:O.facet,subdimensions:O.dimensions,mirrors:O.mirrors,compute:!0}),f[2]={dimensions:2,processing:1,count:1,detail:[{key:"f",coxeter:O.coxeter,stellation:O.stellation,mirrors:O.mirrors,dual:d,count:1,done:!0}],aggregated:[{key:"f",coxeter:O.coxeter,stellation:O.stellation,mirrors:O.mirrors,dual:d,count:1,done:!0}],done:!0}}const w=Le(O,R,t,b,v,d,f,u,a),{infos:m,data:x}=Be(O.dimensions,w,c,b);f.root=void 0,postMessage({polytope:f,infos:m,data:x},x.flat(1).filter(g=>g).map(g=>g.buffer))}catch(v){postMessage({error:v.message})}}})();
