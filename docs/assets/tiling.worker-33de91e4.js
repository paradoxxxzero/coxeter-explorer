(function(){"use strict";const{abs:g,cos:R,sin:fe,cosh:ae,sinh:he,acos:ue,acosh:ge,min:de,max:we,round:z,sqrt:p,sign:m,floor:pe,log:me,PI:E}=Math,c={coxeter:null,vertices:[],edges:[],words:new Map,rules:new Set,edgeHashes:new Set,vertexHashes:new Set,wordsToConsider:[],rootVertices:null,rootVertex:null,gram:null,mirrors:null},F=e=>{Object.assign(c,e)},b=(e,n)=>{const t=e.length-n.length;return t!==0?Math.sign(t):e<=n?-1:1},I=(e,n)=>{const t=e.length-n.length;return t!==0?Math.sign(t):e<=n?1:-1},O=(e,n)=>{const t=new Map,r=Object.keys(e).sort(n);for(let o=0;o<r.length;o++){const s=r[o],[l,i]=[s,e[s]].sort(n);t.has(i)?t.set(i,[l,t.get(i)].sort()[0]):t.set(i,l)}return t},h=(e,n)=>{if(n.length===0||e.size===0)return n;const t=e._re_cache||new RegExp([...e.keys()].join("|"),"g");let r=n;do n=r,r=n.replace(t,o=>e.get(o));while(r!==n);return n},q=(e,n)=>{const t=new Map(e);for(e=[...e.entries()];e.length>0;){y();const[r,o]=e.pop();t.delete(r);const s=h(t,r),l=h(t,o);let i=!0;if(s===l)i=!1;else{const[f,a]=[s,l].sort(n);a!==r&&f!==o&&(t.set(a,f),e.push([a,f]),i=!1)}i&&t.set(r,o)}return t},L=function(e,n){if(n.length===0)return null;const t=Math.max(0,e.length-n.length);for(let r=t;r<e.length;r++)if(e[r]===n[0]&&e.slice(r+1)===n.slice(1,e.length-r))return{prefix:e.slice(0,r),suffix:n.slice(e.length-r)}},K=function(e,n){if(n.length===0)return null;for(let t=0;t<e.length-n.length+1;t++)if(e.slice(t,t+n.length)===n)return{prefix:e.slice(0,t),suffix:e.slice(t+n.length)}},N=(e,n,t,r)=>{const o=L(e,t);if(o)return{s1:o.prefix+r,s2:n+o.suffix};const s=K(e,t);if(s)return{s1:n,s2:s.prefix+r+s.suffix}},P=(e,n)=>{const t=new Map(e),r=[...e.entries()];for(let o=0;o<r.length;o++){y();const[s,l]=r[o];for(let i=0;i<r.length;i++){if(o===i)continue;const[f,a]=r[i],u=N(s,l,f,a);if(u){const v=h(e,u.s1),_=h(e,u.s2);if(v!==_){const[ie,ce]=[v,_].sort(n);t.set(ce,ie)}}}}return t},$=(e,n)=>P(q(e,n),n),G=(e,n)=>{if(e.size!==n.size)return!1;const t=e.keys();for(;;){const{done:r,value:o}=t.next();if(r)return!0;if(e.get(o)!==n.get(o))return!1}},J=(e,n)=>{for(e=O(e,n);;){const t=$(e,n);if(G(t,e))return t._re_cache=new RegExp([...t.keys()].join("|"),"g"),t;e=t}};let x,C;const y=()=>{if(performance.now()-x>C)throw new Error("Timeout")},Q=e=>{const n=[50,100,250,500].map(t=>[t,t]).flat();for(let t=0;t<n.length;t++){C=n[t];try{return x=performance.now(),J(e,t%2?b:I)}catch(r){if(r.message!=="Timeout")throw r}}throw new Error("Timeout")},d=e=>String.fromCharCode(97+e),U=(e,n)=>{const t={};for(let r=0;r<e;r++)t[d(r).repeat(2)]="";for(let r=1;r<e;r++)for(let o=0;o<r;o++)t[(d(o)+d(r)).repeat(n[r][o])]="";return Q(t)},X=e=>h(c.rules,e),k=e=>{if(e.length===1)return e[0][0];let n=0;for(let t=0;t<e.length;t++){const r=new Array(e.length-1).fill().map(()=>new Array(e.length-1).fill(0));for(let s=1;s<e.length;s++)for(let l=0;l<e.length;l++)l<t?r[s-1][l]=e[s][l]:l>t&&(r[s-1][l-1]=e[s][l]);const o=t%2===0?1:-1;n+=e[0][t]*o*k(r)}return n},Y=e=>{const n=k(e);return g(n)<1e-8?0:m(n)},T=(e,n,t)=>{let r=0;for(let o=0;o<e.length;o++)r+=e[o]*n[o]*(o===e.length-1&&t||1);return r},Z=(e,n,t)=>{e=e.slice();const r=2*T(e,n,t);for(let o=0;o<e.length;o++)e[o]-=r*(t||o!==e.length-1?n[o]:0);return e},D=(e,n)=>{if(e=e.slice(),n===0){for(let r=0;r<e.length;r++)e[r]/=e[e.length-1];return e}const t=(n===-1&&m(e[e.length-1])||1)/p(g(T(e,e,n)));for(let r=0;r<e.length;r++)e[r]*=t;return e},ee=(e,n)=>{const t=e[0].length,r=new Array(t).fill().map(()=>new Array(t).fill(0));r[0][0]=1;for(let o=1;o<t;o++){for(let s=0;s<o;s++){let l=0;for(let i=0;i<s;i++)l+=r[o][i]*r[s][i];r[o][s]=(e[o][s]-l)/r[s][s]}r[o][o]=p(g(1-r[o].slice(0,o).reduce((s,l)=>s+l*l,0)))}return r[r.length-1][r.length-1]=n?r[r.length-1][r.length-1]*n:1,r},j=(e,n,t)=>{const r=n.length,o=new Array(r);for(let s=0;s<r;s++){let l=0;for(let i=0;i<s;i++)l+=e[s][i]*o[i];o[s]=(n[s]-l)/e[s][s]}return o[o.length-1]*=t||1,D(o,t)},te=(e,n)=>{for(let t=0;t<e.length;t++)if(g(e[t]-n[t])>1e-8)return!1;return!0},ne=e=>{let n=c.rootVertex;for(let t=e.length-1;t>=0;t--)n=Z(n,c.mirrors[e.charCodeAt(t)-97],c.curvature);return n},M=new ArrayBuffer(8),re=new Float64Array(M),A=new Int32Array(M);function oe(e){return~~e===e?~~e:(re[0]=e,A[0]^A[1])}const H=10**4,w=e=>{let n="";for(let t=0;t<e.length;t++)n+=oe(z(e[t]*H)/H).toString(),t<e.length-1&&(n+="|");return n},S=(e,n,t,r,o)=>{const s=U(e,t);if(n)for(let i=0;i<e;i++)for(let f=0;f<e;f++)t[i][f]/=r[i][f];const l={coxeter:t,vertices:[],edges:[],words:new Map,edgeHashes:new Set,vertexHashes:new Set,wordsToConsider:[""],rootVertices:null,rootVertex:null,rules:s};l.gram=l.coxeter.map(i=>i.map(f=>-R(E/f))),l.curvature=Y(l.gram),l.mirrors=ee(l.gram,l.curvature),l.rootVertices=l.mirrors.map((i,f)=>j(l.mirrors,new Array(e).fill(0).map((a,u)=>f===u?l.curvature||1:0),l.curvature)),l.rootVertex=j(l.mirrors,o,l.curvature),l.words.set("",l.rootVertex),F(l)},V=(e,n,t)=>{const r=String.fromCharCode(97+n);if(e.slice(-1)===r)return;const o=X(e+r);if(c.words.has(o)){const l=c.words.get(o);B(e,o,t,l);return}const s=ne(o);return c.words.set(o,s),W(s,e),B(e,o,t,s),o},se=()=>{let e=[""],n,t=25;const r=c.rootVertex.length;W(c.rootVertex,"");do{n=[];for(let o=0;o<c.wordsToConsider.length;o++){const s=c.wordsToConsider[o],l=c.words.get(s);for(let i=0;i<r-1;i++){const f=V(s,i,l);f&&n.push(f)}}e.push(...n),c.wordsToConsider=n}while(n.length&&t--);if(t<0)throw new Error("Could not tile fundamental chamber");c.wordsToConsider=e},le=()=>{let e;e=[];for(let n=0;n<c.wordsToConsider.length;n++){const t=c.wordsToConsider[n],r=c.words.get(t);for(let o=0;o<r.length;o++){const s=V(t,o,r);s&&e.push(s)}}c.wordsToConsider=e};function W(e,n){const t=w(e);c.vertexHashes.has(t)||(c.vertexHashes.add(t),c.vertices.push({vertex:e,word:n}))}function B(e,n,t,r){const o=w(t),s=w(r);if(o===s)return;const l=[o,s].sort().join("/");if(!c.edgeHashes.has(l)&&(c.edgeHashes.add(l),!te(t,r))){const i=t.slice(),f=r.slice();return c.edges.push({start:i,end:f,word:e}),!0}}onmessage=({data:{dimensions:e,coxeter:n,coxeterDiv:t,stellation:r,mirrors:o,currentOrder:s,uuid:l}})=>{try{if(s===0){S(e,r,n,t,o);try{se()}catch(i){i.message==="Could not tile fundamental chamber"&&S(e,r,n,t,o)}}else c.vertices=[],c.edges=[],le();postMessage({curvature:c.curvature,vertices:c.vertices,edges:c.edges,currentOrder:s+1,uuid:l})}catch(i){postMessage({error:i.message,uuid:l})}}})();
