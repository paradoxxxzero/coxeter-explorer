(function(){"use strict";const T=e=>e!==""&&e!=="x",xe=e=>e==="m"||e==="b"||e==="c"||e==="d",ye=e=>e==="c"||e==="d",q=e=>e==="s"||e==="b"||e==="d",_=(e,t=null,n=1,s=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(s)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,h)=>e+h*n)},$=(e,t)=>e.length!==t.length?!1:e.every((n,s)=>Array.isArray(n)?$(n,t[s]):n===t[s]),D=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},R=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]+t[s];return n},ke=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]-t[s];return n},m=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]*t;return n},ze=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let s=0;s<e.length;s++)t[n].push(e[s][n])}return t},H=(e,t)=>{const n=new Array(e.length);for(let s=0;s<e.length;s++){let l=0;for(let h=0;h<e[0].length;h++)l+=e[s][h]*t[h];n[s]=l}return n},Se=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},I=e=>{const t=new Array(e).fill(1);return Se(t)},X=(e,t)=>e.filter((n,s)=>!t.includes(s)),oe=(e,t)=>X(e,t).map(n=>X(n,t)),re=(e,t,n)=>ke(e,m(H(Ce(n),t),2*D(H(Ve(n),e),t))),ie=(e,t)=>{if(t.some((s,l)=>s.some((h,f)=>l===f&&h===0)))return m(e,1/e[e.length-1]);let n=D(H(t,e),e);return n===0&&(n=1e-16),m(e,-1/Ae(ce(n)))},Ve=e=>e.map((t,n)=>t.map((s,l)=>n===l&&s===0?1:s)),Ce=e=>e.map(t=>t.map(n=>ce(n))),L=(e,t,n,s)=>{const l=G/e,h=G/t,f=G/n;return le(G/Me(-N(l)*N(f)+Q(l)*Q(f)*((N(h)-N(s*l)*N(f))/(Q(s*l)*Q(f)))))},{abs:ce,cos:N,sin:Q,tan:Qe,cosh:Ge,sinh:Je,acos:Me,acosh:Ke,atan:Xe,atan2:Ye,min:Ze,max:pe,round:le,sqrt:Ae,cbrt:et,sign:tt,ceil:nt,floor:st,log:ot,exp:rt,hypot:it,pow:We,PI:G}=Math,Oe=(...e)=>e.reduce((t,n)=>t+n,0)/e.length,fe=new ArrayBuffer(8),qe=new Float64Array(fe),ue=new Int32Array(fe);function Ee(e){return~~e===e?~~e:(qe[0]=e,ue[0]^ue[1])}const ge=10**4,Y=e=>{let t="";for(let n=0;n<e.length;n++)t+=Ee(le(e[n]*ge)/ge).toString(),n<e.length-1&&(t+="|");return t},M=e=>String.fromCharCode(97+e),de=e=>e.charCodeAt(0)-97,Z=(e,t="",n=[])=>{const s=[];for(let l=0;l<e.length;l++){const[h,f]=e[l],a=e.filter((c,v)=>v!==l);if(n.length){const c=n[n.length-1];if(f.some(v=>v===c)){const v=f[1]===c,g=v?h.toUpperCase():h,i=v?[...f].reverse():f;if(i[1]===n[0])return[t+g];a.length&&s.push(...Z(a,t+g,n.concat(i.slice(1))))}}else s.push(...Z(a,h,f))}return s},U=(e,t,n,s,l,h=[])=>{let f="";const a=s.map((o,r)=>h.includes(r)||o?"":M(r)).join(""),c={},v=[];for(let o=0;o<e;o++)if(!h.includes(o)){if(!q(s[o])){const r=M(o);f+=r,c[r]=[o],v.push(r.repeat(2))}for(let r=o+1;r<e;r++){if(h.includes(r))continue;const u=t[o][r];if(q(s[o])&&q(s[r])){const d=M((o+1)*e+r);f+=d,c[d]=[o,r],v.push(d.repeat(u))}else if(q(s[o])&&!q(s[r])){const d=M((o+1)*e+r);f+=d,c[d]=[o,r,o],v.push(d.repeat(2)),v.push((d+M(r)).repeat(u%2===0?u/2:u))}else if(!q(s[o])&&q(s[r])){const d=M((o+1)*e+r);f+=d,c[d]=[r,o,r],v.push(d.repeat(2)),v.push((d+M(o)).repeat(u%2===0?u/2:u))}else u>1&&v.push((M(o)+M(r)).repeat(u))}}const g=Object.entries(c).filter(([o,r])=>r.length===3),i=Object.entries(c).filter(([o,r])=>r.length===2);if(i.length>1){const o=Z(i);v.push(...o.map(r=>r.split("").reverse().join("")))}if(g.length>1)for(let o=0;o<g.length;o++){const[r,u]=g[o];for(let d=o+1;d<g.length;d++){const[j,w]=g[d];if(u[1]===w[1]){const x=i.find(([b,V])=>V[0]===u[0]&&V[1]===w[0]);if(x){const b=x[0];v.push(r.toUpperCase()+b.toUpperCase()+j+b)}}else if(u[0]===w[0]){const x=t[u[1]][w[1]];x>1&&v.push((r+j).repeat(x))}}}if(!s.some(o=>q(o))&&!n.every(o=>o.every(r=>r===1))&&l.curvature>0){if(e===4&&n[0][1]>1!=n[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(o=>h.includes(o))||(n[0][1]>1&&v.push("abcdcb".repeat(L(t[0][1],t[1][2],t[0][2],n[0][1]))),n[2][3]>1&&v.push("abcdcb".repeat(L(t[2][3],t[1][2],t[1][3],n[2][3]))));else for(let o=1;o<e;o++)for(let r=0;r<o;r++)if(n[r][o]>1){if(r+2<e){const u=L(t[r+1][o+1],t[r][o],t[r][o+1],n[r][o]);u&&!h.includes(r)&&!h.includes(o)&&!h.includes(r+2)&&v.push((M(r)+M(o)+M(r+2)+M(o)).repeat(u))}if(r-1>=0){const u=L(t[r-1][o-1],t[r][o],t[r-1][o],n[r][o]);u&&!h.includes(r)&&!h.includes(o)&&!h.includes(r-1)&&v.push((M(r)+M(o)+M(r)+M(r-1)).repeat(u))}}}return{gens:f,subgens:a,rels:v,transforms:c}},me=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},O=(e,t)=>{let n=t,s=0;for(;e.quotientMap[n];)s++,n=e.quotientMap[n];return s>1&&(e.quotientMap[t]=n),n},he=(e,t,n)=>{const s=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=O(e,t),n=O(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const h=e.cosets.get(t),f=e.cosets.get(n);e.cosets.delete(n);for(const[a,c]of f)h.has(a)?l.push([h.get(a),c]):h.set(a,c)}return O(e,s)},ae=(e,t,n,s)=>{t=O(e,t);const l=e.cosets.get(t);l.has(n)?he(e,l.get(n),s):l.set(n,s)},J=(e,t,n,s)=>{t=O(e,t);let l;const h=e.cosets.get(t);return h.has(n)?(l=O(e,h.get(n)),s!==void 0&&l!==s&&he(e,s,l)):(s?l=s:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),ae(e,t,n,l),ae(e,l,me(n),t)),l},ve=function(e,t,n){let s=n;for(let l=t.length-1;l>0;l--)s=J(e,s,t[l]);J(e,s,t[0],n)},Ie=function(e){if(!e.words){const t=O(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=O(e,t),s=e.cosets.get(n),l=e.words.get(n);if(s.size<e.gens.length*2)return;const h=[];for(let f=0;f<e.gens.length;f++){const a=e.gens[f],c=O(e,s.get(a));if(!e.words.has(c)){if(e.cosets.get(c).size<e.gens.length*2)return;h.push([a,c])}}e.remaining.shift();for(let f=0;f<h.length;f++){const[a,c]=h[f],v=a+l;if(e.words.set(c,v),e.currentWords.set(c,v),e.lastCoset=c,e.remaining.push(c),e.vertices){let g=e.vertices.get(n);for(let i=0;i<e.transforms[a].length;i++){const o=e.transforms[a][i];g=re(g,e.rootNormals[o],e.metric)}e.vertices.set(c,g)}}}},P=(e,t)=>{let n=O(e,1);for(let s=t.length-1;s>=0;s--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=O(e,l.get(t[s])),e.cosets.get(n).size<e.gens.length*2))return}return n},we=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)ve(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length-e.pointer>0;){const s=e.unvisited[e.pointer++],l=O(e,s);if(!e.seen.has(l)){e.seen.add(l),n=l;break}}if(n===null){e.done=!0;break}for(let s=0;s<e.gens.length;s++)J(e,n,e.gens[s].toUpperCase()),J(e,n,e.gens[s]);for(let s=0;s<e.rels.length;s++)ve(e,e.rels[s],n)}},Pe=e=>(we(e),e.cosets.size),be=e=>(we(e),Ie(e),e),_e=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const s=new Set;for(let l=0;l<e.length;l++){const h=e[l];if(h)for(let f=0;f<h.length;f++){const a=h[f];for(let c=0;c<n[a].length;c++){const v=M(n[a][c]);s.has(v)||s.add(v)}if(s.size>=t)return!0}}return!1},p=(e,t,n,s,l)=>{const h=_(n.length).filter(g=>!l.includes(g));let f="";const a=Object.entries(s),c=a.filter(([g,i])=>i.length===1),v=a.filter(([g,i])=>i.length===3);for(let g=0;g<a.length;g++){const[i,o]=a[g];if(o.length===1){const r=o[0];if(!l.includes(r)&&!v.some(([u,d])=>d[1]===r)){f+=i;continue}if(!T(e[r]))continue;!e[r]&&!h.some(u=>n[u][r]!==2)&&(f+=i)}else if(o.length===2){const r=o[0],u=o[1],d=n[r][u];if(t.gens.includes(i)&&(t.dimensions===1?d===2:d>2)){f+=i;continue}if(!T(e[r])||!T(e[u]))continue}else if(o.length===3&&l.length&&typeof l[l.length-1]=="string"&&l[l.length-1].includes("s")){const r=o[0],u=o[1],d=n[r][u],j=l[l.length-1].split("s").filter(w=>w);for(let w=0;w<j.length;w++){const x=j[w],b=s[Object.keys(s)[x]];if(b.length===3&&o[1]===b[1]){const V=n[b[0]][b[1]];if((t.dimensions===1?![2,4].includes(d)||[2,4].includes(V):d!==2)&&(f+=i),c.find(([y,S])=>b.every(z=>z!==S[0]))){const y=c.find(([S,z])=>z[0]===b[1]);y&&(f+=y[0])}}}}}return f},ee=(e,t,n,s,l,h=null,f=null,a=null,c=new Map)=>{const v=!f;s.every(g=>!g)&&(s=s.map(()=>1)),h=h||s.map((g,i)=>T(g)?null:i).filter(g=>g!==null),f=f||{new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:s,skips:h,...U(e,t,n,s,l,h),quotient:"",facet:[""],children:[]},a=a||f.transforms;for(let g=0;g<e;g++){if(h.includes(g)||h.includes("s"))continue;const i=[...h,g],o=i.sort().join("-");let r=!1;if(!c.has(o)){r=!0;const j={key:o,dimensions:e-i.length,coxeter:oe(t,i),stellation:oe(n,i),mirrors:X(s,i),skips:i,...U(e,t,n,s,l,i)};if(j.gens===null)continue;be(j),c.set(o,j)}const u=c.get(o),d=Array.from(u.words.values());if(_e(d,u.dimensions,u.transforms)){let j=p(s,u,t,a,i),w={new:r,...u,quotient:j,facet:d,children:[]};u.dimensions>0&&(w=ee(e,t,n,s,l,i,w,a,c)),f.children.push(w)}}if(f.children.length===0&&e-h.length>1){console.debug("No leaf found, digging deeper",h);for(let g=0;g<e;g++){if(h.includes(g))continue;const i=[...h,g],o=i.sort().join("-");let u={new:!1,...c.get(o),quotient:"",facet:[""],children:[]};u=ee(e,t,n,s,l,i,u,a,c),f.children.push(u)}}if(v&&s.some(g=>q(g))){let g=[];for(let i=1;i<e;i++){const o=[...h,..._(e-i).map(()=>"s")],r=e-o.length;if(i===1){const u=[],d=k=>{k.children.forEach(d),k.dimensions===1&&k.new&&u.push(k)};d(f);const j=Object.entries(f.transforms).filter(([k,y])=>y.length!==1||s[y[0]]).filter(([k,y])=>y.length!==3||t[y[0]][y[1]]!==2).map(([k])=>k);for(let k=0;k<u.length;k++){const y=u[k];j.includes(y.gens)&&j.splice(j.indexOf(y.gens),1)}const w=g;g=[];const x=I(r).map((k,y)=>k.map((S,z)=>y===z?1:y===z+1||y===z-1?4:2)),b=I(r).map(k=>k.map(()=>1)),V=_(r).map(()=>"s");for(let k=0;k<j.length;k++){const y=j[k];o[o.length-1]=f.gens.indexOf(y)+"s";const S={key:o.join("-"),dimensions:r,coxeter:x,stellation:b,mirrors:V,skips:o,...U(r,x,b,V,l,o)};S.gens=y;const z={new:!0,...S,quotient:p(s,S,t,a,o),facet:["",y],children:k===0?w:[]};g.push(z)}}else if(i===2){const u=I(r).map((k,y)=>k.map((S,z)=>y===z?1:y===z+1||y===z-1?3:2)),d=I(r).map(k=>k.map(()=>1)),j=_(r).map(()=>"s"),w=[],x=Object.entries(f.transforms).filter(([k,y])=>y.length>=2).filter(([k,y])=>y.length!==3||t[y[0]][y[1]]!==2),b=Object.entries(f.transforms).filter(([k,y])=>y.length===1);for(let k=0;k<x.length;k++){const[y,S]=x[k];for(let z=k+1;z<x.length;z++){const[C,E]=x[z];S[S.length-1]===E[E.length-1]&&w.push(["",y,C]),S.length!==E.length&&(S.length===2&&S[0]===E[2]||S.length===3&&S[2]===E[0])&&w.push(["",y.toUpperCase(),C.toUpperCase()])}if(S.length===3)for(let z=0;z<b.length;z++){const[C,E]=b[z];S.every(se=>se!==E[0])&&w.push(["",y,C+y])}}const V=g;g=[],w.length||w.push([""]);for(let k=0;k<w.length;k++){const y=w[k];o[o.length-1]=y.length===1?"s":f.gens.indexOf(y[1].toLowerCase())+"s"+f.gens.indexOf(y[2].replace(y[1],"").toLowerCase());const S={key:o.join("-"),dimensions:r,coxeter:u,stellation:d,mirrors:j,skips:o,...U(r,u,d,j,l,o)},z={new:!0,...S,quotient:p(s,S,t,a,o),facet:y,children:k===0?V:[]};g.push(z)}}else{const u=I(r).map((b,V)=>b.map((k,y)=>V===y?1:2)),d=I(r).map(b=>b.map(()=>1)),j=_(r).map(()=>"s"),w=g;g=[];const x={new:!0,key:o.join("-"),dimensions:r,coxeter:u,stellation:d,mirrors:j,skips:o,...U(r,u,d,j,l,o),facet:[""],quotient:"",children:w};g.push(x)}}f.children.push(...g)}return f},B=["vertex","edge","face"],te=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),A=(e,t,n)=>{let s,l,h;if(t===0)s=l=h=n;else{const f=n<.5?n*(1+t):n+t-n*t,a=2*n-f;s=te(a,f,e+1/3),l=te(a,f,e),h=te(a,f,e-1/3)}return[s,l,h]},K=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Ne={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>A(e.length*.03%1,.75,.7)},Ue=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>A((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>A(...K[e.length%K.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,opacity:.9},transparency:"oit",color:({word:e,type:t})=>t==="face"?A(e.length*.3%1,1,.6):[0,0,0]},synthwave:{background:[...A(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>A((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>A(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>A(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:n,size:s})=>t==="face"?A((e-2)*.21%1,1,.8):A(n/s,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?A(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:s})=>{const l=e.length?de(e[e.length-1])/n:0;return A(l%1,1,t==="face"?.6:s.face?0:.8)}},harlequin:{background:[...A(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const s=e.split("").map(h=>de(h)).reduce((h,f)=>h+f,0),l=[...K[s%K.length]];return t%2&&(l[2]*=.5),A(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>A(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>A(e/t,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>A(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-We(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Ne,...t,transparent:{}}])),Be=(e,t,n,s)=>{const l=[],h=[],f=e>4?9:e;for(let a=0;a<t.length;a++){const c=t[a];if(!c){l.push(null),h.push(null);continue}const v=[new Float32Array(c.size*3)];for(let o=0;o<a+1;o++)v.push(new Float32Array(c.size*f));let g=0;const i=c.objects.concat(c.partials);for(let o=0;o<i.length;o++){const r=i[o];if(r)for(let u=0;u<r.length;u++){const d=r[u];for(let w=0;w<d.vertices.length;w++){const x=d.vertices[w];for(let b=0;b<x.length;b++)v[w+1][g*f+b]=x[b]}const j=Ue[n].color({word:d.word,key:d.key,subShape:o%c.objects.length,faceIndex:d.faceIndex,faceSize:d.faceSize,dimensions:e,draw:s,idx:g,size:c.size,type:B[a],dual:!!d.dual});v[0][g*3+0]=j[0],v[0][g*3+1]=j[1],v[0][g*3+2]=j[2],g++}}l.push(v),h.push({start:c.start,size:c.size})}return{infos:h,data:l}},Fe=(e,t,n=!1,s=!1)=>{if(n){if(s)return e;const l=e>0?1-e%2:0;return e>=t/2+l?2*(t-e)-1+l:2*e-l}return e>=t/2?2*(t-e)-1:2*e},Te=(e,t,n,s)=>{const l=[],h=[];if(e===0)for(const[f,a]of t.currentWords)l.push({word:a,vertices:[t.vertices.get(f)]}),t.currentWords.delete(f);else if(e===1)for(const[f,a]of t.currentWords){const c={word:a,vertices:[]};for(let v=0;v<t.facet.length;v++){const g=P(s.root,a+t.facet[v]);g&&s.root.vertices.has(g)&&c.vertices.push(s.root.vertices.get(g))}c.vertices.length<e+1||(l.push(c),t.currentWords.delete(f))}else if(e===2)for(const[f,a]of t.currentWords){const c=t.mirrors.every(u=>!!u),v=t.mirrors.every(u=>q(u)),g=a.length%2?0:1,i=[];for(let u=0;u<t.facet.length;u++){const d=Fe(u,t.facet.length,c,v),j=P(s.root,a+t.facet[d]);j&&s.root.vertices.has(j)&&i.push(s.root.vertices.get(j))}if(i.length<e+1)continue;const o=i.length<t.facet.length;if(i.length===3){g&&([i[2],i[1]]=[i[1],i[2]]);const u={word:a,vertices:i,faceIndex:0,faceSize:3,partial:o};o?h.push(u):(l.push(u),t.currentWords.delete(f));continue}let r=new Array(n.dimensions).fill(0);for(let u=0;u<i.length;u++){const d=i[u];r=R(r,d)}r=m(r,1/i.length);for(let u=0;u<i.length;u++){const d={word:a,vertices:[i[(u+g)%i.length],i[(u+(1-g))%i.length],r],faceIndex:u,faceSize:i.length,partial:o};o?h.push(d):(l.push(d),t.currentWords.delete(f))}}return{objects:l,partials:h}},ne=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],ne(e.slice(1),t);const n=t[t.length-1],s=e.find(h=>h[0]===n||h[1]===n);if(!s)return t;const l=e.indexOf(s);return e.splice(l,1),s[0]===n?t.push(s[1]):t.push(s[0]),ne(e,t)},$e=(e,t,n,s)=>{const l=[],h=t.children.find(c=>c.key===n.replace("d","")),f=[],a=c=>{c.dimensions===e&&f.push(c.facet),c.children.forEach(a)};a(h),t.children.filter(c=>c.key.includes("s")).forEach(a);for(let c=0;c<f.length;c++){const v=f[c];if(v.length<2)continue;const g=[];for(let o=0;o<v.length;o++){const r=P(s,v[o]);r&&s.vertices.has(r)&&g.push(s.vertices.get(r))}let i=new Array(g[0].length).fill(0);for(let o=0;o<g.length;o++){const r=g[o];i=R(i,r)}i=m(i,1/g.length),l.push(D(i,i))}return Oe(...l)},De=(e,t,n,s,l,h)=>{var v,g,i;const{space:f}=s.root,a=[],c=[];if(e===0){s.root.dualVertices=s.root.dualVertices||new Map;for(const[o,r]of t.currentWords){const u=[];for(let x=0;x<t.facet.length;x++){const b=P(s.root,r+t.facet[x]);b&&s.root.vertices.has(b)&&u.push(b)}const d=u.length<t.facet.length;let j=new Array(n.dimensions).fill(0);for(let x=0;x<u.length;x++){const b=s.root.vertices.get(u[x]);j=R(j,b)}if(j=ie(j,f.metric),f.curvature){let x=0;if(l>=0){let b=1;l>0&&l<n.dimensions-1&&(t.midradius||(t.midradius=$e(l,n,h,s.root)),b=t.midradius);const V=H(f.metric,j);for(let k=0;k<u.length;k++){const y=s.root.vertices.get(u[k]);x+=D(V,y)}x/=b*u.length,l===n.dimensions-1&&(x=1/x)}else x=1;j=m(j,f.curvature/x)}const w={word:r,vertices:[j],dual:!0,partial:d};s.root.dualVertices.set(`${h}#${r}`,{vertex:j,facet:u,partial:d}),d?c.push(w):(a.push(w),t.currentWords.delete(o))}}else if(e===1){if(!((v=s.root.dualVertices)!=null&&v.size))return{objects:a,partials:c};s.root.dualEdges=s.root.dualEdges||new Map;for(const[o,r]of t.currentWords){const u=[];for(let x=0;x<t.facet.length;x++){const b=P(s.root,r+t.facet[x]);b&&s.root.vertices.has(b)&&u.push(b)}let d=u.length<t.facet.length;const j=[],w=[];for(const[x,{vertex:b,facet:V,partial:k}]of s.root.dualVertices.entries())if(u.every(y=>V.includes(y))&&(j.push(b),w.push(x)),d=d||k,j.length===2)break;if(j.length===2){const x={word:r,vertices:j,dual:!0,partial:d};s.root.dualEdges.set(`${h}#${r}`,{edge:w,partial:d}),d?c.push(x):(a.push(x),t.currentWords.delete(o))}}}else if(e===2){if(!((g=s.root.dualVertices)!=null&&g.size)||!((i=s.root.dualEdges)!=null&&i.size))return{objects:a,partials:c};for(const[o,r]of t.currentWords){const u=[];for(let z=0;z<t.facet.length;z++){const C=P(s.root,r+t.facet[z]);C&&s.root.vertices.has(C)&&u.push(C)}if(u.length<t.facet.length)continue;const d={},j=[];for(const[z,{vertex:C,facet:E}]of s.root.dualVertices.entries())u.every(se=>E.includes(se))&&(d[z]=C,j.push(z));if(j.length<3)continue;let w=!1;const x=[];for(const{edge:z,partial:C}of s.root.dualEdges.values())j.includes(z[0])&&j.includes(z[1])&&(w=w||C,x.push([...z]));if(x.length<3)continue;const b=[],V=ne(x);if(V.length<4)continue;let k=!0;V[0]===V[V.length-1]&&(V.pop(),k=w||!1);for(let z=0;z<V.length;z++){const C=V[z];b.push(d[C])}if(b.length===3){const z={word:r,vertices:b,dual:!0};a.push(z),t.currentWords.delete(o);continue}const y=r.length%2?0:1;let S=new Array(n.dimensions).fill(0);for(let z=0;z<b.length;z++){const C=b[z];S=R(S,C)}S=m(S,1/b.length);for(let z=0;z<b.length;z++){const C={word:r,vertices:[b[(z+y)%b.length],b[(z+(1-y))%b.length],S],dual:!0,faceIndex:z,faceSize:b.length,partial:k};k?c.push(C):(a.push(C),t.currentWords.delete(o))}}}return{objects:a,partials:c}},Re=(e,t,n)=>{const s=[],l=[],h=[];for(const[f,a]of e.currentWords){let c;if(a===""){const v=ze(n.rootVertices);e.fundamentalVertices=new Map,c=v.map(g=>ie(g,n.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",c)}else{c=[...e.fundamentalVertices.get(a.slice(1))];const v=e.gens.indexOf(a[0]);for(let g=0;g<c.length;g++)c[g]=re(c[g],n.rootNormals[v],n.metric)}for(let v=0;v<c.length;v++){const g=Y(c[v]);e.hashes.vertex.has(g)||(s.push({word:a,cosetId:f,vertices:[c[v]]}),e.hashes.vertex.add(g));for(let i=v+1;i<c.length;i++){const o=[c[v],c[i]].sort((r,u)=>{for(let d=0;d<r.length;d++){if(r[d]<u[d])return-1;if(r[d]>u[d])return 1}return 0}).map(r=>Y(r)).join("-");e.hashes.edge.has(o)||(l.push({word:a,cosetId:f,vertices:[c[v],c[i]]}),e.hashes.edge.add(o));for(let r=i+1;r<c.length;r++){const u=[c[v],c[i],c[r]].sort((d,j)=>{for(let w=0;w<d.length;w++){if(d[w]<j[w])return-1;if(d[w]>j[w])return 1}return 0}).map(d=>Y(d)).join("-");e.hashes.face.has(u)||(h.push({word:a,cosetId:f,vertices:[c[v],c[i],c[r]]}),e.hashes.face.add(u))}}e.fundamentalVertices.set(a,c)}e.currentWords.delete(f)}return[s,l,h]},He=(e,t,n,s,l,h,f,a,c)=>{f.root.lasts||(f.root.lasts=new Array(3).fill(0));const v=[];if(l){const g=Re(f.root,e,n);for(let i=0;i<g.length;i++)s[B[i]]?(v.push({start:f.root.lasts[i],size:g[i].length,objects:[g[i]],partials:[]}),f.root.lasts[i]+=g[i].length):v.push(null)}else for(let g=0;g<3;g++){if(!f[g]||!h&&!s[B[g]]){v.push(null);continue}const i={start:f.root.lasts[g],size:0,objects:[],partials:[]};for(let o=0;o<f[g].detail.length;o++){const r=f[g].detail[o];if(!r.dual&&a.includes(r.key)){i.objects.push(null),i.partials.push(null);continue}const u=t.get(r.key);if(u.currentWords.size){const{objects:d,partials:j}=r.dual?De(g,u,e,f,c,r.key):Te(g,u,e,f);if(!s[B[g]]||a.includes(r.key))continue;i.objects.push(d),i.size+=d.length+j.length,f.root.lasts[g]+=d.length,i.partials.push(j)}}v.push(i)}return v},je=(e,t,n,s,l,h,f,a,c=[])=>{c.done=!0;let v=!0;for(const i of n.values())if(i.compute&&!i.done){v=!1;break}const g=i=>{const o=f?t.dimensions-i.dimensions-1:i.dimensions;i.children.forEach(g);const r=a[o],u=B[o],d=f?`d${i.key}`:i.key;if(i!=null&&i.new){c[o]||(c[o]={dimensions:o,processing:l[u]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const j=s.eigens.values;if(!n.has(d)){const b={...t,key:d,subgens:i.quotient,facet:i.facet,subdimensions:o,mirrors:i.mirrors,compute:r,space:s,...i.dimensions===0&&!h?{rootVertex:s.rootVertex,rootNormals:s.rootNormals,metric:s.metric}:{}};n.set(d,b)}const w=n.get(d);i.dimensions===0&&(c.root=w),w.done||(w.limit=r?e:v?1e3:1,u==="edge"&&s.curvature<=0&&(w.limit*=1.75),r?(be(w),j.some(b=>b<=0)?w.count=1/0:w.count=w.cosets.size):j.some(b=>b<=0)?(w.count=1/0,w.done=!0):w.limit&&(w.count=Pe(w))),c[o].detail.push({key:d,coxeter:i.coxeter,stellation:i.stellation,mirrors:i.mirrors,dual:f,count:w.count,done:w.done});const x=c[o].aggregated.find(({coxeter:b,stellation:V,mirrors:k})=>$(b,i.coxeter)&&$(V,i.stellation)&&$(k,i.mirrors));x?(x.done=x.done&&w.done,x.count+=w.count,x.key+=","+d):c[o].aggregated.push({key:d,coxeter:i.coxeter,stellation:i.stellation,mirrors:i.mirrors,count:w.count,done:w.done}),l[u]&&w.words&&(c[o].processing+=w.words.size),c[o].count+=w.count,c[o].done=c[o].done&&w.done,c[o].dual=f,c.done=c.done&&w.done}};return t.children.forEach(g),c.size=h?c.root.words.size:c.root.vertices.size,c};let F,W;onmessage=({data:{first:e,space:t,dimensions:n,coxeter:s,stellation:l,mirrors:h,ambiance:f,draw:a,batch:c,hidden:v,reciprocation:g}})=>{try{e&&(F=new Map,W=ee(n,s,l,h,t));const i=h.every(b=>!b),o=h.some(b=>xe(b)),r=h.some(b=>ye(b)),u={[n-1]:o,0:!0,1:o||a.edge&&!i,2:o||a.face&&!i},d=je(c,W,F,t,a,i,o&&!r,u);r&&je(c,W,F,t,a,i,o,u,d),W.dimensions===2&&(W.currentWords=new Map([[1,""]]),W.facet=Array.from(d.root.words.values()),W.done=!0,F.set("",{...W,subgens:W.subgens,facet:W.facet,subdimensions:W.dimensions,mirrors:W.mirrors}),d[2]={dimensions:2,processing:1,count:0,detail:[{key:"",coxeter:W.coxeter,stellation:W.stellation,mirrors:W.mirrors,count:1,done:!0}],aggregated:[],done:!0});const j=He(W,F,t,a,i,o,d,v,g),{infos:w,data:x}=Be(W.dimensions,j,f,a);d.root=void 0,postMessage({polytope:d,infos:w,data:x},x.flat(1).filter(b=>b).map(b=>b.buffer))}catch(i){postMessage({error:i.message})}}})();
