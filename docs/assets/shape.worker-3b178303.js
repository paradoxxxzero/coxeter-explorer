(function(){"use strict";const L=["vertex","edge","face"],U=(e,t=null,n=1,o=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(o)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((r,u)=>e+u*n)},D=(e,t)=>e.length!==t.length?!1:e.every((n,o)=>Array.isArray(n)?D(n,t[o]):n===t[o]),K=e=>e!==""&&e!=="x",_=e=>e==="s"||e==="b",ce=(e,t)=>{let n=0;for(let o=0;o<e.length;o++)n+=e[o]*t[o];return n},Se=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]-t[o];return n},I=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]*t;return n},me=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let o=0;o<e.length;o++)t[n].push(e[o][n])}return t},ee=(e,t)=>{const n=new Array(e.length);for(let o=0;o<e.length;o++){let r=0;for(let u=0;u<e[0].length;u++)r+=e[o][u]*t[u];n[o]=r}return n},Me=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},T=e=>{const t=new Array(e).fill(1);return Me(t)},te=(e,t)=>e.filter((n,o)=>!t.includes(o)),fe=(e,t)=>te(e,t).map(n=>te(n,t)),ue=(e,t,n)=>Se(e,I(ee(Oe(n),t),2*ce(ee(Ce(n),e),t))),Ae=(e,t)=>t.some((n,o)=>n.some((r,u)=>o===u&&r===0))?I(e,1/e[e.length-1]):I(e,-1/Ve(ge(ce(ee(t,e),e)))),Ce=e=>e.map((t,n)=>t.map((o,r)=>n===r&&o===0?1:o)),Oe=e=>e.map(t=>t.map(n=>ge(n))),Q=(e,t,n,o)=>{const r=J/e,u=J/t,g=J/n;return de(J/qe(-B(r)*B(g)+G(r)*G(g)*((B(u)-B(o*r)*B(g))/(G(o*r)*G(g)))))},{abs:ge,cos:B,sin:G,tan:Ke,cosh:Qe,sinh:Ge,acos:qe,acosh:Je,atan:Xe,atan2:Ye,min:Ze,max:$e,round:de,sqrt:Ve,cbrt:Ie,sign:et,ceil:tt,floor:nt,log:ot,exp:st,hypot:it,pow:We,PI:J}=Math,he=new ArrayBuffer(8),Ee=new Float64Array(he),ae=new Int32Array(he);function _e(e){return~~e===e?~~e:(Ee[0]=e,ae[0]^ae[1])}const ye=10**4,ne=e=>{let t="";for(let n=0;n<e.length;n++)t+=_e(de(e[n]*ye)/ye).toString(),n<e.length-1&&(t+="|");return t},C=e=>String.fromCharCode(97+e),we=e=>e.charCodeAt(0)-97,oe=(e,t="",n=[])=>{const o=[];for(let r=0;r<e.length;r++){const[u,g]=e[r],a=e.filter((d,y)=>y!==r);if(n.length){const d=n[n.length-1];if(g.some(y=>y===d)){const y=g[1]===d,f=y?u.toUpperCase():u,w=y?[...g].reverse():g;if(w[1]===n[0])return[t+f];a.length&&o.push(...oe(a,t+f,n.concat(w.slice(1))))}}else o.push(...oe(a,u,g))}return o},R=(e,t,n,o,r,u=[])=>{let g="";const a=o.map((i,s)=>u.includes(s)||i?"":C(s)).join(""),d={},y=[];for(let i=0;i<e;i++)if(!u.includes(i)){if(!_(o[i])){const s=C(i);g+=s,d[s]=[i],y.push(s.repeat(2))}for(let s=i+1;s<e;s++){if(u.includes(s))continue;const c=t[i][s];if(_(o[i])&&_(o[s])){const h=C((i+1)*e+s);g+=h,d[h]=[i,s],y.push(h.repeat(c))}else if(_(o[i])&&!_(o[s])){const h=C((i+1)*e+s);g+=h,d[h]=[i,s,i],y.push(h.repeat(2)),y.push((h+C(s)).repeat(c%2===0?c/2:c))}else if(!_(o[i])&&_(o[s])){const h=C((i+1)*e+s);g+=h,d[h]=[s,i,s],y.push(h.repeat(2)),y.push((h+C(i)).repeat(c%2===0?c/2:c))}else c>1&&y.push((C(i)+C(s)).repeat(c))}}const f=Object.entries(d).filter(([i,s])=>s.length===3),w=Object.entries(d).filter(([i,s])=>s.length===2);if(w.length>1){const i=oe(w);y.push(...i.map(s=>s.split("").reverse().join("")))}if(f.length>1)for(let i=0;i<f.length;i++){const[s,c]=f[i];for(let h=i+1;h<f.length;h++){const[k,v]=f[h];if(c[1]===v[1]){const S=w.find(([z,V])=>V[0]===c[0]&&V[1]===v[0]);if(S){const z=S[0];y.push(s.toUpperCase()+z.toUpperCase()+k+z)}}else if(c[0]===v[0]){const S=t[c[1]][v[1]];S>1&&y.push((s+k).repeat(S))}}}if(!o.some(i=>_(i))&&!n.every(i=>i.every(s=>s===1))&&r.curvature>0){if(e===4&&n[0][1]>1!=n[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(i=>u.includes(i))||(n[0][1]>1&&y.push("abcdcb".repeat(Q(t[0][1],t[1][2],t[0][2],n[0][1]))),n[2][3]>1&&y.push("abcdcb".repeat(Q(t[2][3],t[1][2],t[1][3],n[2][3]))));else for(let i=1;i<e;i++)for(let s=0;s<i;s++)if(n[s][i]>1){if(s+2<e){const c=Q(t[s+1][i+1],t[s][i],t[s][i+1],n[s][i]);c&&!u.includes(s)&&!u.includes(i)&&!u.includes(s+2)&&y.push((C(s)+C(i)+C(s+2)+C(i)).repeat(c))}if(s-1>=0){const c=Q(t[s-1][i-1],t[s][i],t[s-1][i],n[s][i]);c&&!u.includes(s)&&!u.includes(i)&&!u.includes(s-1)&&y.push((C(s)+C(i)+C(s)+C(s-1)).repeat(c))}}}return{gens:g,subgens:a,rels:y,transforms:d}},se=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),O=(e,t,n)=>{let o,r,u;if(t===0)o=r=u=n;else{const g=n<.5?n*(1+t):n+t-n*t,a=2*n-g;o=se(a,g,e+1/3),r=se(a,g,e),u=se(a,g,e-1/3)}return[o,r,u]},X=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Ne={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>O(e.length*.03%1,.75,.7)},Pe=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e})=>O(e.length*.17%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>O(...X[e.length%X.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,opacity:.9},transparency:"oit",color:({word:e,type:t})=>t==="face"?O(e.length*.3%1,1,.6):[0,0,0]},synthwave:{background:[...O(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>O((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>O(e.length*.03%1,1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>O(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:n,size:o})=>t==="face"?O((e-2)*.21%1,1,.8):O(n/o,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?O(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:o})=>{const r=e.length?we(e[e.length-1])/n:0;return O(r%1,1,t==="face"?.6:o.face?0:.8)}},harlequin:{background:[...O(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const o=e.split("").map(u=>we(u)).reduce((u,g)=>u+g,0),r=[...X[o%X.length]];return t%2&&(r[2]*=.5),O(...r)}},pure:{background:[0,0,0,1],color:({word:e})=>O(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>O(e/t,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>O(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-We(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Ne,...t,transparent:{}}])),Ue=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},E=(e,t)=>{let n=t,o=0;for(;e.quotientMap[n];)o++,n=e.quotientMap[n];return o>1&&(e.quotientMap[t]=n),n},be=(e,t,n)=>{const o=t,r=[[t,n]];for(;r.length>0;)if([t,n]=r.pop(),t>n&&([t,n]=[n,t]),t=E(e,t),n=E(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const u=e.cosets.get(t),g=e.cosets.get(n);e.cosets.delete(n);for(const[a,d]of g)u.has(a)?r.push([u.get(a),d]):u.set(a,d)}return E(e,o)},je=(e,t,n,o)=>{t=E(e,t);const r=e.cosets.get(t);r.has(n)?be(e,r.get(n),o):r.set(n,o)},Y=(e,t,n,o)=>{t=E(e,t);let r;const u=e.cosets.get(t);return u.has(n)?(r=E(e,u.get(n)),o!==void 0&&r!==o&&be(e,o,r)):(o?r=o:(r=e.nextVertex++,e.cosets.set(r,new Map),e.unvisited.push(r)),je(e,t,n,r),je(e,r,Ue(n),t)),r},pe=function(e,t,n){let o=n;for(let r=t.length-1;r>0;r--)o=Y(e,o,t[r]);Y(e,o,t[0],n)},Fe=function(e){if(!e.words){const t=E(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=E(e,t),o=e.cosets.get(n),r=e.words.get(n);if(o.size<e.gens.length*2)return;const u=[];for(let g=0;g<e.gens.length;g++){const a=e.gens[g],d=E(e,o.get(a));if(!e.words.has(d)){if(e.cosets.get(d).size<e.gens.length*2)return;u.push([a,d])}}e.remaining.shift();for(let g=0;g<u.length;g++){const[a,d]=u[g],y=a+r;if(e.words.set(d,y),e.currentWords.set(d,y),e.lastCoset=d,e.remaining.push(d),e.vertices){let f=e.vertices.get(n);for(let w=0;w<e.transforms[a].length;w++){const i=e.transforms[a][w];f=ue(f,e.rootNormals[i],e.metric)}e.vertices.set(d,f)}}}},ve=(e,t)=>{let n=E(e,1);for(let o=t.length-1;o>=0;o--){const r=e.cosets.get(n);if(r.size<e.gens.length*2||(n=E(e,r.get(t[o])),e.cosets.get(n).size<e.gens.length*2))return}return n},ke=e=>{if(!e.cosets){e.unvisited=[1],e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)pe(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length>0;){const o=E(e,e.unvisited.shift());if(!e.seen.has(o)){e.seen.add(o),n=o;break}}if(n===null){e.done=!0;break}for(let o=0;o<e.gens.length;o++)Y(e,n,e.gens[o].toUpperCase()),Y(e,n,e.gens[o]);for(let o=0;o<e.rels.length;o++)pe(e,e.rels[o],n)}},Te=e=>(ke(e),e.cosets.size),xe=e=>(ke(e),Fe(e),e),Be=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const o=new Set;for(let r=0;r<e.length;r++){const u=e[r];if(u)for(let g=0;g<u.length;g++){const a=u[g];for(let d=0;d<n[a].length;d++){const y=C(n[a][d]);o.has(y)||o.add(y)}if(o.size>=t)return!0}}return!1},ie=(e,t,n,o,r)=>{const u=U(n.length).filter(f=>!r.includes(f));let g="";const a=Object.entries(o),d=a.filter(([f,w])=>w.length===1),y=a.filter(([f,w])=>w.length===3);for(let f=0;f<a.length;f++){const[w,i]=a[f];if(i.length===1){const s=i[0];if(!r.includes(s)&&!y.some(([c,h])=>h[1]===s)){g+=w;continue}if(!K(e[s]))continue;!e[s]&&!u.some(c=>n[c][s]!==2)&&(g+=w)}else if(i.length===2){const s=i[0],c=i[1],h=n[s][c];if(t.gens.includes(w)&&(t.dimensions===1?h===2:h>2)){g+=w;continue}if(!K(e[s])||!K(e[c]))continue}else if(i.length===3&&r.length&&typeof r[r.length-1]=="string"&&r[r.length-1].includes("s")){const s=i[0],c=i[1],h=n[s][c],k=r[r.length-1].split("s").filter(v=>v);for(let v=0;v<k.length;v++){const S=k[v],z=o[Object.keys(o)[S]];if(z.length===3&&i[1]===z[1]){const V=n[z[0]][z[1]];if((t.dimensions===1?![2,4].includes(h)||[2,4].includes(V):h!==2)&&(g+=w),d.find(([j,l])=>z.every(b=>b!==l[0]))){const j=d.find(([l,b])=>b[0]===z[1]);j&&(g+=j[0])}}}}}return g},re=(e,t,n,o,r,u=null,g=null,a=null,d=new Map)=>{const y=!g;o.every(f=>!f)&&(o=o.map(()=>1)),u=u||o.map((f,w)=>K(f)?null:w).filter(f=>f!==null),g=g||{new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:o,skips:u,...R(e,t,n,o,r,u),quotient:"",facet:[""],children:[]},a=a||g.transforms;for(let f=0;f<e;f++){if(u.includes(f)||u.includes("s"))continue;const w=[...u,f],i=w.sort().join("-");let s=!1;if(!d.has(i)){s=!0;const k={key:i,dimensions:e-w.length,coxeter:fe(t,w),stellation:fe(n,w),mirrors:te(o,w),skips:w,...R(e,t,n,o,r,w)};if(k.gens===null)continue;xe(k),d.set(i,k)}const c=d.get(i),h=Array.from(c.words.values());if(Be(h,c.dimensions,c.transforms)){let k=ie(o,c,t,a,w),v={new:s,...c,quotient:k,facet:h,children:[]};c.dimensions>0&&(v=re(e,t,n,o,r,w,v,a,d)),g.children.push(v)}}if(g.children.length===0&&e-u.length>1){console.info("No leaf found, digging deeper",u);for(let f=0;f<e;f++){if(u.includes(f))continue;const w=[...u,f],i=w.sort().join("-");let c={new:!1,...d.get(i),quotient:"",facet:[""],children:[]};c=re(e,t,n,o,r,w,c,a,d),g.children.push(c)}}if(y&&o.some(f=>_(f))){let f=[];for(let w=1;w<e;w++){const i=[...u,...U(e-w).map(()=>"s")],s=e-i.length;if(w===1){const c=[],h=p=>{p.children.forEach(h),p.dimensions===1&&p.new&&c.push(p)};h(g);const k=Object.entries(g.transforms).filter(([p,j])=>j.length!==1||o[j[0]]).filter(([p,j])=>j.length!==3||t[j[0]][j[1]]!==2).map(([p])=>p);for(let p=0;p<c.length;p++){const j=c[p];k.includes(j.gens)&&k.splice(k.indexOf(j.gens),1)}const v=f;f=[];const S=T(s).map((p,j)=>p.map((l,b)=>j===b?1:j===b+1||j===b-1?4:2)),z=T(s).map(p=>p.map(()=>1)),V=U(s).map(()=>"s");for(let p=0;p<k.length;p++){const j=k[p];i[i.length-1]=g.gens.indexOf(j)+"s";const l={key:i.join("-"),dimensions:s,coxeter:S,stellation:z,mirrors:V,skips:i,...R(s,S,z,V,r,i)};l.gens=j;const b={new:!0,...l,quotient:ie(o,l,t,a,i),facet:["",j],children:p===0?v:[]};f.push(b)}}else if(w===2){const c=T(s).map((p,j)=>p.map((l,b)=>j===b?1:j===b+1||j===b-1?3:2)),h=T(s).map(p=>p.map(()=>1)),k=U(s).map(()=>"s"),v=[],S=Object.entries(g.transforms).filter(([p,j])=>j.length>=2).filter(([p,j])=>j.length!==3||t[j[0]][j[1]]!==2),z=Object.entries(g.transforms).filter(([p,j])=>j.length===1);for(let p=0;p<S.length;p++){const[j,l]=S[p];for(let b=p+1;b<S.length;b++){const[A,M]=S[b];l[l.length-1]===M[M.length-1]&&v.push(["",j,A]),l.length!==M.length&&(l.length===2&&l[0]===M[2]||l.length===3&&l[2]===M[0])&&v.push(["",j.toUpperCase(),A.toUpperCase()])}if(l.length===3)for(let b=0;b<z.length;b++){const[A,M]=z[b];l.every(x=>x!==M[0])&&v.push(["",j,A+j])}}const V=f;f=[],v.length||v.push([""]);for(let p=0;p<v.length;p++){const j=v[p];i[i.length-1]=j.length===1?"s":g.gens.indexOf(j[1].toLowerCase())+"s"+g.gens.indexOf(j[2].replace(j[1],"").toLowerCase());const l={key:i.join("-"),dimensions:s,coxeter:c,stellation:h,mirrors:k,skips:i,...R(s,c,h,k,r,i)},b={new:!0,...l,quotient:ie(o,l,t,a,i),facet:j,children:p===0?V:[]};f.push(b)}}else{const c=T(s).map((z,V)=>z.map((p,j)=>V===j?1:2)),h=T(s).map(z=>z.map(()=>1)),k=U(s).map(()=>"s"),v=f;f=[];const S={new:!0,key:i.join("-"),dimensions:s,coxeter:c,stellation:h,mirrors:k,skips:i,...R(s,c,h,k,r,i),facet:[""],quotient:"",children:v};f.push(S)}}g.children.push(...f)}return g},Re=(e,t,n)=>{const o=[],r=[],u=[];for(const[g,a]of e.currentWords){let d;if(a===""){const y=me(n.rootVertices);e.fundamentalVertices=new Map,d=U(t.dimensions).map(f=>Ae(y[f],n.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",d)}else{d=[...e.fundamentalVertices.get(a.slice(1))];const y=e.gens.indexOf(a[0]);for(let f=0;f<d.length;f++)d[f]=ue(d[f],n.rootNormals[y],n.metric)}for(let y=0;y<d.length;y++){const f=ne(d[y]);e.hashes.vertex.has(f)||(o.push({word:a,cosetId:g,vertices:[d[y]]}),e.hashes.vertex.add(f));for(let w=y+1;w<d.length;w++){const i=[d[y],d[w]].sort((s,c)=>{for(let h=0;h<s.length;h++){if(s[h]<c[h])return-1;if(s[h]>c[h])return 1}return 0}).map(s=>ne(s)).join("-");e.hashes.edge.has(i)||(r.push({word:a,cosetId:g,vertices:[d[y],d[w]]}),e.hashes.edge.add(i));for(let s=w+1;s<d.length;s++){const c=[d[y],d[w],d[s]].sort((h,k)=>{for(let v=0;v<h.length;v++){if(h[v]<k[v])return-1;if(h[v]>k[v])return 1}return 0}).map(h=>ne(h)).join("-");e.hashes.face.has(c)||(u.push({word:a,cosetId:g,vertices:[d[y],d[w],d[s]]}),e.hashes.face.add(c))}}e.fundamentalVertices.set(a,d)}e.currentWords.delete(g)}return[o,r,u]},He=(e,t,n=!1,o=!1)=>{if(n){if(o)return e;const r=e>0?1-e%2:0;return e>=t/2+r?2*(t-e)-1+r:2*e-r}return e>=t/2?2*(t-e)-1:2*e},Le=(e,t,n)=>{const o=[],r=[];if(e.subdimensions===0)for(const[u,g]of e.currentWords)o.push({word:g,vertices:[e.vertices.get(u)]}),e.currentWords.delete(u);else if(e.subdimensions===1)for(const[u,g]of e.currentWords){const a={word:g,vertices:[]};for(let d=0;d<e.facet.length;d++){const y=ve(n,g+e.facet[d]);y&&n.vertices.has(y)&&a.vertices.push(n.vertices.get(y))}a.vertices.length<2||(o.push(a),e.currentWords.delete(u))}else if(e.subdimensions===2)for(const[u,g]of e.currentWords){const a=e.mirrors.every(s=>!!s),d=e.mirrors.every(s=>_(s)),y=g.length%2?0:1,f=[];for(let s=0;s<e.facet.length;s++){const c=He(s,e.facet.length,a,d),h=ve(n,g+e.facet[c]);h&&n.vertices.has(h)&&f.push(n.vertices.get(h))}if(f.length<3)continue;const w=f.length<e.facet.length;if(f.length===3){y&&([f[2],f[1]]=[f[1],f[2]]);const s={word:g,vertices:f,faceIndex:0,faceSize:3,partial:w};w?r.push(s):(o.push(s),e.currentWords.delete(u));continue}const i=new Array(t.dimensions).fill(0);for(let s=0;s<f.length;s++){const c=f[s];for(let h=0;h<c.length;h++)i[h]+=c[h]}for(let s=0;s<t.dimensions;s++)i[s]/=f.length;for(let s=0;s<f.length;s++){const c={word:g,vertices:[f[(s+y)%f.length],f[(s+(1-y))%f.length],i],faceIndex:s,faceSize:f.length,partial:w};w?r.push(c):(o.push(c),e.currentWords.delete(u))}}return{objects:o,partials:r}};let N,H,m;onmessage=({data:{first:e,space:t,dimensions:n,coxeter:o,stellation:r,mirrors:u,ambiance:g,draw:a,batch:d,hidden:y}})=>{var f,w;try{let i=!0;e&&(N=new Map,H=[0,0,0],m=re(n,o,r,u,t));const s=U(m.dimensions).join("-"),c=[],h=u.every(l=>!l),k={0:!0,1:a.edge&&!h,2:a.face&&!h},v=l=>{l.children.forEach(v);const b=k[l.dimensions],A=L[l.dimensions];if(l!=null&&l.new){c[l.dimensions]||(c[l.dimensions]={dimensions:l.dimensions,processing:a[A]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const M=t.eigens.values;if(N.has(l.key))N.get(l.key).keys.push(l.key);else{let W=b?d:5;A==="edge"&&t.curvature<=0&&(W*=1.5);const F={...m,keys:[l.key],subgens:l.quotient,facet:l.facet,subdimensions:l.dimensions,mirrors:l.mirrors,limit:W,...l.dimensions===0&&!h?{rootVertex:t.rootVertex,rootNormals:t.rootNormals,metric:t.metric}:{}};N.set(l.key,F)}const x=N.get(l.key);x.done||(b?(xe(x),M.some(W=>W<=0)?x.count=1/0:x.count=x.cosets.size):M.some(W=>W<=0)?(x.count=1/0,x.done=!0):x.count=Te(x)),c[l.dimensions].detail.push({key:l.key,coxeter:l.coxeter,stellation:l.stellation,mirrors:l.mirrors,count:x.count,done:x.done});const q=c[l.dimensions].aggregated.find(({coxeter:W,stellation:F,mirrors:P})=>D(W,l.coxeter)&&D(F,l.stellation)&&D(P,l.mirrors));q?(q.done=q.done&&x.done,q.count+=x.count,q.key+=","+l.key):c[l.dimensions].aggregated.push({key:l.key,coxeter:l.coxeter,stellation:l.stellation,mirrors:l.mirrors,count:x.count,done:x.done}),a[A]&&x.words&&(c[l.dimensions].processing+=x.words.size),c[l.dimensions].count+=x.count,c[l.dimensions].done=c[l.dimensions].done&&x.done,i=i&&x.done}};m.children.forEach(v);const S=N.get(s);if(m.dimensions===2&&(m.currentWords=new Map([[1,""]]),m.facet=Array.from(S.words.values()),m.done=!0,N.set("",{...m,subgens:m.subgens,facet:m.facet,subdimensions:m.dimensions,mirrors:m.mirrors}),c[2]={dimensions:2,processing:1,count:0,detail:[{key:"",coxeter:m.coxeter,stellation:m.stellation,mirrors:m.mirrors,count:1,done:!0}],aggregated:[],done:!0}),c[0].done&&(!a.edge||(f=c[1])!=null&&f.done)&&(!a.face||(w=c[2])!=null&&w.done))for(let l of N.values())l.limit=200;const z=[];if(h){const l=Re(S,m,t);for(let b=0;b<l.length;b++)a[L[b]]?(z.push({start:H[b],size:l[b].length,objects:[l[b]],partials:[]}),H[b]+=l[b].length):z.push(null)}else for(let l=0;l<3;l++){if(!a[L[l]]||!c[l]){z.push(null);continue}const b={start:H[l],size:0,objects:[],partials:[]};for(let A=0;A<c[l].detail.length;A++){const M=c[l].detail[A];if(y.includes(M.key))continue;const x=N.get(M.key);if(x.currentWords.size){const{objects:q,partials:W}=Le(x,m,S);b.objects.push(q),b.size+=q.length+W.length,H[l]+=q.length,b.partials.push(W)}}z.push(b)}const V=[],p=[],j=m.dimensions>4?9:m.dimensions;for(let l=0;l<z.length;l++){const b=z[l];if(!b){V.push(null),p.push(null);continue}const A=[new Float32Array(b.size*3)];for(let q=0;q<l+1;q++)A.push(new Float32Array(b.size*j));let M=0;const x=b.objects.concat(b.partials);for(let q=0;q<x.length;q++){const W=x[q];for(let F=0;F<W.length;F++){const P=W[F];for(let Z=0;Z<P.vertices.length;Z++){const ze=P.vertices[Z];for(let $=0;$<ze.length;$++)A[Z+1][M*j+$]=ze[$]}const le=Pe[g].color({word:P.word,key:P.key,subShape:q%b.objects.length,faceIndex:P.faceIndex,faceSize:P.faceSize,dimensions:m.dimensions,draw:a,idx:M,size:b.size,type:L[l]});A[0][M*3+0]=le[0],A[0][M*3+1]=le[1],A[0][M*3+2]=le[2],M++}}V.push(A),p.push({start:b.start,size:b.size})}c.size=h?S.words.size:S.vertices.size,c.done=i,postMessage({polytope:c,infos:p,data:V},{options:{transfer:[V.flat(1)]}})}catch(i){postMessage({error:i.message})}}})();
