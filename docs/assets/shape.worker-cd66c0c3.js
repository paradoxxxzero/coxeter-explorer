(function(){"use strict";const U=["vertex","edge","face","cell","4-face","5-face","6-face","7-face","8-face","9-face"],{abs:Z,cos:pt,sin:vt,tan:mt,cosh:yt,sinh:wt,acos:bt,acosh:kt,atan:jt,atan2:xt,min:Ct,max:St,round:$e,sqrt:he,cbrt:_t,sign:Ot,ceil:Vt,floor:Mt,log:Wt,exp:zt,hypot:At,pow:Fe,PI:It}=Math,Re=(...e)=>e.reduce((t,n)=>t+n,0)/e.length,pe=new ArrayBuffer(8),Pe=new Float64Array(pe),ve=new Int32Array(pe);function Ge(e){return~~e===e?~~e:(Pe[0]=e,ve[0]^ve[1])}const me=10**4,ye=e=>{let t="";for(let n=0;n<e.length;n++)t+=Ge($e(e[n]*me)/me).toString(),n<e.length-1&&(t+="|");return t},Ne=e=>e.sort((t,n)=>{for(let s=0;s<t.length;s++){if(t[s]<n[s])return-1;if(t[s]>n[s])return 1}return 0}),K=e=>Ne(e).map(t=>ye(t)).join("-"),q=e=>String.fromCharCode(97+e),we=e=>e.charCodeAt(0)-97,$=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},ie=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),V=(e,t,n)=>{let s,l,g;if(t===0)s=l=g=n;else{const o=n<.5?n*(1+t):n+t-n*t,r=2*n-o;s=ie(r,o,e+1/3),l=ie(r,o,e),g=ie(r,o,e-1/3)}return[s,l,g]},J=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Te={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,metalness:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>V(e.length*.03%1,.75,.7)},le=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>V((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>V(...J[e.length%J.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},shading:!1,face:{opacity:.9},transparency:"oit",color:({word:e,subShape:t,type:n})=>n==="face"?V((t*.23+e.length*.07)%1,1,.58):[0,0,0]},lights:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},envmap:"lights",metalness:1,color:()=>[0,0,0]},synthwave:{background:[...V(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>V((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>V(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,envmap:"home",metalness:1,skybox:"home",color:()=>[0,0,0]},flare:{background:[1,1,1,1],transparency:"blend",diffuse:"cel",face:{opacity:.6,gouraud:!1},color:({word:e})=>V(e.length*.09%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?V(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],transparency:"blend",diffuse:"cel",face:{opacity:.6,gouraud:!1},color:({word:e,type:t,dimensions:n,hidden:s})=>{const l=e.length?we(e[e.length-1])/n:0;return V(l%1,1,t==="face"?.6:s.includes("face")?.8:0)}},harlequin:{background:[...V(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",tesselation:"full",color:({word:e,faceIndex:t})=>{const n=e.split("").map(l=>we(l)).reduce((l,g)=>l+g,0),s=[...J[n%J.length]];return t%2===e.length%2&&(s[2]*=.5),V(...s)}},pure:{background:[0,0,0,1],color:({word:e})=>V(e.length*.03%1,.75,.7)},fabric:{background:[1,1,1,1],texture:"fabric",ambient:.4,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.8:.05)},rock:{background:[1,1,1,1],glow:!1,texture:"bricks",ambient:.4,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.8:.05)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>V((e||0)/(t||1),.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},glass:{background:[0,0,0,1],transparency:"blend",opacity:.2,ambient:0,diffuse:"fresnel",specular:"blinn-phong",face:{shininess:16,diffuse:!1},color:({subShape:e,word:t,type:n})=>n!=="vertex"?V((e*.21+t.length*.03)%1,1,.8):[1,1,1]},checkerboard:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",ambient:.3,shininess:32,reversed:!0,tesselation:"full",color:({parity:e})=>e?[0,0,0]:[1,1,1]},plain:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.5:.05)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Fe(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Te,...t,transparent:{}}])),be=(e,t=null,n=1,s=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(s)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,g)=>e+g*n)},qe=e=>e==="m"||e==="b"||e==="c"||e==="d",He=e=>e==="c"||e==="d",F=e=>e==="s"||e==="b"||e==="d",R=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},ke=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],H=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]+t[s];return n},B=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]-t[s];return n},z=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]*t;return n},oe=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let s=0;s<e.length;s++)t[n].push(e[s][n])}return t},Q=(e,t)=>{const n=new Array(e.length);for(let s=0;s<e.length;s++){let l=0;for(let g=0;g<e[0].length;g++)l+=e[s][g]*t[g];n[s]=l}return n},Be=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},G=e=>{const t=new Array(e).fill(1);return Be(t)},ce=(e,t)=>e.filter((n,s)=>!t.includes(s)),je=(e,t)=>ce(e,t).map(n=>ce(n,t)),N=(e,t,n)=>B(e,z(Q(Ue(n),t),2*R(Q(Le(n),e),t))),X=(e,t)=>{if(t.some((s,l)=>s.some((g,o)=>l===o&&g===0)))return e[e.length-1]===0&&(e[e.length-1]=1e-16),z(e,1/e[e.length-1]);let n=R(Q(t,e),e);return n===0&&(n=1e-16),z(e,-1/he(Z(n)))},De=1,Le=e=>e.map((t,n)=>t.map((s,l)=>n===l&&s===0?De:s)),Ue=e=>e.map(t=>t.map(n=>Z(n))),Ze=e=>{const t=[];for(let o=0;o<e.length;o++)for(let r=o+1;r<e.length;r++)e[o][r]!==2&&t.push([o,r]);if(t.length!==e.length-1)return;const n=new Array(e.length).fill(0);if(t.forEach(([o,r])=>{n[o]++,n[r]++}),n.some(o=>o>3)||n.filter(o=>o===1).length!==2)return;const l=[n.indexOf(1)],g=[];for(let o=0;o<e.length-1;o++){const r=l[l.length-1],i=t.findIndex(h=>h.includes(r));let f=t[i];t.splice(i,1),f[0]===r&&f.reverse(),l.push(f[0]),g.push(f.reverse())}return{group:l,pairs:g}},Ke=e=>{const t=new Array(e.length).fill(0);for(let l=0;l<e.length;l++)for(let g=l+1;g<e.length;g++)e[l][g]!==2&&(t[l]++,t[g]++);if(t.filter(l=>l===3).length!==1||t.filter(l=>l===1).length!==e.length-1)return;const n=t.indexOf(3),s=t.map((l,g)=>[g,n]).filter(([l,g])=>l!==g);return{group:[n],pairs:s}},Je=e=>{const t=Ze(e);if(t)return{type:"c",description:"C-Group",...t};const n=Ke(e);return n?{type:"star",description:"Star Group",...n}:{type:"other",description:"Other Group"}},fe=(e,t="",n=[])=>{const s=[];for(let l=0;l<e.length;l++){const[g,o]=e[l],r=e.filter((i,f)=>f!==l);if(n.length){const i=n[n.length-1];if(o.some(f=>f===i)){const f=o[1]===i,h=f?g.toUpperCase():g,c=f?[...o].reverse():o;if(c[1]===n[0])return[t+h];r.length&&s.push(...fe(r,t+h,n.concat(c.slice(1))))}}else s.push(...fe(r,g,o))}return s},Qe=(e,t)=>{var i,f;const n=[],s=Object.entries(e),l=s.filter(([h,c])=>c.length===1),g=s.filter(([h,c])=>c.length===2),o=s.filter(([h,c])=>c.length===3),r=Object.fromEntries(l.map(([h,c])=>[c[0],h]));for(let h=0;h<s.length;h++){const[c,p]=s[h];if([1,3].includes(p.length)&&n.push(c.repeat(2)),p.length===2){const d=t[p[0]][p[1]];d>1&&n.push(c.repeat(d))}if(p.length===1){const d=p[0];for(let u=0;u<l.length;u++){const[v,[a]]=l[u];if(a>d){const m=t[d][a];m>1&&n.push((c+v).repeat(m))}}}if(p.length===3){const d=t[p[0]][p[1]];if(d>1){const u=r[p[1]];u?n.push((c+u).repeat(d%2===0?d/2:d)):console.warn("No conjugate conjugate reflection",c,p)}for(let u=0;u<o.length;u++){const[v,a]=o[u];if(a[1]===p[1]&&a[0]>p[0]){let m=(i=g.find(([b,y])=>y[0]===p[0]&&y[1]===a[0]))==null?void 0:i[0];m||(m=$((f=g.find(([b,y])=>y[1]===p[0]&&y[0]===a[0]))==null?void 0:f[0])),m&&n.push($(c)+$(m)+v+m)}if(a[0]===p[0]&&a[1]>p[1]){const m=t[p[1]][a[1]];m>1&&n.push((c+v).repeat(m))}}}}if(g.length>1){const h=fe(g);n.push(...h.map(c=>c.split("").reverse().join("")))}return n},Xe=(e,t,n)=>{const s=[];if(t.length>2&&t.length<6&&n.some((r,i)=>r.some((f,h)=>f>1&&t[i][h]>1))){const r=Je(t);r.type==="c"?s.push(...Ye(t,n,r.group,r.pairs)):r.type==="star"&&s.push(...et(t,n,r.group,r.pairs))}t.length===3&&t[0][1]===5&&t[0][2]===3&&t[1][2]===5&&(n[0][1]===3&&n[0][2]===1&&n[1][2]===1||n[0][1]===1&&n[0][2]===1&&n[1][2]===3)&&s.push(T(2,[0,1,2,1]));const l=Object.fromEntries(Object.entries(e).filter(([r,i])=>i.length===1).map(([r,i])=>[i[0],r])),g=Object.entries(e).filter(([r,i])=>i.length===2).map(([r,i])=>[[i,r],[[...i].reverse(),$(r)]]).flat(),o=[];for(let r=0;r<s.length;r++){const i=s[r];let f="",h=!1;for(let c=0;c<i.length;c++){const p=i[c],d=l[p];if(d)f+=d;else{const u=g.find(([v,a])=>v[0]===p&&c<i.length-1&&v[1]===i[c+1]);if(u)f+=u[1],c++;else{h=!0;break}}}h||o.push(f)}return t.length===3&&e.a.length===2&&e.b.length===3&&e.c.length===3&&t[0][1]!==2&&t[1][2]===3&&o.push("abcb".repeat(2)),t.length===3&&e.a.length===1&&e.b.length===3&&e.c.length===3&&t[1][2]!==2&&t[0][1]===3&&o.push("dcbc".repeat(2)),o},T=(e,t)=>Array(e).fill(t).flat(),Ye=(e,t,n,s)=>{const l=[];if(!s.filter(([d,u])=>t[d][u]>1).map(([d,u])=>e[d][u]===5))return l;const o=s.map(([d,u])=>e[d][u]);if(o.filter(d=>d!==3&&d!==5).length>(e.length===3?0:1))return l;if(o.filter(d=>d!==3&&d!==5).length===1){const d=o.findIndex(u=>u!==3&&u!==5);if(![0,o.length-1].includes(d))return l}const r=[o,[...o].reverse()],i=s.map(([d,u])=>t[d][u]),f=[i,[...i].reverse()],h=({m:d,s:u})=>{if(d.length!==e.length-1)return!1;for(let v=0;v<r.length;v++){const a=r[v],m=f[v];if(a.every((b,y)=>b===d[y]||d[y]===null)&&m.every((b,y)=>b===u[y]||u[y]===null))return!0}};if(h({m:[null,5,5],s:[null,1,2]})&&(o[i[0]===2?o.length-1:0]=0),[{m:[null,3,5,5],s:[null,1,1,2]},{m:[null,5,5,5],s:[null,1,2,1]},{m:[null,5,3,5],s:[null,1,1,2]}].some(h)||(h({m:[5,5,5,3],s:[1,1,2,1]})&&(o[i[1]===2?o.length-1:0]=0),o.filter(d=>d===3).length>e.length-3))return l;const c=[];let p=[];for(let d=0;d<o.length;d++)o[d]===5&&(p.length?(p.push(d),c.push(p),p=[d]):p.push(d));for(let d=0;d<c.length;d++){const[u,v]=c[d],a=[];for(let m=u;m<v+2;m++)a.push(n[m]);a.push(...a.slice(1,a.length-1).reverse()),l.push(T(3,a))}return l},et=(e,t,n,s)=>{const l=[];if(e.length!==4||!s.filter(([f,h])=>t[f][h]>1).map(([f,h])=>e[f][h]===5))return l;const o=s.map(([f,h])=>e[f][h]);if(o.find(f=>f!==3&&f!==5)||o.filter(f=>f===3).length!==1)return l;const r=s[o.findIndex(f=>f===3)],i=s.filter(([f,h])=>e[f][h]===5);return l.push(T(3,[...i[0],...i[1]])),l.push(T(2,[...T(3,[i[1][0],...r].reverse()),...T(2,[...i[0]].reverse())])),l},tt=e=>{for(e=e.replace(/\s/g,""),e=e.replace(/(\w)(\^-?\d+)/g,"($1)$2");;){let t=e.replace(/\((\w+)\)\^(-?\d+)/g,(n,s,l)=>(l=parseInt(l),l<0&&(s=s.split("").reverse().map(g=>$(g)).join(""),l=-l),s.repeat(l)));if(t===e)break;e=t}return e},xe=e=>{for(e=e.replace(/\s/g,"");;){let t=e.replace(/(\w+)(\1)+/g,(n,s)=>{const l=n.length/s.length;return`(${s})^${l}`});if(t=t.replace(/\(\((\w+)\)\^(\d+)\)\^(\d+)/g,(n,s,l,g)=>`(${s})^${parseInt(l)*parseInt(g)}`),t=t.replace(/\((\w+)\)\^(\d+)(\1)/g,(n,s,l)=>`(${s})^${parseInt(l)+1}`),t=t.replace(/(\w+)\(\1\)\^(\d+)/g,(n,s,l)=>`(${s})^${parseInt(l)+1}`),t===e)break;e=t}return e=e.replace(/\(([A-Z]+)\)\^(\d+)/g,(t,n,s)=>(n=n.split("").reverse().map(l=>$(l)).join(""),`(${n})^-${s}`)),e=e.replace(/([A-Z]+)/g,(t,n)=>(n=n.split("").reverse().map(s=>$(s)).join(""),`(${n})^-1`)),e=e.replace(/\((\w)\)(\^-?\d+)/g,"$1$2"),e};typeof window<"u"&&(window.factor=xe);const A=(e,t)=>{let n=t,s=0;for(;e.quotientMap[n];)s++,n=e.quotientMap[n];return s>1&&(e.quotientMap[t]=n),n},Ce=(e,t,n)=>{const s=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=A(e,t),n=A(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const g=e.cosets.get(t),o=e.cosets.get(n);e.cosets.delete(n);for(const[r,i]of o)g.has(r)?l.push([g.get(r),i]):g.set(r,i)}return A(e,s)},Se=(e,t,n,s)=>{t=A(e,t);const l=e.cosets.get(t);l.has(n)?Ce(e,l.get(n),s):l.set(n,s)},Y=(e,t,n,s)=>{t=A(e,t);let l;const g=e.cosets.get(t);return g.has(n)?(l=A(e,g.get(n)),s!==void 0&&l!==s&&Ce(e,s,l)):(s?l=s:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),Se(e,t,n,l),Se(e,l,$(n),t)),l},_e=function(e,t,n){let s=n;for(let l=t.length-1;l>0;l--)s=Y(e,s,t[l]);Y(e,s,t[0],n)},nt=function(e){var n,s;if(!e.words){const l=A(e,1);e.words=new Map,e.words.set(l,""),(e.compound||!e.dual)&&(e.currentWords=new Map,e.currentWords.set(l,"")),(e.compound||e.dual)&&(e.dualCurrentWords=new Map,e.dualCurrentWords.set(l,"")),e.lastCoset=l,e.remaining=[l],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(l,e.rootVertex))}const t=new Set;for(;e.remaining.length>0;){const l=e.remaining[0],g=A(e,l),o=e.cosets.get(g),r=e.words.get(g);if(r===void 0){if(t.has(l)){console.warn("Failed to find word for coset",l);return}e.remaining.push(e.remaining.shift()),t.add(l);continue}if(o.size<e.gens.length*2)return;const i=[];for(let f=0;f<e.gens.length;f++){const h=e.gens[f],c=A(e,o.get(h));if(!e.words.has(c)){if(e.cosets.get(c).size<e.gens.length*2)return;i.push([h,c])}}e.remaining.shift();for(let f=0;f<i.length;f++){const[h,c]=i[f],p=h+r;if(e.words.set(c,p),(n=e.currentWords)==null||n.set(c,p),(s=e.dualCurrentWords)==null||s.set(c,p),e.lastCoset=c,e.remaining.push(c),e.vertices){let d=e.vertices.get(g);for(let u=0;u<e.transforms[h].length;u++){const v=e.transforms[h][u];d=N(d,e.rootNormals[v],e.metric)}e.vertices.set(c,d)}}}},E=(e,t)=>{let n=A(e,1);for(let s=t.length-1;s>=0;s--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=A(e,l.get(t[s])),e.cosets.get(n).size<e.gens.length*2))return}return n},Oe=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)_e(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length-e.pointer>0;){const s=e.unvisited[e.pointer++],l=A(e,s);if(!e.seen.has(l)){e.seen.add(l),n=l;break}}if(n===null){e.done=!0;break}for(let s=0;s<e.gens.length;s++)Y(e,n,e.gens[s].toUpperCase()),Y(e,n,e.gens[s]);for(let s=0;s<e.rels.length;s++)_e(e,e.rels[s],n)}},st=e=>(Oe(e),e.cosets.size),Ve=e=>(Oe(e),nt(e),e),Me=(e,t,n)=>{if(n){t%2&&t--;const s=e>0?1-e%2:0;return e>=t/2+s?2*(t-e)-1+s:2*e-s}return e>=t/2?2*(t-e)-1:2*e},rt=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const s=new Set;for(let l=0;l<e.length;l++){const g=e[l];if(g)for(let o=0;o<g.length;o++){const r=g[o];for(let i=0;i<n[r].length;i++){const f=q(n[r][i]);s.has(f)||s.add(f)}if(s.size>=t)return!0}}return!1},ue=(e,t,n,s,l,g,o=null,r=null)=>{if(!o){s.every(u=>!u)&&(s=s.map(()=>1));let f="",h=0;const c={};for(let u=0;u<e;u++){if(!F(s[u])){const v=q(h++);f+=v,c[v]=[u]}for(let v=u+1;v<e;v++)if(F(s[u])&&F(s[v])){const a=q(h++);f+=a,c[a]=[u,v]}else if(F(s[u])&&!F(s[v])){const a=q(h++);f+=a,c[a]=[u,v,u]}else if(!F(s[u])&&F(s[v])){const a=q(h++);f+=a,c[a]=[v,u,v]}}const p=Object.entries(c).filter(([u,v])=>v.every(a=>!s[a])).map(([u])=>u).join(""),d=Qe(c,t);if(g){const u=g.split(",");for(let v=0;v<u.length;v++){let a=u[v];a=a.replace(/\s/g,""),a&&(a=tt(a),a.split("").every(m=>f.includes(m.toLowerCase()))&&d.push(a))}}else{const u=Xe(c,t,n);d.push(...u),g=u.map(v=>xe(v)).join(", ")}if(o={new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:s,gens:f,subgens:p,transforms:c,rels:d,extrarels:g,facet:[""],removed:[],children:[]},r=o,r.solved=new Map,s.length>1&&s.filter(u=>u).length===1){const u=s.findIndex(v=>v);if(t[u].every((v,a)=>u===a||v===2)){const v=u===e-1?e-2:u+1,[a]=Object.entries(o.transforms).find(([m,b])=>b.includes(v));r.hosotope={gen:a,index:v}}}}const i=[];for(let f=0;f<e;f++){if(o.removed.includes(f))continue;let h=o.gens.split("").filter(a=>!o.transforms[a].includes(f)).join("");const c=[...o.removed,f],p=c.sort().join("-");let d=!1;if(!r.solved.has(p)){d=!0;const a={dimensions:o.dimensions-1,coxeter:je(r.coxeter,c),stellation:je(r.stellation,c),mirrors:ce(r.mirrors,c),gens:h,subgens:r.subgens.split("").filter(m=>h.includes(m)).join(""),rels:r.rels.filter(m=>m.toLowerCase().split("").every(b=>h.includes(b))),transforms:Object.fromEntries(Object.entries(o.transforms).filter(([m])=>h.includes(m))),removed:c,key:p,limit:l.curvature>0?2500:1e3};Ve(a),a.facet=Array.from(a.words.values()),r.solved.set(p,a),a.dimensions===0&&(r.root=a)}const u=r.solved.get(p),v=r.hosotope&&u.removed.length&&u.removed[0]===r.hosotope.index&&u.removed.every((a,m)=>m===0||a===(u.removed[m-1]+1)%e);if(rt(u.facet,u.dimensions,r.transforms)||v){if(d&&u.dimensions===2){const m=[...u.facet],b=u.gens.split("").every(w=>r.mirrors[r.transforms[w][0]]),y=u.gens.split("").every(w=>r.transforms[w].length===2);for(let w=0;w<m.length;w++)u.facet[w]=m[y?w:Me(w,u.facet.length,b)]}const a={new:d,children:[],...u};a.removed.length<e?o.children.push(ue(e,t,n,s,l,g,a,r)):o.children.push(a)}else i.push(u)}if(o.children.length===0&&o.dimensions>0){console.debug("No leaf found, digging deeper",o.gens);for(let f=0;f<i.length;f++){const h=i[f],c={new:!1,children:[],...h};c.removed.length<e?o.children.push(ue(e,t,n,s,l,g,c,r)):o.children.push(c)}}if(o===r&&s.some(f=>F(f))){let f="",h=[];for(let c=1;c<e;c++)if(c===1){const p=[],d=y=>{y.dimensions===1?y.new&&p.push(y):y.children.forEach(d)};d(o);const u=Object.entries(r.transforms).filter(([y,w])=>w.length!==1||s[w[0]]).filter(([y,w])=>w.length!==3||t[w[0]][w[1]]!==2).map(([y])=>y);for(let y=0;y<p.length;y++){const w=p[y];u.includes(w.gens)&&u.splice(u.indexOf(w.gens),1)}const v=h;h=[];const a=G(1).map((y,w)=>y.map((j,k)=>w===k?1:w===k+1||w===k-1?4:2)),m=G(1).map(y=>y.map(()=>1)),b=be(1).map(()=>"s");for(let y=0;y<u.length;y++){const w=u[y],j={dimensions:1,coxeter:a,stellation:m,mirrors:b};j.gens=w;const k={new:!0,done:!0,key:`se-${w}`,...j,facet:["",w],children:y===0?v:[]};h.push(k)}}else if(c===2){const p=j=>G(2).map((k,x)=>k.map((M,S)=>x===S?1:x===S+1||x===S-1?j:2)),d=j=>G(2).map(k=>k.map(()=>j)),u={},v=Object.entries(r.transforms).filter(([j,k])=>k.length===2),a=Object.entries(r.transforms).filter(([j,k])=>k.length===3);let m="";const b=j=>{j.dimensions===2?j.new&&j.gens.length===1&&(m+=j.gens):j.children.forEach(b)};b(o),f+=m;for(let j=0;j<v.length;j++){const[k,x]=v[j];for(let M=j+1;M<v.length;M++){const[S,O]=v[M];x[x.length-1]===O[O.length-1]&&(u[k+S]={facet:["",k,S]},f+=k+S)}}for(let j=0;j<a.length;j++){const[k,x]=a[j];for(let M=j+1;M<a.length;M++){const[S,O]=a[M];if(x[0]===O[0]&&t[x[1]][O[1]]!==2&&(t[x[1]][x[0]]!==2||t[x[0]][O[1]]!==2)){const L=t[x[1]][O[1]],ne=s[O[1]]||t[x[0]][O[1]]!==2,se=[];for(let re=0;re<L;re++)ne&&se.push(k+(S+k).repeat(L-re)),se.push((S+k).repeat(re));u[k+S]={facet:se,snubCoxeter:p(se.length),snubMirrors:["s",ne?1:0]},f+=k+S}}for(let M=0;M<v.length;M++){const[S,O]=v[M];x[0]===O[1]&&(t[x[1]][O[0]]!==2||t[x[1]][O[1]]!==2||s[x[1]])&&(s[x[1]]||t[x[1]][O[0]]!==2&&t[x[1]][O[1]]!==2?u[k+S]={facet:["",k,k+S,S],snubCoxeter:p(4)}:t[x[1]][O[0]]!==2?u[k+S]={facet:["",S,k+S]}:u[k+S]={facet:["",k,S]},f+=k+S)}}const y=h;h=[],Object.keys(u).length||(u[""]={facet:[""]});const w=Object.entries(u);for(let j=0;j<w.length;j++){const[k,{facet:x,snubCoxeter:M,snubStellation:S,snubMirrors:O}]=w[j],L={dimensions:2,coxeter:M||p(3),stellation:S||d(1),mirrors:O||["s","s"]};L.gens=k;const ne={new:x.length!==1,done:!0,key:`sf-${k}`,...L,facet:x,children:j===0?y:[]};h.push(ne)}}else{const p=G(c).map((b,y)=>b.map((w,j)=>y===j?1:2)),d=G(c).map(b=>b.map(()=>1)),u=be(c).map(()=>"s"),v=h;h=[];let a=f;const m={new:!0,done:!0,key:`s${c}`,gens:o.gens.split("").filter(b=>!a.includes(b)).join(""),dimensions:c,coxeter:p,stellation:d,mirrors:u,facet:[],children:v};h.push(m)}o.children.push(...h)}return o===r&&!o.root&&(o.root=o),o},ae=(e,t,{p:n,normal:s})=>{const l=R(B(n,e),s)/R(B(t,e),s);if(l<0||l>1)return;const g=[];for(let o=0;o<e.length;o++)g.push(e[o]+l*(t[o]-e[o]));return g},it=(e,t,n,s)=>{const l=[],g=[];if(e===0)for(let o=0;o<n.length;o++){const r=n[o],{vertices:i,partial:f}=r,h=ae(i[0],i[1],t);if(!h)continue;const c={...r,key:r.key.replace(/edge_/,"vertex_?-"),vertices:[h]};f?g.push(c):l.push(c)}else if(e===1){s.crossEdges||(s.crossEdges=new Map);for(let o=0;o<n.length;o++){const r=n[o],i=[],f=[];for(let c=0;c<r.vertices.length;c++){const p=r.vertices[c],d=r.vertices[(c+1)%r.vertices.length],u=ae(p,d,t);u&&(f.push(K([p,d])),i.push(u))}if(i.length<2)continue;const h=[];if(i.length>2)for(let c=0;c<i.length;c++)h.push([i[c],i[(c+1)%i.length]]);else h.push(i);if(!r.partial)for(let c=0;c<f.length;c++)s.crossEdges.has(f[c])?s.crossEdges.get(f[c]).add(f[(c+1)%2]):s.crossEdges.set(f[c],new Set([f[(c+1)%2]]));for(let c=0;c<h.length;c++){const p=h[c],d={...r,key:r.key.replace(/face_/,"edge_?-"),vertices:p};r.partial?g.push(d):l.push(d)}}}else if(e===2){s.unfinishedCells||(s.unfinishedCells=new Map);const o=[...n,...Array.from(s.unfinishedCells.values())];for(let r=0;r<o.length;r++){const i=o[r],f=[],h=[];for(let a=0;a<i.vertices.length;a++)for(let m=a+1;m<i.vertices.length;m++){const b=K([i.vertices[a],i.vertices[m]]);if(s.crossEdges.has(b)){const y=ae(i.vertices[a],i.vertices[m],t);if(!y)continue;h.push([b,s.crossEdges.get(b)]),f.push(y)}}if(f.length<3){!s.unfinishedCells.has(i.word)&&!i.partial&&s.unfinishedCells.set(i.word,i);continue}const c=[0];let p=h[0][1];for(let a=0;a<h.length;a++)for(let m=0;m<h.length;m++)if(!c.includes(m)&&p.has(h[m][0])){c.push(m),p=h[m][1];break}let d=i.partial;c.length<f.length?(d=!0,!s.unfinishedCells.has(i.word)&&!i.partial&&s.unfinishedCells.set(i.word,i)):s.unfinishedCells.delete(i.word);const u=[];for(let a=0;a<c.length;a++)u.push(f[c[a]]);const v={...i,key:i.key.replace(/cell_/,"face_?-"),vertices:u,partial:d};d?g.push(v):l.push(v)}}return{sections:l,sectionPartials:g}},We=(e,t,n)=>{const s=t.slice(0,-1),l=t[t.length-1],g=z(s,1/he(R(s,s))),r={p:z(g,l),normal:g},i=[];for(let f=0;f<3;f++){const h=e[f+1],c={objects:[],partials:[]};if(h){const p=h.objects.concat(h.partials);for(let d=0;d<p.length;d++){const u=p[d]||[],{sections:v,sectionPartials:a}=it(f,r,u,n);c.objects.push(v),c.partials.push(a)}}i.push(c)}return i},ze=e=>e>4?9:e<1?1:e,Ae=(e,t)=>{const n=[];let s=0;for(let l=0;l<2;l++){const g=l===1?e.partials:e.objects;for(let o=0;o<g.length;o++){const r=g[o];for(let i=0;i<r.length;i++){const f=r[i];t.includes(f.key)||t.includes(f.key.split("_")[0])||(l===0&&s++,f.subShape=o,n.push(f))}}}return{allObjects:n,nonpartial:s}},ge=(e,t,n,s)=>{const l=[],g=[],o=ze(e);for(let r=0;r<t.length;r++){const i=t[r],{allObjects:f,nonpartial:h}=Ae(i,n),c=[];for(let p=0;p<r+1;p++)c.push(new Float32Array(f.length*o));for(let p=0;p<f.length;p++){const d=f[p],u=[...d.vertices];d.reverse&&([u[0],u[1]]=[u[1],u[0]]);for(let v=0;v<u.length;v++){const a=u[v];for(let m=0;m<a.length;m++)c[v][p*o+m]=a[m]}}l.push(c),g.push({start:s?s[r]:0,size:f.length,nonpartial:h,arity:o})}return{infos:g,data:l}},ee=(e,t,n,s,l)=>{const g=[],o=[],r=ze(e);for(let i=0;i<t.length;i++){const f=t[i],{allObjects:h}=Ae(f,s),c=new Float32Array(h.length*3),p=i===2?new Float32Array(h.length*2):null;for(let d=0;d<h.length;d++){const u=h[d],v=le[n].color({word:u.word,key:u.key,subShape:u.subShape,faceIndex:u.faceIndex,faceSize:u.faceSize,parity:(u.faceIndex+u.word.length+u.parity)%2,dimensions:e,hidden:s,size:h.length,type:U[i],dual:!!u.dual});if(c[d*3+0]=v[0],c[d*3+1]=v[1],c[d*3+2]=v[2],p)if(n.tesselation!=="full"&&u.faceSize===3)p[d*2+0]=0,p[d*2+1]=1/6;else{const a=u.reverse?[1,0]:[0,1];p[d*2+0]=(u.faceIndex+a[0])/u.faceSize,p[d*2+1]=(u.faceIndex+a[1])/u.faceSize}}g.push(c),p&&g.push(p),o.push({start:l?l[i]:0,size:h.length,arity:r,nextIsTri:!!p})}return{infos:o,data:g}},lt=(e,t,n)=>{const s=[],l=[];if(!t.currentWords)return{objects:s,partials:l};if(e===0)for(const[g,o]of t.currentWords)s.push({key:t.key,word:o,vertices:[t.vertices.get(g)]}),t.currentWords.delete(g);else if(e===1)for(const[g,o]of t.currentWords){const r={key:t.key,word:o,vertices:[]};for(let i=0;i<t.facet.length;i++){const f=E(n,o+t.facet[i]);f&&n.vertices.has(f)&&r.vertices.push(n.vertices.get(f))}if(n.hosotope&&n.vertices.size===1&&r.vertices.push(N(r.vertices[0],n.rootNormals[n.hosotope.index-1],n.metric)),!(r.vertices.length<e+1)){if(n.hosotope){let i;if(n.hosotopeVertex?i=o.split("").reverse().reduce((f,h)=>N(f,n.rootNormals[n.gens.indexOf(h)],n.metric),n.hosotopeVertex):(n.hosotopeVertex=X(oe(n.rootVertices)[n.hosotope.index],n.metric),i=n.hosotopeVertex),s.push({...r,vertices:[r.vertices[0],i]}),s.push({...r,vertices:[i,r.vertices[1]]}),n.vertices.size===1){const f=i.map(h=>-h);s.push({...r,vertices:[r.vertices[0],f]}),s.push({...r,vertices:[f,r.vertices[1]]})}}else s.push(r);t.currentWords.delete(g)}}else if(e===2){n.hosotopePair=null;for(const[g,o]of t.currentWords){const r=[];for(let h=0;h<t.facet.length;h++){const c=E(n,o+t.facet[h]);c&&n.vertices.has(c)&&r.push(n.vertices.get(c))}if(n.hosotope){n.vertices.size===1&&r.push(r[0].map(c=>-c));let h;if(n.hosotopePair)h=n.hosotopePair.map(c=>o.split("").reverse().reduce((p,d)=>N(p,n.rootNormals[n.gens.indexOf(d)],n.metric),c));else{const c=X(oe(n.rootVertices)[n.hosotope.index],n.metric);n.hosotopePair=[c,N(c,n.rootNormals[n.hosotope.index],n.metric)],h=n.hosotopePair}r.splice(1,0,h[0]),r.push(h[1]),n.vertices.size===1&&(r[3]=r[1].map(c=>-c))}if(r.length<e+1)continue;const i=r.length<t.facet.length||t.partial;i||t.currentWords.delete(g);const f={key:t.key,word:o,vertices:r,faceIndex:0,faceSize:r.length,parity:t.parity,partial:i};i?l.push(f):s.push(f)}}else if(e===3)for(const[g,o]of t.currentWords){const r=[];for(let h=0;h<t.facet.length;h++){const c=E(n,o+t.facet[h]);c&&n.vertices.has(c)&&r.push(n.vertices.get(c))}if(r.length<e+1)continue;const i=r.length<t.facet.length||t.partial;i||t.currentWords.delete(g);const f={key:t.key,word:o,vertices:r,faceIndex:0,faceSize:r.length,partial:i};i?l.push(f):s.push(f)}return{objects:s,partials:l}},de=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],de(e.slice(1),t);const n=t[t.length-1],s=e.find(g=>g[0]===n||g[1]===n);if(!s)return t;const l=e.indexOf(s);return e.splice(l,1),s[0]===n?t.push(s[1]):t.push(s[0]),de(e,t)},ot=(e,t,n,s)=>{const l=[],g=t.children.find(i=>i.key===n.split("_").slice(-1)[0]),o=[],r=i=>{i.dimensions===e&&o.push(i.facet),i.children.forEach(r)};r(g),t.children.filter(i=>i.key.includes("s")).forEach(r);for(let i=0;i<o.length;i++){const f=o[i];if(f.length<2)continue;const h=[];for(let p=0;p<f.length;p++){const d=E(s,f[p]);d&&s.vertices.has(d)&&h.push(s.vertices.get(d))}let c=new Array(h[0].length).fill(0);for(let p=0;p<h.length;p++){const d=h[p];c=H(c,d)}c=z(c,1/h.length),l.push(R(c,c))}return Re(...l)},ct=(e,t,n,s,l,g)=>{var f,h,c;const{space:o}=g,r=[],i=[];if(!t.dualCurrentWords)return{objects:r,partials:i};if(e===0){g.dualVertices=g.dualVertices||new Map;for(const[p,d]of t.dualCurrentWords){const u=[];for(let y=0;y<t.facet.length;y++){const w=E(g,d+t.facet[y]);w&&g.vertices.has(w)&&u.push(w)}if(u.length<2)continue;const v=u.length<t.facet.length;let a=new Array(n.dimensions).fill(0);for(let y=0;y<u.length;y++){const w=g.vertices.get(u[y]);a=H(a,w)}if(a=X(a,o.metric),o.curvature){let y=0;if(s>=0){let w=1;s>0&&s<n.dimensions-1&&(t.midradius||(t.midradius=ot(s,n,l,g)),w=t.midradius);const j=Q(o.metric,a);for(let k=0;k<u.length;k++){const x=g.vertices.get(u[k]);y+=R(j,x)}y/=w*u.length,s===n.dimensions-1&&(y=1/y)}else y=1;a=z(a,o.curvature/y)}const m={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:d,vertices:[a],dual:!0,partial:v},b=`${l}#${d}`;g.dualVertices.set(b,{vertex:a,facet:u,partial:v}),v?i.push(m):(r.push(m),t.dualCurrentWords.delete(p))}}else if(e===1){if(!((f=g.dualVertices)!=null&&f.size))return{objects:r,partials:i};g.dualEdges=g.dualEdges||new Map;for(const[p,d]of t.dualCurrentWords){const u=[];for(let y=0;y<t.facet.length;y++){const w=E(g,d+t.facet[y]);w&&g.vertices.has(w)&&u.push(w)}if(!u.length)continue;let v=u.length<t.facet.length;const a=[],m=[];for(const[y,{vertex:w,facet:j,partial:k}]of g.dualVertices.entries())if(u.every(x=>j.includes(x))&&(a.push(w),m.push(y)),v=v||k,a.length===2)break;if(a.length!==2)continue;const b={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:d,vertices:a,dual:!0,partial:v};g.dualEdges.set(`${l}#${d}`,{edge:m,partial:v}),v?i.push(b):(r.push(b),t.dualCurrentWords.delete(p))}}else if(e===2){if(!((h=g.dualVertices)!=null&&h.size)||!((c=g.dualEdges)!=null&&c.size))return{objects:r,partials:i};for(const[p,d]of t.dualCurrentWords){const u=[];for(let k=0;k<t.facet.length;k++){const x=E(g,d+t.facet[k]);x&&g.vertices.has(x)&&u.push(x)}if(u.length<t.facet.length)continue;let v=!1;const a={},m=[];for(const[k,{vertex:x,facet:M,partial:S}]of g.dualVertices.entries())(u.every(O=>M.includes(O))||n.dimensions===2)&&(a[k]=x,m.push(k),v=v||S);if(m.length<3)continue;const b=[];for(const{edge:k,partial:x}of g.dualEdges.values())m.includes(k[0])&&m.includes(k[1])&&(v=v||x,b.push([...k]));if(b.length<3)continue;const y=[],w=de(b);if(w.length<4)continue;w[0]===w[w.length-1]&&w.pop();for(let k=0;k<w.length;k++){const x=w[k];y.push(a[x])}const j={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:d,vertices:y,dual:!0,faceSize:y.length,parity:0,partial:v};v?i.push(j):(r.push(j),t.dualCurrentWords.delete(p))}}return{objects:r,partials:i}},ft=(e,t)=>{const n=[],s=[],l=[];for(const[g,o]of t.currentWords){let r;if(o===""){const i=oe(t.space.rootVertices);t.fundamentalVertices=new Map,r=i.map(f=>X(f,t.space.metric)),t.hashes={vertex:new Set,edge:new Set,face:new Set},t.fundamentalVertices.set("",r)}else{r=[...t.fundamentalVertices.get(o.slice(1))];const i=t.gens.indexOf(o[0]);for(let f=0;f<r.length;f++)r[f]=N(r[f],t.space.rootNormals[i],t.space.metric)}for(let i=0;i<r.length;i++){if(e.dimensions<3){const h=new Array(e.dimensions).fill(0);if(n.push({key:"vertex",word:o,vertices:h}),e.dimensions===2){for(let c=0;c<r.length;c++)s.push({key:"edge",word:o,vertices:[h,z(r[c],1e3)]});l.push({key:"face",word:o,vertices:[h,z(r[i],1e3),z(r[(i+1)%r.length],1e3)]})}}else{const f=ye(r[i]);t.hashes.vertex.has(f)||(n.push({key:"vertex",word:o,vertices:[r[i]]}),t.hashes.vertex.add(f));for(let h=i+1;h<r.length;h++){const c=K([r[i],r[h]]);t.hashes.edge.has(c)||(s.push({key:"edge",word:o,vertices:[r[i],r[h]]}),t.hashes.edge.add(c));for(let p=h+1;p<r.length;p++){const d=K([r[i],r[h],r[p]]);if(!t.hashes.face.has(d)){const u=[r[i],r[h],r[p]];o.length%2===1&&u.reverse(),l.push({key:"face",word:o,parity:o.length%2,faceIndex:0,faceSize:3,vertices:u}),t.hashes.face.add(d)}}}}t.fundamentalVertices.set(o,r)}t.currentWords.delete(g)}return[n,s,l]},te=(e,t)=>{const n=ke(B(e[0],e[2]),B(e[1],e[2]));return R(n,e[2])*(t.curvature||-1)>0},Ie=(e,t,n)=>{const s={objects:[],partials:[]};for(let l=0;l<2;l++){const g=l===1,o=g?e.partials:e.objects;for(let r=0;r<o.length;r++){const i=o[r],f=[];for(let h=0;h<i.length;h++){const c=i[h],p=c.vertices[0].length;if(n!=="full"&&c.vertices.length===3&&!c.vertices.reduce((v,a)=>H(v,a),new Array(p).fill(0)).every(v=>Z(v)<1e-12)){f.push({...c,vertices:c.vertices,reverse:te(c.vertices,t.space)});continue}let d=new Array(p).fill(0);for(let v=0;v<c.vertices.length;v++){const a=c.vertices[v];d=H(d,a)}d=z(d,1/c.vertices.length);const u=[];if(t.hosotope&&d.every(v=>Z(v)<1e-12)){const v=ke(c.vertices[0],c.vertices[1]),a=new Array(p).fill(0);v.map((m,b)=>a[b]=m),u.push(a),u.push(a.map(m=>-m));for(let m=3;m<p;m++){const b=[...a];b[2]=0,b[m]=a[2],u.push(b),u.push(b.map(y=>-y))}}else u.push(d);for(let v=0;v<c.vertices.length;v++)for(let a=0;a<u.length;a++){const m=c.vertices[v],b=c.vertices[(v+1)%c.vertices.length],y=u[a];if(n!=="full")f.push({...c,vertices:[m,b,y],reverse:te([m,b,y],t.space),faceIndex:v});else{const w=z(H(m,b),.5);f.push({...c,vertices:[m,w,y],reverse:te([m,w,y],t.space),faceIndex:v*2,faceSize:c.faceSize*2}),f.push({...c,vertices:[w,b,y],reverse:te([w,b,y],t.space),faceIndex:v*2+1,faceSize:c.faceSize*2})}}}g?s.partials.push(f):s.objects.push(f)}}return s},ut=(e,t,n,s,l,g)=>{const o=[];if(g.fundamental){const r=ft(e,g);for(let i=0;i<r.length;i++){const f={objects:[],partials:[]};f.objects.push(r[i]),o.push(f)}}else for(let r=0;r<(l?4:3);r++){const i={objects:[],partials:[]};if(r>=n.facets.length){o.push(i);continue}const f=n.facets[r];for(let h=0;h<f.parts.length;h++){const c=f.parts[h];let p=c.key;g.compound&&c.dual&&(e.dimensions>2?p=`${U[e.dimensions-r-1]}_${c.key.split("_").slice(-1)[0]}`:p="vertex_0-1");const d=t.get(p),{objects:u,partials:v}=c.dual?ct(r,d,e,s,c.key,g):lt(r,d,g);i.objects.push(u),i.partials.push(v)}o.push(i)}return o},at=(e,t,n,s,l)=>{if(s||n.length===0)return t.includes(e);const g=[],o=[];for(const r of n){const i=E(l,r);if(!i)return null;const f=E(l,e+r);if(!f)return null;g.push(i),o.push(f)}return g.sort((r,i)=>r-i),o.sort((r,i)=>r-i),g.every((r,i)=>r===o[i])},gt=(e,t)=>{const{gens:n,localgens:s,facet:l,partial:g,rank:o}=e;let r="";for(let i=0;i<n.length;i++){const f=at(n[i],s,l,g,t);if(f===null)return;f&&(r+=n[i])}if(t.hosotope){if(o===1)r=r.replace(t.hosotope.gen,"");else if(o===2){let i=t.coxeter[t.hosotope.index].findIndex((h,c)=>c!==t.hosotope.index&&h!==2);i<0&&(i=t.hosotope.index<t.dimensions-1?t.hosotope.index+1:0);const f=Object.entries(t.transforms).find(([h,c])=>c.includes(i))[0];r=r.replace(f,t.hosotope.gen)}}return r},Ee=(e,t,n,s,l)=>{const g=l.space.eigens.values.some(i=>i<=0),o={facets:[],infinite:g,done:!0};l.compound&&l.dual&&(l.dual=!1,Object.assign(o,Ee(e,t,n,s,l)),l.dual=!0);const r=i=>{const f=l.dual||l.fundamental?t.dimensions-i.dimensions-1:i.dimensions;i.children.forEach(r);const h=`${U[f]}_${l.dual?"dual_":l.fundamental?"fundamental_":""}${i.key}`,c=f===t.dimensions-1&&(l.dual||l.compound)||l.fundamental||!l.fundamental&&f<(s?4:3);if(i!=null&&i.new){if(o.facets[f]||(o.facets[f]={dimensions:f,processing:0,count:0,parts:[],compute:c,done:!1,dual:l.dual,fundamental:l.fundamental}),!l.compound||!l.dual){n.has(h)||n.set(h,{});const d=n.get(h);if(!d.key&&(Object.assign(d,{gens:t.gens,rels:t.rels,transforms:t.transforms,key:h,localgens:i.gens,facet:i.facet,partial:!i.done,rank:f,mirrors:i.mirrors,compute:c,done:!1,count:0,dual:l.dual,compound:l.compound,space:l.space,...i.dimensions===0&&!l.fundamental?{rootVertex:l.space.rootVertex,rootNormals:l.space.rootNormals,rootVertices:l.space.rootVertices,metric:l.space.metric}:{}}),i.dimensions===2&&(d.parity=0,i.mirrors[1]&&!i.mirrors[0]&&(d.parity=1),i.transforms))){const u=Object.values(i.transforms).filter(v=>v.length===1).map(([v])=>v).sort();u.length===2&&(d.parity+=1+(u[1]-u[0]),d.parity=d.parity%2)}}const p=l.fundamental?i.mirrors.map(()=>0):i.mirrors;o.facets[f].parts.push({key:h,coxeter:i.coxeter,stellation:i.stellation,mirrors:p,dual:l.dual,fundamental:l.fundamental,count:0,done:!1})}};return t.children.forEach(r),ht(o,t,n,l,s),o},dt=(e,t,n,s)=>{const l=s.dual&&!s.compound||s.fundamental?[...e.facets].reverse():e.facets;s.dual&&!s.compound&&s.metric.length===2&&l.push(l.shift());const g=l.filter(o=>o.compute).every(o=>o.done);e.done=!0;for(let o=0;o<l.length;o++){const r=l[o];r.done=!0,r.count=0,r.processing=0;for(let i=0;i<r.parts.length;i++){const f=r.parts[i],h=f.key,c=t.get(h);s.compound&&!c||(typeof c.facet=="function"&&(c.facet=c.facet(s)),c.subgens===void 0&&(c.subgens=gt(c,s)),!c.done&&(g||c.compute)&&c.subgens!==void 0&&(c.limit=c.compute?n:2e3,o===1&&e.infinite&&(c.limit*=1.75),c.compute?(Ve(c),f.count=c.cosets.size,f.processing=c.words.size):f.count=st(c),f.done=c.done),r.done=r.done&&f.done,r.count+=f.count,r.processing+=f.processing)}e.done=e.done&&r.done}if(s.compound)for(let o=0;o<l.length;o++){const r=l[o];for(let i=0;i<r.parts.length;i++){const f=r.parts[i],h=f.key;if(t.get(h))continue;const c=h.replace(/dual_/g,""),p=t.get(c);p&&(p.compute?(f.count=p.cosets.size,f.processing=p.words.size):f.count=p.count,f.done=p.done,r.count+=f.count,r.processing+=f.processing)}}},ht=(e,t,n,s,l)=>{const g=o=>({dimensions:o.rank,processing:1,count:0,parts:[{key:o.key,coxeter:o.coxeter,stellation:o.stellation,mirrors:o.mirrors,dual:s.dual,fundamental:s.fundamental,count:0,done:!0}],done:!0});if(t.dimensions===0){const o={...t,key:"vertex",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:[""],rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0,vertices:new Map([[1,[0]]])};Object.assign(s,o),n.set(o.key,o),e.facets[0]=g(o)}else if(t.dimensions===1){const o={...t,key:"edge",currentWords:t.currentWords||new Map([[1,""]]),subgens:t.subgens,facet:r=>r.words?Array.from(r.words.values()):[""],rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(o.key,o),e.facets[1]=g(o)}else if(t.dimensions===2){const o=i=>{if(i.fundamental)return[];const f=t.gens.split("").every(d=>t.mirrors[t.transforms[d][0]]),h=t.gens.split("").every(d=>t.transforms[d].length===2),c=Array.from(i.words.values()),p=new Array(c.length);for(let d=0;d<c.length;d++)p[d]=c[h?d:Me(d,p.length,f)];return p},r={...t,key:"face",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:o,rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(r.key,r),e.facets[2]=g(r)}else if(t.dimensions===3&&l!==null){const o={...t,key:"cell",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:r=>Array.from(r.words.values()),rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(o.key,o),e.facets[3]=g(o)}};let D,C,_,W,I,P;onmessage=({data:{type:e,space:t,dimensions:n,coxeter:s,stellation:l,mirrors:g,ambiance:o,batch:r,hidden:i,reciprocation:f,extrarels:h,section:c,iteration:p}})=>{try{if(p<0&&(_=ue(n,s,l,g,t,h),C={space:t,fundamental:g.length&&g.every(a=>!a),dual:g.some(a=>qe(a)),compound:g.some(a=>He(a)),lasts:new Array(3).fill(0),subgens:_.subgens,hosotope:_.hosotope,coxeter:_.coxeter},D=new Map([[`${U[C.dual&&!C.compound||C.fundamental?n-1:0]}_${C.dual&&!C.compound?"dual_":C.fundamental?"fundamental_":""}${_.root.key}`,C]]),W=Ee(r,_,D,c,C),I=[],P=[],Object.assign(self,{shape:_,polytope:W,fullObjects:I,fullRawObjects:P,tcParams:D,root:C})),e==="paint"){const a=ee(_.dimensions,I,o,i);postMessage({color:a},a.data.filter(m=>m).map(m=>m.buffer));return}if(e==="tesselate"){if(!P.length)return;let a=[...P];c!==null&&(a=We(a,c,C)),a[2]=Ie(a[2],C,le[o].tesselation),I=a;const m=ge(_.dimensions,a,i),b=ee(_.dimensions,a,o,i);C.lasts=m.infos.map(y=>y.start+y.nonpartial),postMessage({geometry:m,color:b},m.data.flat(1).concat(b.data).filter(y=>y).map(y=>y.buffer));return}if(e==="display"){const a=ge(_.dimensions,I,i),m=ee(_.dimensions,I,o,i);C.lasts=a.infos.map(b=>b.start+b.nonpartial),postMessage({geometry:a,color:m},a.data.flat(1).concat(m.data).filter(b=>b).map(b=>b.buffer));return}e==="iterate"&&dt(W,D,r,C);let d=ut(_,D,W,f,c,C);for(let a=0;a<d.length;a++){const m=d[a];P[a]||(P[a]={objects:[],partials:[]}),P[a].objects.push(...m.objects),P[a].partials=m.partials}c!==null&&(d=We(d,c,C)),d[2]=Ie(d[2],C,le[o].tesselation);for(let a=0;a<d.length;a++){const m=d[a];I[a]||(I[a]={objects:[],partials:[]}),I[a].objects.push(...m.objects),I[a].partials=m.partials}const u=ge(_.dimensions,d,i,C.lasts),v=ee(_.dimensions,d,o,i,C.lasts);C.lasts=u.infos.map(a=>a.start+a.nonpartial),W.gens=_.gens,W.subgens=_.subgens,W.rels=_.rels,W.transforms=_.transforms,W.extrarels=_.extrarels,W.fundamental=C.fundamental,W.dual=C.dual,W.compound=C.compound,W.size=C.fundamental?C.words.size:C.vertices.size,postMessage({polytope:W,geometry:u,color:v},u.data.flat(1).concat(v.data).filter(a=>a).map(a=>a.buffer))}catch(d){postMessage({error:d})}}})();
