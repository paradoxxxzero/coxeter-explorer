(function(){"use strict";const T=e=>e!==""&&e!=="x",we=e=>e==="m"||e==="b"||e==="c"||e==="d",je=e=>e==="c"||e==="d",O=e=>e==="s"||e==="b"||e==="d",E=(e,t=null,s=1,n=!1)=>{if(t===null&&(t=e,e=0),s===0)throw new Error("Step cannot be zero.");if(t<e&&s>0||t>e&&s<0){if(n)return[];s=-s}return new Array(Math.ceil((t-e)/s)).fill().map((f,v)=>e+v*s)},$=(e,t)=>e.length!==t.length?!1:e.every((s,n)=>Array.isArray(s)?$(s,t[n]):s===t[n]),D=(e,t)=>{let s=0;for(let n=0;n<e.length;n++)s+=e[n]*t[n];return s},I=(e,t)=>{const s=[];for(let n=0;n<e.length;n++)s[n]=e[n]+t[n];return s},ke=(e,t)=>{const s=[];for(let n=0;n<e.length;n++)s[n]=e[n]-t[n];return s},W=(e,t)=>{const s=[];for(let n=0;n<e.length;n++)s[n]=e[n]*t;return s},Y=e=>{const t=[];for(let s=0;s<e[0].length;s++){t.push([]);for(let n=0;n<e.length;n++)t[s].push(e[n][s])}return t},R=(e,t)=>{const s=new Array(e.length);for(let n=0;n<e.length;n++){let f=0;for(let v=0;v<e[0].length;v++)f+=e[n][v]*t[v];s[n]=f}return s},Ve=e=>{const t=new Array(e.length);for(let s=0;s<e.length;s++)t[s]=new Array(e.length).fill(0),t[s][s]=e[s];return t},P=e=>{const t=new Array(e).fill(1);return Ve(t)},Z=(e,t)=>e.filter((s,n)=>!t.includes(n)),ie=(e,t)=>Z(e,t).map(s=>Z(s,t)),N=(e,t,s)=>ke(e,W(R(me(s),t),2*D(R(ze(s),e),t))),H=(e,t)=>{if(t.some((n,f)=>n.some((v,h)=>f===h&&v===0)))return e[e.length-1]===0&&(e[e.length-1]=1e-16),W(e,1/e[e.length-1]);let s=D(R(t,e),e);return s===0&&(s=1e-16),W(e,-1/Ce(Q(s)))},ze=e=>e.map((t,s)=>t.map((n,f)=>s===f&&n===0?1:n)),me=e=>e.map(t=>t.map(s=>Q(s))),L=(e,t,s,n)=>{if([e,t,s].filter(g=>g===2).length===2)return 0;const f=J/e,v=J/t,h=J/s;return ce(J/Se(-_(f)*_(h)+G(f)*G(h)*((_(v)-_(n*f)*_(h))/(G(n*f)*G(h)))))},{abs:Q,cos:_,sin:G,tan:Qe,cosh:Ge,sinh:Je,acos:Se,acosh:Ke,atan:Xe,atan2:Ye,min:Ze,max:pe,round:ce,sqrt:Ce,cbrt:et,sign:tt,ceil:nt,floor:st,log:ot,exp:rt,hypot:it,pow:Me,PI:J}=Math,ye=(...e)=>e.reduce((t,s)=>t+s,0)/e.length,le=new ArrayBuffer(8),Ae=new Float64Array(le),fe=new Int32Array(le);function Oe(e){return~~e===e?~~e:(Ae[0]=e,fe[0]^fe[1])}const ue=10**4,p=e=>{let t="";for(let s=0;s<e.length;s++)t+=Oe(ce(e[s]*ue)/ue).toString(),s<e.length-1&&(t+="|");return t},M=e=>String.fromCharCode(97+e),ge=e=>e.charCodeAt(0)-97,ee=(e,t="",s=[])=>{const n=[];for(let f=0;f<e.length;f++){const[v,h]=e[f],g=e.filter((o,u)=>u!==f);if(s.length){const o=s[s.length-1];if(h.some(u=>u===o)){const u=h[1]===o,d=u?v.toUpperCase():v,l=u?[...h].reverse():h;if(l[1]===s[0])return[t+d];g.length&&n.push(...ee(g,t+d,s.concat(l.slice(1))))}}else n.push(...ee(g,v,h))}return n},F=(e,t,s,n,f,v=[])=>{let h="";const g=n.map((r,c)=>v.includes(c)||r?"":M(c)).join(""),o={},u=[];for(let r=0;r<e;r++)if(!v.includes(r)){if(!O(n[r])){const c=M(r);h+=c,o[c]=[r],u.push(c.repeat(2))}for(let c=r+1;c<e;c++){if(v.includes(c))continue;const x=t[r][c];if(O(n[r])&&O(n[c])){const i=M((r+1)*e+c);h+=i,o[i]=[r,c],x>1&&u.push(i.repeat(x))}else if(O(n[r])&&!O(n[c])){const i=M((r+1)*e+c);h+=i,o[i]=[r,c,r],u.push(i.repeat(2)),x>1&&u.push((i+M(c)).repeat(x%2===0?x/2:x))}else if(!O(n[r])&&O(n[c])){const i=M((r+1)*e+c);h+=i,o[i]=[c,r,c],u.push(i.repeat(2)),x>1&&u.push((i+M(r)).repeat(x%2===0?x/2:x))}else x>1&&u.push((M(r)+M(c)).repeat(x))}}const d=Object.entries(o).filter(([r,c])=>c.length===3),l=Object.entries(o).filter(([r,c])=>c.length===2);if(l.length>1){const r=ee(l);u.push(...r.map(c=>c.split("").reverse().join("")))}if(d.length>1)for(let r=0;r<d.length;r++){const[c,x]=d[r];for(let i=r+1;i<d.length;i++){const[w,b]=d[i];if(x[1]===b[1]){const k=l.find(([a,j])=>j[0]===x[0]&&j[1]===b[0]);if(k){const a=k[0];u.push(c.toUpperCase()+a.toUpperCase()+w+a)}}else if(x[0]===b[0]){const k=t[x[1]][b[1]];k>1&&u.push((c+w).repeat(k))}}}if(!n.some(r=>O(r))&&!s.every(r=>r.every(c=>c===1))&&f.curvature>0){if(e===4&&s[0][1]>1!=s[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(r=>v.includes(r))||(s[0][1]>1&&u.push("abcdcb".repeat(L(t[0][1],t[1][2],t[0][2],s[0][1]))),s[2][3]>1&&u.push("abcdcb".repeat(L(t[2][3],t[1][2],t[1][3],s[2][3]))));else for(let r=1;r<e;r++)for(let c=0;c<r;c++)if(s[c][r]>1){if(c+2<e){const x=L(t[c+1][r+1],t[c][r],t[c][r+1],s[c][r]);x&&!v.includes(c)&&!v.includes(r)&&!v.includes(c+2)&&u.push((M(c)+M(r)+M(c+2)+M(r)).repeat(x))}if(c-1>=0){const x=L(t[c-1][r-1],t[c][r],t[c-1][r],s[c][r]);x&&!v.includes(c)&&!v.includes(r)&&!v.includes(c-1)&&u.push((M(c)+M(r)+M(c)+M(c-1)).repeat(x))}}}return{gens:h,subgens:g,rels:u,transforms:o}},We=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},A=(e,t)=>{let s=t,n=0;for(;e.quotientMap[s];)n++,s=e.quotientMap[s];return n>1&&(e.quotientMap[t]=s),s},de=(e,t,s)=>{const n=t,f=[[t,s]];for(;f.length>0;)if([t,s]=f.pop(),t>s&&([t,s]=[s,t]),t=A(e,t),s=A(e,s),t!==s){e.quotientMap[s]=t,e.seen.has(s)&&!e.seen.has(t)&&e.seen.add(t);const v=e.cosets.get(t),h=e.cosets.get(s);e.cosets.delete(s);for(const[g,o]of h)v.has(g)?f.push([v.get(g),o]):v.set(g,o)}return A(e,n)},he=(e,t,s,n)=>{t=A(e,t);const f=e.cosets.get(t);f.has(s)?de(e,f.get(s),n):f.set(s,n)},K=(e,t,s,n)=>{t=A(e,t);let f;const v=e.cosets.get(t);return v.has(s)?(f=A(e,v.get(s)),n!==void 0&&f!==n&&de(e,n,f)):(n?f=n:(f=e.nextVertex++,e.cosets.set(f,new Map),e.unvisited.push(f)),he(e,t,s,f),he(e,f,We(s),t)),f},ae=function(e,t,s){let n=s;for(let f=t.length-1;f>0;f--)n=K(e,n,t[f]);K(e,n,t[0],s)},Pe=function(e){if(!e.words){const t=A(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],s=A(e,t),n=e.cosets.get(s),f=e.words.get(s);if(n.size<e.gens.length*2)return;const v=[];for(let h=0;h<e.gens.length;h++){const g=e.gens[h],o=A(e,n.get(g));if(!e.words.has(o)){if(e.cosets.get(o).size<e.gens.length*2)return;v.push([g,o])}}e.remaining.shift();for(let h=0;h<v.length;h++){const[g,o]=v[h],u=g+f;if(e.words.set(o,u),e.currentWords.set(o,u),e.lastCoset=o,e.remaining.push(o),e.vertices){let d=e.vertices.get(s);for(let l=0;l<e.transforms[g].length;l++){const r=e.transforms[g][l];d=N(d,e.rootNormals[r],e.metric)}e.vertices.set(o,d)}}}},q=(e,t)=>{let s=A(e,1);for(let n=t.length-1;n>=0;n--){const f=e.cosets.get(s);if(f.size<e.gens.length*2||(s=A(e,f.get(t[n])),e.cosets.get(s).size<e.gens.length*2))return}return s},ve=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)ae(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let s=null;for(;e.unvisited.length-e.pointer>0;){const n=e.unvisited[e.pointer++],f=A(e,n);if(!e.seen.has(f)){e.seen.add(f),s=f;break}}if(s===null){e.done=!0;break}for(let n=0;n<e.gens.length;n++)K(e,s,e.gens[n].toUpperCase()),K(e,s,e.gens[n]);for(let n=0;n<e.rels.length;n++)ae(e,e.rels[n],s)}},qe=e=>(ve(e),e.cosets.size),xe=e=>(ve(e),Pe(e),e),Ee=(e,t,s)=>{if(t===0)return!0;if(e.length<=t)return!1;const n=new Set;for(let f=0;f<e.length;f++){const v=e[f];if(v)for(let h=0;h<v.length;h++){const g=v[h];for(let o=0;o<s[g].length;o++){const u=M(s[g][o]);n.has(u)||n.add(u)}if(n.size>=t)return!0}}return!1},te=(e,t,s,n,f)=>{const v=E(s.length).filter(d=>!f.includes(d));let h="";const g=Object.entries(n),o=g.filter(([d,l])=>l.length===1),u=g.filter(([d,l])=>l.length===3);for(let d=0;d<g.length;d++){const[l,r]=g[d];if(r.length===1){const c=r[0];if(!f.includes(c)&&!u.some(([x,i])=>i[1]===c)){h+=l;continue}if(!T(e[c]))continue;!e[c]&&!v.some(x=>x!==c&&s[x][c]!==2)&&(h+=l)}else if(r.length===2){const c=r[0],x=r[1],i=s[c][x];if(t.gens.includes(l)&&(t.dimensions===1?i===2:i>2)){h+=l;continue}if(!T(e[c])||!T(e[x]))continue}else if(r.length===3&&f.length&&typeof f[f.length-1]=="string"&&f[f.length-1].includes("s")){const c=r[0],x=r[1],i=s[c][x],w=f[f.length-1].split("s").filter(b=>b);for(let b=0;b<w.length;b++){const k=w[b],a=n[Object.keys(n)[k]];if(a.length===3&&r[1]===a[1]){const j=s[a[0]][a[1]];if((t.dimensions===1?![2,4].includes(i)||[2,4].includes(j):i!==2)&&(h+=l),o.find(([z,V])=>a.every(S=>S!==V[0]))){const z=o.find(([V,S])=>S[0]===a[1]);z&&(h+=z[0])}}}}}return h},ne=(e,t,s,n,f,v=null,h=null,g=null)=>{if(n.every(o=>!o)&&(n=n.map(()=>1)),v=v||n.map((o,u)=>T(o)?null:u).filter(o=>o!==null),!h&&(h={new:!0,key:"",dimensions:e,coxeter:t,stellation:s,mirrors:n,skips:v,...F(e,t,s,n,f,v),quotient:"",facet:[""],children:[]},g=h,g.solved=new Map,n.filter(o=>o).length===1)){const o=n.findIndex(u=>u);if(t[o].every((u,d)=>o===d||u===2)){const u=o===e-1?e-2:o+1,[d]=Object.entries(h.transforms).find(([l,r])=>r.includes(u));g.hosotope={gen:d,index:u}}}for(let o=0;o<e;o++){if(v.includes(o)||v.includes("s"))continue;const u=[...v,o],d=[...u].sort().join("-");let l=!1;if(!g.solved.has(d)){l=!0;const i={key:d,dimensions:e-u.length,coxeter:ie(t,u),stellation:ie(s,u),mirrors:Z(n,u),skips:u,...F(e,t,s,n,f,u)};if(i.gens===null)continue;xe(i),g.solved.set(d,i)}const r=g.solved.get(d),c=Array.from(r.words.values()),x=g.hosotope&&u.length&&u[0]===g.hosotope.index&&u.every((i,w)=>w===0||i===(u[w-1]+1)%e);if(Ee(c,r.dimensions,r.transforms)||x){let i=te(n,r,t,g.transforms,u);if(g.hosotope){if(r.dimensions===1)i=i.replace(g.hosotope.gen,"");else if(r.dimensions===2){let b=g.coxeter[g.hosotope.index].findIndex((a,j)=>j!==g.hosotope.index&&a!==2);b<0&&(b=g.hosotope.index<g.dimensions-1?g.hosotope.index+1:0);const k=Object.entries(g.transforms).find(([a,j])=>j.includes(b))[0];i=i.replace(k,g.hosotope.gen)}}let w={new:l,...r,quotient:i,facet:c,children:[]};r.dimensions>0&&(w=ne(e,t,s,n,f,u,w,g)),h.children.push(w)}}if(h.children.length===0&&e-v.length>1){console.debug("No leaf found, digging deeper",v);for(let o=0;o<e;o++){if(v.includes(o))continue;const u=[...v,o],d=u.sort().join("-");let r={new:!1,...g.solved.get(d),quotient:"",facet:[""],children:[]};r=ne(e,t,s,n,f,u,r,g),h.children.push(r)}}if(h===g&&n.some(o=>O(o))){let o=[];for(let u=1;u<e;u++){const d=[...v,...E(e-u).map(()=>"s")],l=e-d.length;if(u===1){const r=[],c=a=>{a.children.forEach(c),a.dimensions===1&&a.new&&r.push(a)};c(h);const x=Object.entries(g.transforms).filter(([a,j])=>j.length!==1||n[j[0]]).filter(([a,j])=>j.length!==3||t[j[0]][j[1]]!==2).map(([a])=>a);for(let a=0;a<r.length;a++){const j=r[a];x.includes(j.gens)&&x.splice(x.indexOf(j.gens),1)}const i=o;o=[];const w=P(l).map((a,j)=>a.map((m,z)=>j===z?1:j===z+1||j===z-1?4:2)),b=P(l).map(a=>a.map(()=>1)),k=E(l).map(()=>"s");for(let a=0;a<x.length;a++){const j=x[a];d[d.length-1]=h.gens.indexOf(j)+"s";const m={key:d.join("-"),dimensions:l,coxeter:w,stellation:b,mirrors:k,skips:d,...F(l,w,b,k,f,d)};m.gens=j;const z={new:!0,...m,quotient:te(n,m,t,g.transforms,d),facet:["",j],children:a===0?i:[]};o.push(z)}}else if(u===2){const r=P(l).map((a,j)=>a.map((m,z)=>j===z?1:j===z+1||j===z-1?3:2)),c=P(l).map(a=>a.map(()=>1)),x=E(l).map(()=>"s"),i=[],w=Object.entries(g.transforms).filter(([a,j])=>j.length>=2).filter(([a,j])=>j.length!==3||t[j[0]][j[1]]!==2),b=Object.entries(g.transforms).filter(([a,j])=>j.length===1);for(let a=0;a<w.length;a++){const[j,m]=w[a];for(let z=a+1;z<w.length;z++){const[V,S]=w[z];m[m.length-1]===S[S.length-1]&&i.push(["",j,V]),m.length!==S.length&&(m.length===2&&m[0]===S[2]||m.length===3&&m[2]===S[0])&&i.push(["",j.toUpperCase(),V.toUpperCase()])}if(m.length===3)for(let z=0;z<b.length;z++){const[V,S]=b[z];m.every(re=>re!==S[0])&&i.push(["",j,V+j])}}const k=o;o=[],i.length||i.push([""]);for(let a=0;a<i.length;a++){const j=i[a];d[d.length-1]=j.length===1?"s":h.gens.indexOf(j[1].toLowerCase())+"s"+h.gens.indexOf(j[2].replace(j[1],"").toLowerCase());const m={key:d.join("-"),dimensions:l,coxeter:r,stellation:c,mirrors:x,skips:d,...F(l,r,c,x,f,d)},z={new:!0,...m,quotient:te(n,m,t,g.transforms,d),facet:j,children:a===0?k:[]};o.push(z)}}else{const r=P(l).map((b,k)=>b.map((a,j)=>k===j?1:2)),c=P(l).map(b=>b.map(()=>1)),x=E(l).map(()=>"s"),i=o;o=[];const w={new:!0,key:d.join("-"),dimensions:l,coxeter:r,stellation:c,mirrors:x,skips:d,...F(l,r,c,x,f,d),facet:[""],quotient:"",children:i};o.push(w)}}h.children.push(...o)}return h},U=["vertex","edge","face"],se=(e,t,s)=>(s<0&&(s+=1),s>1&&(s-=1),s<1/6?e+(t-e)*6*s:s<1/2?t:s<2/3?e+(t-e)*(2/3-s)*6:e),y=(e,t,s)=>{let n,f,v;if(t===0)n=f=v=s;else{const h=s<.5?s*(1+t):s+t-s*t,g=2*s-h;n=se(g,h,e+1/3),f=se(g,h,e),v=se(g,h,e-1/3)}return[n,f,v]},X=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Ie={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>y(e.length*.03%1,.75,.7)},Ne=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>y((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>y(...X[e.length%X.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},shading:!1,face:{opacity:.9},transparency:"oit",color:({word:e,subShape:t,type:s})=>s==="face"?y((t*.23+e.length*.07)%1,1,.58):[0,0,0]},synthwave:{background:[...y(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>y((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>y(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>y(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:s,size:n})=>t==="face"?y((e-2)*.21%1,1,.8):y(s/n,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?y(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:s,draw:n})=>{const f=e.length?ge(e[e.length-1])/s:0;return y(f%1,1,t==="face"?.6:n.face?0:.8)}},harlequin:{background:[...y(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:s})=>{const n=e.split("").map(v=>ge(v)).reduce((v,h)=>v+h,0),f=[...X[n%X.length]];return t%2&&(f[2]*=.5),y(...f)}},pure:{background:[0,0,0,1],color:({word:e})=>y(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>y((e||0)/(t||1),.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},glass:{background:[0,0,0,1],transparency:"blend",opacity:.2,ambient:0,diffuse:"fresnel",specular:"blinn-phong",face:{shininess:16,diffuse:!1},color:({subShape:e,word:t,type:s})=>s!=="vertex"?y((e*.21+t.length*.03)%1,1,.8):[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:s})=>y(e.length*.06%1,1,t==="face"?.6:s.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Me(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Ie,...t,transparent:{}}])),_e=(e,t,s,n)=>{const f=[],v=[],h=e>4?9:e;for(let g=0;g<t.length;g++){const o=t[g];if(!o){f.push(null),v.push(null);continue}const u=[new Float32Array(o.size*3)];for(let r=0;r<g+1;r++)u.push(new Float32Array(o.size*h));let d=0;const l=o.objects.concat(o.partials);for(let r=0;r<l.length;r++){const c=l[r];if(c)for(let x=0;x<c.length;x++){const i=c[x];for(let b=0;b<i.vertices.length;b++){const k=i.vertices[b];for(let a=0;a<k.length;a++)u[b+1][d*h+a]=k[a]}const w=Ne[s].color({word:i.word,key:i.key,subShape:r%o.objects.length,faceIndex:i.faceIndex,faceSize:i.faceSize,dimensions:e,draw:n,idx:d,size:o.size,type:U[g],dual:!!i.dual});u[0][d*3+0]=w[0],u[0][d*3+1]=w[1],u[0][d*3+2]=w[2],d++}}f.push(u),v.push({start:o.start,size:o.size})}return{infos:v,data:f}},Fe=(e,t,s=!1,n=!1)=>{if(s){if(n)return e;t%2&&t--;const f=e>0?1-e%2:0;return e>=t/2+f?2*(t-e)-1+f:2*e-f}return e>=t/2?2*(t-e)-1:2*e},Ue=(e,t,s,n)=>{const f=[],v=[];if(e===0)for(const[h,g]of t.currentWords)f.push({word:g,vertices:[t.vertices.get(h)]}),t.currentWords.delete(h);else if(e===1)for(const[h,g]of t.currentWords){const o={word:g,vertices:[]};for(let u=0;u<t.facet.length;u++){const d=q(n.root,g+t.facet[u]);d&&n.root.vertices.has(d)&&o.vertices.push(n.root.vertices.get(d))}if(!(o.vertices.length<e+1)){if(n.root.hosotope){let u;n.root.hosotopeVertex?u=g.split("").reverse().reduce((d,l)=>N(d,n.root.rootNormals[n.root.gens.indexOf(l)],n.root.metric),n.root.hosotopeVertex):(n.root.hosotopeVertex=H(Y(n.root.rootVertices)[n.root.hosotope.index],n.root.metric),u=n.root.hosotopeVertex),f.push({...o,vertices:[o.vertices[0],u]}),f.push({...o,vertices:[u,o.vertices[1]]})}else f.push(o);t.currentWords.delete(h)}}else if(e===2){n.root.hosotopePair=null;for(const[h,g]of t.currentWords){const o=t.mirrors.every(i=>!!i),u=t.mirrors.every(i=>O(i)),d=g.length%2?0:1,l=[];for(let i=0;i<t.facet.length;i++){const w=Fe(i,t.facet.length,o,u),b=q(n.root,g+t.facet[w]);b&&n.root.vertices.has(b)&&l.push(n.root.vertices.get(b))}if(n.root.hosotope){let i;if(n.root.hosotopePair)i=n.root.hosotopePair.map(w=>g.split("").reverse().reduce((b,k)=>N(b,n.root.rootNormals[n.root.gens.indexOf(k)],n.root.metric),w));else{const w=H(Y(n.root.rootVertices)[n.root.hosotope.index],n.root.metric);n.root.hosotopePair=[w,N(w,n.root.rootNormals[n.root.hosotope.index],n.root.metric)],i=n.root.hosotopePair}l.splice(1,0,i[0]),l.push(i[1])}if(l.length<e+1)continue;const r=l.length<t.facet.length;if(r||t.currentWords.delete(h),l.length===3&&!l.reduce((i,w)=>I(i,w),new Array(s.dimensions).fill(0)).every(i=>Q(i)<1e-12)){d&&([l[2],l[1]]=[l[1],l[2]]);const i={word:g,vertices:l,faceIndex:0,faceSize:3,partial:r};r?v.push(i):f.push(i);continue}let c=new Array(s.dimensions).fill(0);for(let i=0;i<l.length;i++){const w=l[i];c=I(c,w)}c=W(c,1/l.length);const x=[];if(c.every(i=>Q(i)<1e-12)){const i=l[0].map((w,b)=>w===0?b:null).filter(w=>w!==null);if(!i.length)x.push(c);else for(let w=0;w<i.length;w++){const b=i[w];for(let k=-1;k<2;k+=2){const a=c.map((j,m)=>m===b?k:j);x.push(a)}}}else x.push(c);for(let i=0;i<l.length;i++)for(let w=0;w<x.length;w++){const b={word:g,vertices:[l[(i+d)%l.length],l[(i+(1-d))%l.length],x[w]],faceIndex:i,faceSize:l.length,partial:r};r?v.push(b):f.push(b)}}}return{objects:f,partials:v}},oe=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],oe(e.slice(1),t);const s=t[t.length-1],n=e.find(v=>v[0]===s||v[1]===s);if(!n)return t;const f=e.indexOf(n);return e.splice(f,1),n[0]===s?t.push(n[1]):t.push(n[0]),oe(e,t)},Be=(e,t,s,n)=>{const f=[],v=t.children.find(o=>o.key===s.replace("d","")),h=[],g=o=>{o.dimensions===e&&h.push(o.facet),o.children.forEach(g)};g(v),t.children.filter(o=>o.key.includes("s")).forEach(g);for(let o=0;o<h.length;o++){const u=h[o];if(u.length<2)continue;const d=[];for(let r=0;r<u.length;r++){const c=q(n,u[r]);c&&n.vertices.has(c)&&d.push(n.vertices.get(c))}let l=new Array(d[0].length).fill(0);for(let r=0;r<d.length;r++){const c=d[r];l=I(l,c)}l=W(l,1/d.length),f.push(D(l,l))}return ye(...f)},Te=(e,t,s,n,f,v)=>{var u,d,l;const{space:h}=n.root,g=[],o=[];if(e===0){n.root.dualVertices=n.root.dualVertices||new Map;for(const[r,c]of t.currentWords){const x=[];for(let k=0;k<t.facet.length;k++){const a=q(n.root,c+t.facet[k]);a&&n.root.vertices.has(a)&&x.push(a)}if(x.length<2)continue;const i=x.length<t.facet.length;let w=new Array(s.dimensions).fill(0);for(let k=0;k<x.length;k++){const a=n.root.vertices.get(x[k]);w=I(w,a)}if(w=H(w,h.metric),h.curvature){let k=0;if(f>=0){let a=1;f>0&&f<s.dimensions-1&&(t.midradius||(t.midradius=Be(f,s,v,n.root)),a=t.midradius);const j=R(h.metric,w);for(let m=0;m<x.length;m++){const z=n.root.vertices.get(x[m]);k+=D(j,z)}k/=a*x.length,f===s.dimensions-1&&(k=1/k)}else k=1;w=W(w,h.curvature/k)}const b={word:c,vertices:[w],dual:!0,partial:i};n.root.dualVertices.set(`${v}#${c}`,{vertex:w,facet:x,partial:i}),i?o.push(b):(g.push(b),t.currentWords.delete(r))}}else if(e===1){if(!((u=n.root.dualVertices)!=null&&u.size))return{objects:g,partials:o};n.root.dualEdges=n.root.dualEdges||new Map;for(const[r,c]of t.currentWords){const x=[];for(let a=0;a<t.facet.length;a++){const j=q(n.root,c+t.facet[a]);j&&n.root.vertices.has(j)&&x.push(j)}if(!x.length)continue;let i=x.length<t.facet.length;const w=[],b=[];for(const[a,{vertex:j,facet:m,partial:z}]of n.root.dualVertices.entries())if(x.every(V=>m.includes(V))&&(w.push(j),b.push(a)),i=i||z,w.length===2)break;if(w.length!==2)continue;const k={word:c,vertices:w,dual:!0,partial:i};n.root.dualEdges.set(`${v}#${c}`,{edge:b,partial:i}),i?o.push(k):(g.push(k),t.currentWords.delete(r))}}else if(e===2){if(!((d=n.root.dualVertices)!=null&&d.size)||!((l=n.root.dualEdges)!=null&&l.size))return{objects:g,partials:o};for(const[r,c]of t.currentWords){const x=[];for(let V=0;V<t.facet.length;V++){const S=q(n.root,c+t.facet[V]);S&&n.root.vertices.has(S)&&x.push(S)}if(x.length<t.facet.length)continue;let i=!1;const w={},b=[];for(const[V,{vertex:S,facet:re,partial:Re}]of n.root.dualVertices.entries())(x.every(He=>re.includes(He))||s.dimensions===2)&&(w[V]=S,b.push(V),i=i||Re);if(b.length<3)continue;const k=[];for(const{edge:V,partial:S}of n.root.dualEdges.values())b.includes(V[0])&&b.includes(V[1])&&(i=i||S,k.push([...V]));if(k.length<3)continue;const a=[],j=oe(k);if(j.length<4)continue;j[0]===j[j.length-1]&&j.pop();for(let V=0;V<j.length;V++){const S=j[V];a.push(w[S])}if(a.length===3){const V={word:c,vertices:a,dual:!0,partial:i};i?o.push(V):(g.push(V),t.currentWords.delete(r));continue}const m=c.length%2?0:1;let z=new Array(s.dimensions).fill(0);for(let V=0;V<a.length;V++){const S=a[V];z=I(z,S)}z=W(z,1/a.length);for(let V=0;V<a.length;V++){const S={word:c,vertices:[a[(V+m)%a.length],a[(V+(1-m))%a.length],z],dual:!0,faceIndex:V,faceSize:a.length,partial:i};i?o.push(S):(g.push(S),t.currentWords.delete(r))}}}return{objects:g,partials:o}},$e=(e,t,s)=>{const n=[],f=[],v=[];for(const[h,g]of e.currentWords){let o;if(g===""){const u=Y(s.rootVertices);e.fundamentalVertices=new Map,o=u.map(d=>H(d,s.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",o)}else{o=[...e.fundamentalVertices.get(g.slice(1))];const u=e.gens.indexOf(g[0]);for(let d=0;d<o.length;d++)o[d]=N(o[d],s.rootNormals[u],s.metric)}for(let u=0;u<o.length;u++){const d=p(o[u]);e.hashes.vertex.has(d)||(n.push({word:g,cosetId:h,vertices:[o[u]]}),e.hashes.vertex.add(d));for(let l=u+1;l<o.length;l++){const r=[o[u],o[l]].sort((c,x)=>{for(let i=0;i<c.length;i++){if(c[i]<x[i])return-1;if(c[i]>x[i])return 1}return 0}).map(c=>p(c)).join("-");e.hashes.edge.has(r)||(f.push({word:g,cosetId:h,vertices:[o[u],o[l]]}),e.hashes.edge.add(r));for(let c=l+1;c<o.length;c++){const x=[o[u],o[l],o[c]].sort((i,w)=>{for(let b=0;b<i.length;b++){if(i[b]<w[b])return-1;if(i[b]>w[b])return 1}return 0}).map(i=>p(i)).join("-");e.hashes.face.has(x)||(v.push({word:g,cosetId:h,vertices:[o[u],o[l],o[c]]}),e.hashes.face.add(x))}}e.fundamentalVertices.set(g,o)}e.currentWords.delete(h)}return[n,f,v]},De=(e,t,s,n,f,v,h,g,o)=>{h.root.lasts||(h.root.lasts=new Array(3).fill(0));const u=[];if(f){const d=$e(h.root,e,s);for(let l=0;l<d.length;l++)n[U[l]]?(u.push({start:h.root.lasts[l],size:d[l].length,objects:[d[l]],partials:[]}),h.root.lasts[l]+=d[l].length):u.push(null)}else for(let d=0;d<3;d++){if(!h[d]||!v&&!n[U[d]]){u.push(null);continue}const l={start:h.root.lasts[d],size:0,objects:[],partials:[]};for(let r=0;r<h[d].detail.length;r++){const c=h[d].detail[r],x=t.get(c.key);if(!c.dual&&g.includes(c.key)||!x.compute||!x.currentWords.size){l.objects.push(null),l.partials.push(null);continue}const{objects:i,partials:w}=c.dual?Te(d,x,e,h,o,c.key):Ue(d,x,e,h);!n[U[d]]||g.includes(c.key)||(l.objects.push(i),l.size+=i.length+w.length,h.root.lasts[d]+=i.length,l.partials.push(w))}u.push(l)}return u},be=(e,t,s,n,f,v,h,g,o=[])=>{o.done=!0;let u=!0;for(const l of s.values())if(l.compute&&!l.done){u=!1;break}const d=l=>{const r=h||v?t.dimensions-l.dimensions-1:l.dimensions;l.children.forEach(d);const c=g[r],x=U[r],i=`${h?"d":v?"f":""}${l.key}`;if(l!=null&&l.new){o[r]||(o[r]={dimensions:r,processing:f[x]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const w=n.eigens.values;if(!s.has(i)){const j={...t,key:i,subgens:l.quotient,facet:l.facet,subdimensions:r,mirrors:l.mirrors,compute:c,space:n,...l.dimensions===0&&!v?{rootVertex:n.rootVertex,rootNormals:n.rootNormals,rootVertices:n.rootVertices,metric:n.metric}:{}};s.set(i,j)}const b=s.get(i);l.dimensions===0&&(o.root=b),b.done||(b.limit=c?e:u?1e3:1,x==="edge"&&n.curvature<=0&&(b.limit*=1.75),c?(xe(b),w.some(j=>j<=0)?b.count=1/0:b.count=b.cosets.size):w.some(j=>j<=0)?(b.count=1/0,b.done=!0):b.limit&&(b.count=qe(b)));const k=v?l.mirrors.map(()=>0):l.mirrors;o[r].detail.push({key:i,coxeter:l.coxeter,stellation:l.stellation,mirrors:k,dual:h,fundamental:v,count:b.count,done:b.done});const a=o[r].aggregated.find(({coxeter:j,stellation:m,mirrors:z})=>$(j,l.coxeter)&&$(m,l.stellation)&&$(z,k));a?(a.done=a.done&&b.done,a.count+=b.count,a.key+=","+i):o[r].aggregated.push({key:i,coxeter:l.coxeter,stellation:l.stellation,mirrors:k,count:b.count,done:b.done}),f[x]&&b.words&&(o[r].processing+=b.words.size),o[r].count+=b.count,o[r].done=o[r].done&&b.done,o[r].dual=h,o[r].fundamental=v,o.done=o.done&&b.done}};return t.children.forEach(d),o.size=v?o.root.words.size:o.root.vertices.size,o};let B,C;onmessage=({data:{first:e,space:t,dimensions:s,coxeter:n,stellation:f,mirrors:v,ambiance:h,draw:g,batch:o,hidden:u,reciprocation:d}})=>{try{e&&(B=new Map,C=ne(s,n,f,v,t));const l=v.every(a=>!a),r=v.some(a=>we(a)),c=v.some(a=>je(a)),x=l?{[s-1]:!0}:r?{[s-1]:!0,[s-2]:g.edge||g.face,[s-3]:g.face,0:!0}:{0:!0,1:g.edge,2:g.face},i=be(o,C,B,t,g,l,r&&!c,x);c&&be(o,C,B,t,g,l,r,x,i),C.dimensions===2&&(C.currentWords=new Map([[1,""]]),C.facet=Array.from(i.root.words.values()),C.done=!0,B.set("f",{...C,subgens:C.subgens,facet:C.facet,subdimensions:C.dimensions,mirrors:C.mirrors,compute:!0}),i[2]={dimensions:2,processing:1,count:1,detail:[{key:"f",coxeter:C.coxeter,stellation:C.stellation,mirrors:C.mirrors,dual:r,count:1,done:!0}],aggregated:[{key:"f",coxeter:C.coxeter,stellation:C.stellation,mirrors:C.mirrors,dual:r,count:1,done:!0}],done:!0});const w=De(C,B,t,g,l,r,i,u,d),{infos:b,data:k}=_e(C.dimensions,w,h,g);i.root=void 0,postMessage({polytope:i,infos:b,data:k},k.flat(1).filter(a=>a).map(a=>a.buffer))}catch(l){postMessage({error:l.message})}}})();
