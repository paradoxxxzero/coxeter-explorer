(function(){"use strict";const B=(t,e,n)=>{let l=0;for(let s=0;s<t.length;s++)l+=t[s]*e[s]*(s===t.length-1&&n||1);return l},F=(t,e,n)=>{t=t.slice();const l=2*B(t,e,n);for(let s=0;s<t.length;s++)t[s]-=l*(n||s!==t.length-1?e[s]:0);return t},D=(t,e,n,l)=>{const s=v/t,a=v/e,i=v/n;return L(v/H(-C(s)*C(i)+R(s)*R(i)*((C(a)-C(l*s)*C(i))/(R(l*s)*R(i)))))},{abs:ee,cos:C,sin:R,tan:te,cosh:ne,sinh:le,acos:H,acosh:se,atan:re,atan2:fe,min:oe,max:ae,round:L,sqrt:ie,sign:ce,ceil:ge,floor:he,log:ue,exp:de,hypot:pe,pow:be,PI:v}=Math;function*U(t,e){if(e<0||t.length<e)return;const n=Array.from(Array(e).keys());for(;;){yield n.map(s=>t[s]);let l=e-1;for(;l>=0&&n[l]>=t.length-e+l;)l--;if(l<0)return;for(let s=n[l]+1;l<e;l++,s++)n[l]=s}}const W=(t,e=2)=>Array.from(U(t,e)),y=t=>String.fromCharCode(97+t),J=t=>t.charCodeAt(0)-97,M=(t,e,n,l,s,a=[])=>{const i=[];for(let o=0;o<t;o++)a.includes(o)||i.push(y(o).repeat(2));for(let o=1;o<t;o++)for(let f=0;f<o;f++)!a.includes(o)&&!a.includes(f)&&e[o][f]>1&&i.push((y(f)+y(o)).repeat(e[o][f]));if(n&&!n.every(o=>o.every(f=>f===1))&&s>0){if(t===4&&(n[0][1]>1||n[2][3]>1)&&e[0][1]>3&&e[2][3]>3)n[0][1]>1&&i.push("abcdcb".repeat(D(e[0][1],e[1][2],e[0][2],n[0][1]))),n[2][3]>1&&i.push("abcdcb".repeat(D(e[2][3],e[1][2],e[1][3],n[2][3])));else for(let o=1;o<t;o++)for(let f=0;f<o;f++)if(n[f][o]>1){if(f+2<t){const h=D(e[f+1][o+1],e[f][o],e[f][o+1],n[f][o]);i.push((y(f)+y(o)+y(f+2)+y(o)).repeat(h))}if(f-1>=0){const h=D(e[f-1][o-1],e[f][o],e[f-1][o],n[f][o]);i.push((y(f)+y(o)+y(f)+y(f-1)).repeat(h))}}}return i},K=(t,e=null,n=1,l=!1)=>{if(e===null&&(e=t,t=0),n===0)throw new Error("Step cannot be zero.");if(e<t&&n>0||e>t&&n<0){if(l)return[];n=-n}return new Array(Math.ceil((e-t)/n)).fill().map((s,a)=>t+a*n)},E=t=>t!==""&&t!=="x",V=(t,e=[])=>t.map((n,l)=>e.includes(l)?"":y(l)).join(""),N=(t,e=[])=>t.map((n,l)=>e.includes(l)||n?"":y(l)).join(""),Q=(t,e,n,l,s)=>{const a=l.map((h,d)=>E(h)?null:d).filter(h=>h),i=M(t,e,n,l,s,a),o=V(l,a),f=N(l,a);return{gens:o,subgens:f,rels:i}},X=(t,e,n,l,s)=>{const a=l.map((h,d)=>E(h)?null:d).filter(h=>h),i=M(t,e,n,l,s,a),o=V(l,a),f=[];for(let h=0;h<l.length;h++)if(l[h]){let d=y(h);for(let b=0;b<t;b++)e[h][b]===2&&!l[b]&&(d+=y(b));f.push({gens:o,subgens:d,rels:i,target:y(h)})}return f},Y=(t,e,n,l,s)=>{const a=l.map((d,b)=>E(d)?null:b).filter(d=>d),i=M(t,e,n,l,s,a),o=V(l,a),f=[],h=W(K(t),t-2);for(let d=0;d<h.length;d++){const b=Array.from(new Set(h[d].concat(a))),A=M(t,e,n,l,s,b);let u=V(l,b);const p=N(l,b),r=I({gens:u,subgens:p,rels:A,cosets:{normal:[],reverse:[]},rows:[],words:[],limit:1e3}).words;if(r.length>2){let g="";for(let c=0;c<t;c++)b.includes(c)||(g+=y(c));for(let c=0;c<t;c++)if(!l[c]){let m=!0;for(let w=0;w<t;w++)if(!b.includes(w)&&e[w][c]!==2){m=!1;break}m&&(g+=y(c))}f.push({gens:o,subgens:g,rels:i,face:r,double:l.filter((c,m)=>!b.includes(m)).every(c=>!!c)})}}return f},Z=(t,e)=>{if(e.left===e.right)return!1;for(;e.left!==e.right;){const n=t.normal[e.left_coset][e.rel[e.left]];if(n===void 0)break;e.left++,e.left_coset=n}for(;e.left!==e.right;){const n=t.reverse[e.right_target][e.rel[e.right]];if(n===void 0)break;e.right--,e.right_target=n}return e.left===e.right?(t.normal[e.left_coset][e.rel[e.right]]=e.right_target,t.reverse[e.right_target][e.rel[e.right]]=e.left_coset,!0):!1},I=t=>{const{gens:e,subgens:n,rels:l,cosets:s,rows:a,words:i,limit:o}=t,f=e.length,h=l.map(u=>[...u].map(p=>e.indexOf(p))),d=n.split("").map(u=>e.indexOf(u));if(s.normal.length===0){s.normal.push(new Array(f).fill()),s.reverse.push(new Array(f).fill());for(let u=0;u<d.length;u++)s.normal[0][d[u]]=0,s.reverse[0][d[u]]=0}for(a.length===0&&a.push(...h.map(u=>({rel:u,left:0,right:u.length-1,left_coset:0,right_target:0})));a.length&&s.normal.length<o;){for(;;){let r=!1;for(let g=a.length-1;g>=0;g--)Z(s,a[g])&&(r=!0,a.splice(g,1));if(!r)break}const u=s.normal.length;let p=!1;for(let r=0;r<s.normal.length;r++){const g=s.normal[r];for(let c=0;c<g.length;c++){let m=g[c];if(m===void 0){m=s.normal.length,s.normal.push(new Array(f).fill()),s.reverse.push(new Array(f).fill()),s.normal[r][c]=m,s.reverse[m][c]=r,a.push(...h.map(w=>({rel:w,left:0,right:w.length-1,left_coset:u,right_target:u}))),p=!0;break}}if(p)break}}a.length||(t.done=!0),i.length===0&&(i[0]="");let b=!0,A=s.normal.length;for(;$(s.normal.length,i)&&b&&--A;){b=!1;for(let u=0;u<i.length;u++){if(i[u]===void 0)continue;const p=s.normal[u];for(let r=0;r<p.length;r++){const g=p[r];g===void 0||i[g]!==void 0||(i[g]=i[u]+e[r],b=!0)}}}return b||console.warn("Hole in the cosets"),A===0&&console.warn("Max iterations reached"),{cosets:s,rows:a,words:i}},$=(t,e)=>{for(let n=0;n<t;n++)if(e[n]===void 0)return!0;return!1};let k=null,G=null,O=null;const x=(t,e,n,l,s)=>{const a=()=>({cosets:{normal:[],reverse:[]},rows:[],words:[],done:!1,lastDrawn:0});k={...Q(t,e,n,l,s),...a()},G=X(t,e,n,l,s).map(i=>({...i,...a()})),O=Y(t,e,n,l,s).map(i=>({...i,...a(),toRetry:new Set}))},z=(t,e)=>{const{rootVertex:n,mirrorsPlanes:l,curvature:s}=t;let a=n;for(let i=0;i<e.length;i++)a=F(a,l[e.charCodeAt(i)-97],s);return a},j=(t,e)=>{for(let n=0;n<t.length;n++){const l=J(t[n]),s=k.cosets.normal[e][l];if(s===void 0)return;e=s}return e};onmessage=({data:{order:t,curvature:e,mirrorsPlanes:n,coxeter:l,stellation:s,mirrors:a,rootVertex:i,dimensions:o,uuid:f}})=>{t===0&&x(o,l,s,a,e);const h=(t+1)*(e>0?500:100);try{let d=[],b=[],A=[],u=[];if(!k.done){k.limit=h,I(k);for(let p=k.lastDrawn;p<k.words.length;p++){const r=k.words[p];if(r===void 0){d.push({vertex:new Array(o).fill(NaN),word:""});continue}const g=z({rootVertex:i,mirrorsPlanes:n,curvature:e},r);d.push({vertex:g,word:r,i:p}),k.lastDrawn=p+1}}for(let p=0;p<G.length;p++){const r=G[p];r.done||(r.limit=h*(e>0?1:e<0?1.5:3),I(r));const g=j(r.target,0);for(let c=r.lastDrawn;c<r.words.length;c++){const m=r.words[c];if(m===void 0)continue;const w=j(m,0),_=j(m,g);if(w===void 0||_===void 0){r.lastDrawn=c;break}b.push({start:w,end:_,word:m}),r.lastDrawn=c+1}}for(let p=0;p<O.length;p++){const r=O[p];r.done||(r.limit=h*(e>0?1:e<0?1.5:2.5),I(r));const g=[];for(let c=0;c<r.face.length;c++)g.push(j(r.face[c],0));for(const c of r.toRetry){const m=r.words[c],w=[];for(let _=0;_<g.length;_++){const P=g[T(_,g.length,r.double)];if(P===void 0)continue;const S=j(m,P);S!==void 0&&w.push(S)}w.length===g.length?(A.push({vertices:w,word:m,len:g.length}),r.toRetry.delete(c)):u.push({vertices:w,word:m,len:g.length})}for(let c=r.lastDrawn;c<r.words.length;c++){let m=!1;const w=r.words[c],_=[];for(let P=0;P<g.length;P++){const S=g[T(P,g.length,r.double)];if(S===void 0){m=!0;continue}const q=j(w,S);if(q===void 0){m=!0;continue}_.push(q)}m?(u.push({vertices:_,word:w,len:g.length}),r.toRetry.add(c)):A.push({vertices:_,word:w,len:g.length}),r.lastDrawn=c+1}}postMessage({vertices:d,edges:b,faces:A,partials:u,order:t,uuid:f})}catch(d){postMessage({error:d.message,uuid:f})}};const T=(t,e,n=!1)=>{if(n){const l=t>0?1-t%2:0;return t>=e/2+l?2*(e-t)-1+l:2*t-l}return t>=e/2?2*(e-t)-1:2*t}})();
