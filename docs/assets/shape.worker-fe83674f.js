(function(){"use strict";const L=["vertex","edge","face","cell","4-face","5-face","6-face","7-face","8-face","9-face"],{abs:U,cos:pt,sin:vt,tan:mt,cosh:yt,sinh:bt,acos:wt,acosh:kt,atan:jt,atan2:xt,min:Ct,max:St,round:$e,sqrt:ge,cbrt:_t,sign:Ot,ceil:Vt,floor:Mt,log:Wt,exp:zt,hypot:At,pow:Ie,PI:Et}=Math,Fe=(...e)=>e.reduce((t,n)=>t+n,0)/e.length,de=new ArrayBuffer(8),Re=new Float64Array(de),he=new Int32Array(de);function Pe(e){return~~e===e?~~e:(Re[0]=e,he[0]^he[1])}const pe=10**4,ve=e=>{let t="";for(let n=0;n<e.length;n++)t+=Pe($e(e[n]*pe)/pe).toString(),n<e.length-1&&(t+="|");return t},Ge=e=>e.sort((t,n)=>{for(let s=0;s<t.length;s++){if(t[s]<n[s])return-1;if(t[s]>n[s])return 1}return 0}),Z=e=>Ge(e).map(t=>ve(t)).join("-"),q=e=>String.fromCharCode(97+e),me=e=>e.charCodeAt(0)-97,I=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},ye=(e,t=null,n=1,s=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(s)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,d)=>e+d*n)},Ne=e=>e==="m"||e==="b"||e==="c"||e==="d",Te=e=>e==="c"||e==="d",F=e=>e==="s"||e==="b"||e==="d",R=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},be=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],K=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]+t[s];return n},H=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]-t[s];return n},A=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]*t;return n},re=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let s=0;s<e.length;s++)t[n].push(e[s][n])}return t},J=(e,t)=>{const n=new Array(e.length);for(let s=0;s<e.length;s++){let l=0;for(let d=0;d<e[0].length;d++)l+=e[s][d]*t[d];n[s]=l}return n},qe=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},G=e=>{const t=new Array(e).fill(1);return qe(t)},le=(e,t)=>e.filter((n,s)=>!t.includes(s)),we=(e,t)=>le(e,t).map(n=>le(n,t)),N=(e,t,n)=>H(e,A(J(De(n),t),2*R(J(Be(n),e),t))),Q=(e,t)=>{if(t.some((s,l)=>s.some((d,o)=>l===o&&d===0)))return e[e.length-1]===0&&(e[e.length-1]=1e-16),A(e,1/e[e.length-1]);let n=R(J(t,e),e);return n===0&&(n=1e-16),A(e,-1/ge(U(n)))},He=1,Be=e=>e.map((t,n)=>t.map((s,l)=>n===l&&s===0?He:s)),De=e=>e.map(t=>t.map(n=>U(n))),Le=e=>{const t=[];for(let o=0;o<e.length;o++)for(let r=o+1;r<e.length;r++)e[o][r]!==2&&t.push([o,r]);if(t.length!==e.length-1)return;const n=new Array(e.length).fill(0);if(t.forEach(([o,r])=>{n[o]++,n[r]++}),n.some(o=>o>3)||n.filter(o=>o===1).length!==2)return;const l=[n.indexOf(1)],d=[];for(let o=0;o<e.length-1;o++){const r=l[l.length-1],i=t.findIndex(a=>a.includes(r));let f=t[i];t.splice(i,1),f[0]===r&&f.reverse(),l.push(f[0]),d.push(f.reverse())}return{group:l,pairs:d}},Ue=e=>{const t=new Array(e.length).fill(0);for(let l=0;l<e.length;l++)for(let d=l+1;d<e.length;d++)e[l][d]!==2&&(t[l]++,t[d]++);if(t.filter(l=>l===3).length!==1||t.filter(l=>l===1).length!==e.length-1)return;const n=t.indexOf(3),s=t.map((l,d)=>[d,n]).filter(([l,d])=>l!==d);return{group:[n],pairs:s}},Ze=e=>{const t=Le(e);if(t)return{type:"c",description:"C-Group",...t};const n=Ue(e);return n?{type:"star",description:"Star Group",...n}:{type:"other",description:"Other Group"}},ie=(e,t="",n=[])=>{const s=[];for(let l=0;l<e.length;l++){const[d,o]=e[l],r=e.filter((i,f)=>f!==l);if(n.length){const i=n[n.length-1];if(o.some(f=>f===i)){const f=o[1]===i,a=f?d.toUpperCase():d,c=f?[...o].reverse():o;if(c[1]===n[0])return[t+a];r.length&&s.push(...ie(r,t+a,n.concat(c.slice(1))))}}else s.push(...ie(r,d,o))}return s},Ke=(e,t)=>{var i,f;const n=[],s=Object.entries(e),l=s.filter(([a,c])=>c.length===1),d=s.filter(([a,c])=>c.length===2),o=s.filter(([a,c])=>c.length===3),r=Object.fromEntries(l.map(([a,c])=>[c[0],a]));for(let a=0;a<s.length;a++){const[c,p]=s[a];if([1,3].includes(p.length)&&n.push(c.repeat(2)),p.length===2){const h=t[p[0]][p[1]];h>1&&n.push(c.repeat(h))}if(p.length===1){const h=p[0];for(let u=0;u<l.length;u++){const[v,g]=l[u];if(g>h){const m=t[h][g];m>1&&n.push((c+v).repeat(m))}}}if(p.length===3){const h=t[p[0]][p[1]];if(h>1){const u=r[p[1]];u?n.push((c+u).repeat(h%2===0?h/2:h)):console.warn("No conjugate conjugate reflection",c,p)}for(let u=0;u<o.length;u++){const[v,g]=o[u];if(g[1]===p[1]&&g[0]>p[0]){let m=(i=d.find(([k,y])=>y[0]===p[0]&&y[1]===g[0]))==null?void 0:i[0];m||(m=I((f=d.find(([k,y])=>y[1]===p[0]&&y[0]===g[0]))==null?void 0:f[0])),m&&n.push(I(c)+I(m)+v+m)}if(g[0]===p[0]&&g[1]>p[1]){const m=t[p[1]][g[1]];m>1&&n.push((c+v).repeat(m))}}}}if(d.length>1){const a=ie(d);n.push(...a.map(c=>c.split("").reverse().join("")))}return n},Je=(e,t,n)=>{const s=[];if(t.length>2&&t.length<6&&n.some((r,i)=>r.some((f,a)=>f>1&&t[i][a]>1))){const r=Ze(t);r.type==="c"?s.push(...Qe(t,n,r.group,r.pairs)):r.type==="star"&&s.push(...Xe(t,n,r.group,r.pairs))}t.length===3&&t[0][1]===5&&t[0][2]===3&&t[1][2]===5&&(n[0][1]===3&&n[0][2]===1&&n[1][2]===1||n[0][1]===1&&n[0][2]===1&&n[1][2]===3)&&s.push(T(2,[0,1,2,1]));const l=Object.fromEntries(Object.entries(e).filter(([r,i])=>i.length===1).map(([r,i])=>[i[0],r])),d=Object.entries(e).filter(([r,i])=>i.length===2).map(([r,i])=>[[i,r],[[...i].reverse(),I(r)]]).flat(),o=[];for(let r=0;r<s.length;r++){const i=s[r];let f="",a=!1;for(let c=0;c<i.length;c++){const p=i[c],h=l[p];if(h)f+=h;else{const u=d.find(([v,g])=>v[0]===p&&c<i.length-1&&v[1]===i[c+1]);if(u)f+=u[1],c++;else{a=!0;break}}}a||o.push(f)}return t.length===3&&e.a.length===2&&e.b.length===3&&e.c.length===3&&t[0][1]!==2&&t[1][2]===3&&o.push("abcb".repeat(2)),t.length===3&&e.a.length===1&&e.b.length===3&&e.c.length===3&&t[1][2]!==2&&t[0][1]===3&&o.push("dcbc".repeat(2)),o},T=(e,t)=>Array(e).fill(t).flat(),Qe=(e,t,n,s)=>{const l=[];if(!s.filter(([h,u])=>t[h][u]>1).map(([h,u])=>e[h][u]===5))return l;const o=s.map(([h,u])=>e[h][u]);if(o.filter(h=>h!==3&&h!==5).length>(e.length===3?0:1))return l;if(o.filter(h=>h!==3&&h!==5).length===1){const h=o.findIndex(u=>u!==3&&u!==5);if(![0,o.length-1].includes(h))return l}const r=[o,[...o].reverse()],i=s.map(([h,u])=>t[h][u]),f=[i,[...i].reverse()],a=({m:h,s:u})=>{if(h.length!==e.length-1)return!1;for(let v=0;v<r.length;v++){const g=r[v],m=f[v];if(g.every((k,y)=>k===h[y]||h[y]===null)&&m.every((k,y)=>k===u[y]||u[y]===null))return!0}};if(a({m:[null,5,5],s:[null,1,2]})&&(o[i[0]===2?o.length-1:0]=0),[{m:[null,3,5,5],s:[null,1,1,2]},{m:[null,5,5,5],s:[null,1,2,1]},{m:[null,5,3,5],s:[null,1,1,2]}].some(a)||(a({m:[5,5,5,3],s:[1,1,2,1]})&&(o[i[1]===2?o.length-1:0]=0),o.filter(h=>h===3).length>e.length-3))return l;const c=[];let p=[];for(let h=0;h<o.length;h++)o[h]===5&&(p.length?(p.push(h),c.push(p),p=[h]):p.push(h));for(let h=0;h<c.length;h++){const[u,v]=c[h],g=[];for(let m=u;m<v+2;m++)g.push(n[m]);g.push(...g.slice(1,g.length-1).reverse()),l.push(T(3,g))}return l},Xe=(e,t,n,s)=>{const l=[];if(e.length!==4||!s.filter(([f,a])=>t[f][a]>1).map(([f,a])=>e[f][a]===5))return l;const o=s.map(([f,a])=>e[f][a]);if(o.find(f=>f!==3&&f!==5)||o.filter(f=>f===3).length!==1)return l;const r=s[o.findIndex(f=>f===3)],i=s.filter(([f,a])=>e[f][a]===5);return l.push(T(3,[...i[0],...i[1]])),l.push(T(2,[...T(3,[i[1][0],...r].reverse()),...T(2,[...i[0]].reverse())])),l},Ye=e=>{for(e=e.replace(/\s/g,""),e=e.replace(/(\w)(\^-?\d+)/g,"($1)$2");;){let t=e.replace(/\((\w+)\)\^(-?\d+)/g,(n,s,l)=>(l=parseInt(l),l<0&&(s=s.split("").reverse().map(d=>I(d)).join(""),l=-l),s.repeat(l)));if(t===e)break;e=t}return e},ke=e=>{for(e=e.replace(/\s/g,"");;){let t=e.replace(/(\w+)(\1)+/g,(n,s)=>{const l=n.length/s.length;return`(${s})^${l}`});if(t=t.replace(/\(\((\w+)\)\^(\d+)\)\^(\d+)/g,(n,s,l,d)=>`(${s})^${parseInt(l)*parseInt(d)}`),t=t.replace(/\((\w+)\)\^(\d+)(\1)/g,(n,s,l)=>`(${s})^${parseInt(l)+1}`),t=t.replace(/(\w+)\(\1\)\^(\d+)/g,(n,s,l)=>`(${s})^${parseInt(l)+1}`),t===e)break;e=t}return e=e.replace(/\(([A-Z]+)\)\^(\d+)/g,(t,n,s)=>(n=n.split("").reverse().map(l=>I(l)).join(""),`(${n})^-${s}`)),e=e.replace(/([A-Z]+)/g,(t,n)=>(n=n.split("").reverse().map(s=>I(s)).join(""),`(${n})^-1`)),e=e.replace(/\((\w)\)(\^-?\d+)/g,"$1$2"),e};typeof window<"u"&&(window.factor=ke);const z=(e,t)=>{let n=t,s=0;for(;e.quotientMap[n];)s++,n=e.quotientMap[n];return s>1&&(e.quotientMap[t]=n),n},je=(e,t,n)=>{const s=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=z(e,t),n=z(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const d=e.cosets.get(t),o=e.cosets.get(n);e.cosets.delete(n);for(const[r,i]of o)d.has(r)?l.push([d.get(r),i]):d.set(r,i)}return z(e,s)},xe=(e,t,n,s)=>{t=z(e,t);const l=e.cosets.get(t);l.has(n)?je(e,l.get(n),s):l.set(n,s)},X=(e,t,n,s)=>{t=z(e,t);let l;const d=e.cosets.get(t);return d.has(n)?(l=z(e,d.get(n)),s!==void 0&&l!==s&&je(e,s,l)):(s?l=s:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),xe(e,t,n,l),xe(e,l,I(n),t)),l},Ce=function(e,t,n){let s=n;for(let l=t.length-1;l>0;l--)s=X(e,s,t[l]);X(e,s,t[0],n)},et=function(e){var n,s;if(!e.words){const l=z(e,1);e.words=new Map,e.words.set(l,""),(e.compound||!e.dual)&&(e.currentWords=new Map,e.currentWords.set(l,"")),(e.compound||e.dual)&&(e.dualCurrentWords=new Map,e.dualCurrentWords.set(l,"")),e.lastCoset=l,e.remaining=[l],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(l,e.rootVertex))}const t=new Set;for(;e.remaining.length>0;){const l=e.remaining[0],d=z(e,l),o=e.cosets.get(d),r=e.words.get(d);if(r===void 0){if(t.has(l)){console.warn("Failed to find word for coset",l);return}e.remaining.push(e.remaining.shift()),t.add(l);continue}if(o.size<e.gens.length*2)return;const i=[];for(let f=0;f<e.gens.length;f++){const a=e.gens[f],c=z(e,o.get(a));if(!e.words.has(c)){if(e.cosets.get(c).size<e.gens.length*2)return;i.push([a,c])}}e.remaining.shift();for(let f=0;f<i.length;f++){const[a,c]=i[f],p=a+r;if(e.words.set(c,p),(n=e.currentWords)==null||n.set(c,p),(s=e.dualCurrentWords)==null||s.set(c,p),e.lastCoset=c,e.remaining.push(c),e.vertices){let h=e.vertices.get(d);for(let u=0;u<e.transforms[a].length;u++){const v=e.transforms[a][u];h=N(h,e.rootNormals[v],e.metric)}e.vertices.set(c,h)}}}},$=(e,t)=>{let n=z(e,1);for(let s=t.length-1;s>=0;s--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=z(e,l.get(t[s])),e.cosets.get(n).size<e.gens.length*2))return}return n},Se=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)Ce(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length-e.pointer>0;){const s=e.unvisited[e.pointer++],l=z(e,s);if(!e.seen.has(l)){e.seen.add(l),n=l;break}}if(n===null){e.done=!0;break}for(let s=0;s<e.gens.length;s++)X(e,n,e.gens[s].toUpperCase()),X(e,n,e.gens[s]);for(let s=0;s<e.rels.length;s++)Ce(e,e.rels[s],n)}},tt=e=>(Se(e),e.cosets.size),_e=e=>(Se(e),et(e),e),Oe=(e,t,n)=>{if(n){t%2&&t--;const s=e>0?1-e%2:0;return e>=t/2+s?2*(t-e)-1+s:2*e-s}return e>=t/2?2*(t-e)-1:2*e},nt=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const s=new Set;for(let l=0;l<e.length;l++){const d=e[l];if(d)for(let o=0;o<d.length;o++){const r=d[o];for(let i=0;i<n[r].length;i++){const f=q(n[r][i]);s.has(f)||s.add(f)}if(s.size>=t)return!0}}return!1},oe=(e,t,n,s,l,d,o=null,r=null)=>{if(!o){s.every(u=>!u)&&(s=s.map(()=>1));let f="",a=0;const c={};for(let u=0;u<e;u++){if(!F(s[u])){const v=q(a++);f+=v,c[v]=[u]}for(let v=u+1;v<e;v++)if(F(s[u])&&F(s[v])){const g=q(a++);f+=g,c[g]=[u,v]}else if(F(s[u])&&!F(s[v])){const g=q(a++);f+=g,c[g]=[u,v,u]}else if(!F(s[u])&&F(s[v])){const g=q(a++);f+=g,c[g]=[v,u,v]}}const p=Object.entries(c).filter(([u,v])=>v.every(g=>!s[g])).map(([u])=>u).join(""),h=Ke(c,t);if(d){const u=d.split(",");for(let v=0;v<u.length;v++){let g=u[v];g=g.replace(/\s/g,""),g&&(g=Ye(g),g.split("").every(m=>f.includes(m.toLowerCase()))&&h.push(g))}}else{const u=Je(c,t,n);h.push(...u),d=u.map(v=>ke(v)).join(", ")}if(o={new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:s,gens:f,subgens:p,transforms:c,rels:h,extrarels:d,facet:[""],removed:[],children:[]},r=o,r.solved=new Map,s.length>1&&s.filter(u=>u).length===1){const u=s.findIndex(v=>v);if(t[u].every((v,g)=>u===g||v===2)){const v=u===e-1?e-2:u+1,[g]=Object.entries(o.transforms).find(([m,k])=>k.includes(v));r.hosotope={gen:g,index:v}}}}const i=[];for(let f=0;f<e;f++){if(o.removed.includes(f))continue;let a=o.gens.split("").filter(g=>!o.transforms[g].includes(f)).join("");const c=[...o.removed,f],p=c.sort().join("-");let h=!1;if(!r.solved.has(p)){h=!0;const g={dimensions:o.dimensions-1,coxeter:we(r.coxeter,c),stellation:we(r.stellation,c),mirrors:le(r.mirrors,c),gens:a,subgens:r.subgens.split("").filter(m=>a.includes(m)).join(""),rels:r.rels.filter(m=>m.toLowerCase().split("").every(k=>a.includes(k))),transforms:Object.fromEntries(Object.entries(o.transforms).filter(([m])=>a.includes(m))),removed:c,key:p,limit:l.curvature>0?2500:1e3};_e(g),g.facet=Array.from(g.words.values()),r.solved.set(p,g),g.dimensions===0&&(r.root=g)}const u=r.solved.get(p),v=r.hosotope&&u.removed.length&&u.removed[0]===r.hosotope.index&&u.removed.every((g,m)=>m===0||g===(u.removed[m-1]+1)%e);if(nt(u.facet,u.dimensions,r.transforms)||v){if(h&&u.dimensions===2){const m=[...u.facet],k=u.gens.split("").every(w=>r.mirrors[r.transforms[w][0]]),y=u.gens.split("").every(w=>r.transforms[w].length===2);for(let w=0;w<m.length;w++)u.facet[w]=m[y?w:Oe(w,u.facet.length,k)]}const g={new:h,children:[],...u};g.removed.length<e?o.children.push(oe(e,t,n,s,l,d,g,r)):o.children.push(g)}else i.push(u)}if(o.children.length===0&&o.dimensions>0){console.debug("No leaf found, digging deeper",o.gens);for(let f=0;f<i.length;f++){const a=i[f],c={new:!1,children:[],...a};c.removed.length<e?o.children.push(oe(e,t,n,s,l,d,c,r)):o.children.push(c)}}if(o===r&&s.some(f=>F(f))){let f="",a=[];for(let c=1;c<e;c++)if(c===1){const p=[],h=y=>{y.dimensions===1?y.new&&p.push(y):y.children.forEach(h)};h(o);const u=Object.entries(r.transforms).filter(([y,w])=>w.length!==1||s[w[0]]).filter(([y,w])=>w.length!==3||t[w[0]][w[1]]!==2).map(([y])=>y);for(let y=0;y<p.length;y++){const w=p[y];u.includes(w.gens)&&u.splice(u.indexOf(w.gens),1)}const v=a;a=[];const g=G(1).map((y,w)=>y.map((j,b)=>w===b?1:w===b+1||w===b-1?4:2)),m=G(1).map(y=>y.map(()=>1)),k=ye(1).map(()=>"s");for(let y=0;y<u.length;y++){const w=u[y],j={dimensions:1,coxeter:g,stellation:m,mirrors:k};j.gens=w;const b={new:!0,done:!0,key:`se-${w}`,...j,facet:["",w],children:y===0?v:[]};a.push(b)}}else if(c===2){const p=j=>G(2).map((b,x)=>b.map((M,S)=>x===S?1:x===S+1||x===S-1?j:2)),h=j=>G(2).map(b=>b.map(()=>j)),u={},v=Object.entries(r.transforms).filter(([j,b])=>b.length===2),g=Object.entries(r.transforms).filter(([j,b])=>b.length===3);let m="";const k=j=>{j.dimensions===2?j.new&&j.gens.length===1&&(m+=j.gens):j.children.forEach(k)};k(o),f+=m;for(let j=0;j<v.length;j++){const[b,x]=v[j];for(let M=j+1;M<v.length;M++){const[S,O]=v[M];x[x.length-1]===O[O.length-1]&&(u[b+S]={facet:["",b,S]},f+=b+S)}}for(let j=0;j<g.length;j++){const[b,x]=g[j];for(let M=j+1;M<g.length;M++){const[S,O]=g[M];if(x[0]===O[0]&&t[x[1]][O[1]]!==2&&(t[x[1]][x[0]]!==2||t[x[0]][O[1]]!==2)){const D=t[x[1]][O[1]],te=s[O[1]]||t[x[0]][O[1]]!==2,ne=[];for(let se=0;se<D;se++)te&&ne.push(b+(S+b).repeat(D-se)),ne.push((S+b).repeat(se));u[b+S]={facet:ne,snubCoxeter:p(ne.length),snubMirrors:["s",te?1:0]},f+=b+S}}for(let M=0;M<v.length;M++){const[S,O]=v[M];x[0]===O[1]&&(t[x[1]][O[0]]!==2||t[x[1]][O[1]]!==2||s[x[1]])&&(s[x[1]]||t[x[1]][O[0]]!==2&&t[x[1]][O[1]]!==2?u[b+S]={facet:["",b,b+S,S],snubCoxeter:p(4)}:t[x[1]][O[0]]!==2?u[b+S]={facet:["",S,b+S]}:u[b+S]={facet:["",b,S]},f+=b+S)}}const y=a;a=[],Object.keys(u).length||(u[""]={facet:[""]});const w=Object.entries(u);for(let j=0;j<w.length;j++){const[b,{facet:x,snubCoxeter:M,snubStellation:S,snubMirrors:O}]=w[j],D={dimensions:2,coxeter:M||p(3),stellation:S||h(1),mirrors:O||["s","s"]};D.gens=b;const te={new:x.length!==1,done:!0,key:`sf-${b}`,...D,facet:x,children:j===0?y:[]};a.push(te)}}else{const p=G(c).map((k,y)=>k.map((w,j)=>y===j?1:2)),h=G(c).map(k=>k.map(()=>1)),u=ye(c).map(()=>"s"),v=a;a=[];let g=f;const m={new:!0,done:!0,key:`s${c}`,gens:o.gens.split("").filter(k=>!g.includes(k)).join(""),dimensions:c,coxeter:p,stellation:h,mirrors:u,facet:[],children:v};a.push(m)}o.children.push(...a)}return o===r&&!o.root&&(o.root=o),o},ce=(e,t,{p:n,normal:s})=>{const l=R(H(n,e),s)/R(H(t,e),s);if(l<0||l>1)return;const d=[];for(let o=0;o<e.length;o++)d.push(e[o]+l*(t[o]-e[o]));return d},st=(e,t,n,s)=>{const l=[],d=[];if(e===0)for(let o=0;o<n.length;o++){const r=n[o],{vertices:i,partial:f}=r,a=ce(i[0],i[1],t);if(!a)continue;const c={...r,key:r.key.replace(/edge_/,"vertex_?-"),vertices:[a]};f?d.push(c):l.push(c)}else if(e===1){s.crossEdges||(s.crossEdges=new Map);for(let o=0;o<n.length;o++){const r=n[o],i=[],f=[];for(let c=0;c<r.vertices.length;c++){const p=r.vertices[c],h=r.vertices[(c+1)%r.vertices.length],u=ce(p,h,t);u&&(f.push(Z([p,h])),i.push(u))}if(i.length<2)continue;const a=[];if(i.length>2)for(let c=0;c<i.length;c++)a.push([i[c],i[(c+1)%i.length]]);else a.push(i);if(!r.partial)for(let c=0;c<f.length;c++)s.crossEdges.has(f[c])?s.crossEdges.get(f[c]).add(f[(c+1)%2]):s.crossEdges.set(f[c],new Set([f[(c+1)%2]]));for(let c=0;c<a.length;c++){const p=a[c],h={...r,key:r.key.replace(/face_/,"edge_?-"),vertices:p};r.partial?d.push(h):l.push(h)}}}else if(e===2){s.unfinishedCells||(s.unfinishedCells=new Map);const o=[...n,...Array.from(s.unfinishedCells.values())];for(let r=0;r<o.length;r++){const i=o[r],f=[],a=[];for(let g=0;g<i.vertices.length;g++)for(let m=g+1;m<i.vertices.length;m++){const k=Z([i.vertices[g],i.vertices[m]]);if(s.crossEdges.has(k)){const y=ce(i.vertices[g],i.vertices[m],t);if(!y)continue;a.push([k,s.crossEdges.get(k)]),f.push(y)}}if(f.length<3){!s.unfinishedCells.has(i.word)&&!i.partial&&s.unfinishedCells.set(i.word,i);continue}const c=[0];let p=a[0][1];for(let g=0;g<a.length;g++)for(let m=0;m<a.length;m++)if(!c.includes(m)&&p.has(a[m][0])){c.push(m),p=a[m][1];break}let h=i.partial;c.length<f.length?(h=!0,!s.unfinishedCells.has(i.word)&&!i.partial&&s.unfinishedCells.set(i.word,i)):s.unfinishedCells.delete(i.word);const u=[];for(let g=0;g<c.length;g++)u.push(f[c[g]]);const v={...i,key:i.key.replace(/cell_/,"face_?-"),vertices:u,partial:h};h?d.push(v):l.push(v)}}return{sections:l,sectionPartials:d}},Ve=(e,t,n)=>{const s=t.slice(0,-1),l=t[t.length-1],d=A(s,1/ge(R(s,s))),r={p:A(d,l),normal:d},i=[];for(let f=0;f<3;f++){const a=e[f+1],c={objects:[],partials:[]};if(a){const p=a.objects.concat(a.partials);for(let h=0;h<p.length;h++){const u=p[h]||[],{sections:v,sectionPartials:g}=st(f,r,u,n);c.objects.push(v),c.partials.push(g)}}i.push(c)}return i},fe=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),V=(e,t,n)=>{let s,l,d;if(t===0)s=l=d=n;else{const o=n<.5?n*(1+t):n+t-n*t,r=2*n-o;s=fe(r,o,e+1/3),l=fe(r,o,e),d=fe(r,o,e-1/3)}return[s,l,d]},Y=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],rt={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,metalness:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>V(e.length*.03%1,.75,.7)},lt=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>V((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>V(...Y[e.length%Y.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},shading:!1,face:{opacity:.9},transparency:"oit",color:({word:e,subShape:t,type:n})=>n==="face"?V((t*.23+e.length*.07)%1,1,.58):[0,0,0]},lights:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},envmap:"lights",metalness:1,color:()=>[0,0,0]},synthwave:{background:[...V(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>V((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>V(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,envmap:"home",metalness:1,skybox:"home",color:()=>[0,0,0]},flare:{background:[1,1,1,1],transparency:"blend",diffuse:"cel",face:{opacity:.6,gouraud:!1},color:({word:e})=>V(e.length*.09%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?V(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],transparency:"blend",diffuse:"cel",face:{opacity:.6,gouraud:!1},color:({word:e,type:t,dimensions:n,hidden:s})=>{const l=e.length?me(e[e.length-1])/n:0;return V(l%1,1,t==="face"?.6:s.includes("face")?.8:0)}},harlequin:{background:[...V(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const s=e.split("").map(d=>me(d)).reduce((d,o)=>d+o,0),l=[...Y[s%Y.length]];return t%2&&(l[2]*=.5),V(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>V(e.length*.03%1,.75,.7)},fabric:{background:[1,1,1,1],texture:"fabric",ambient:.4,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.8:.05)},rock:{background:[1,1,1,1],glow:!1,texture:"bricks",ambient:.4,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.8:.05)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>V((e||0)/(t||1),.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},glass:{background:[0,0,0,1],transparency:"blend",opacity:.2,ambient:0,diffuse:"fresnel",specular:"blinn-phong",face:{shininess:16,diffuse:!1},color:({subShape:e,word:t,type:n})=>n!=="vertex"?V((e*.21+t.length*.03)%1,1,.8):[1,1,1]},plain:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t,hidden:n})=>V(e.length*.06%1,1,t==="face"?.6:n.includes("face")?.5:.05)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Ie(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...rt,...t,transparent:{}}])),Me=e=>e>4?9:e<1?1:e,We=(e,t)=>{const n=[];let s=0;for(let l=0;l<2;l++){const d=l===1?e.partials:e.objects;for(let o=0;o<d.length;o++){const r=d[o];for(let i=0;i<r.length;i++){const f=r[i];t.includes(f.key)||t.includes(f.key.split("_")[0])||(l===0&&s++,f.subShape=o,n.push(f))}}}return{allObjects:n,nonpartial:s}},ue=(e,t,n,s)=>{const l=[],d=[],o=Me(e);for(let r=0;r<t.length;r++){const i=t[r],{allObjects:f,nonpartial:a}=We(i,n),c=[];for(let p=0;p<r+1;p++)c.push(new Float32Array(f.length*o));for(let p=0;p<f.length;p++){const h=f[p],u=[...h.vertices];h.reverse&&([u[0],u[1]]=[u[1],u[0]]);for(let v=0;v<u.length;v++){const g=u[v];for(let m=0;m<g.length;m++)c[v][p*o+m]=g[m]}}l.push(c),d.push({start:s?s[r]:0,size:f.length,nonpartial:a,arity:o})}return{infos:d,data:l}},ee=(e,t,n,s,l)=>{const d=[],o=[],r=Me(e);for(let i=0;i<t.length;i++){const f=t[i],{allObjects:a}=We(f,s),c=new Float32Array(a.length*3),p=i===2?new Float32Array(a.length*2):null;for(let h=0;h<a.length;h++){const u=a[h],v=lt[n].color({word:u.word,key:u.key,subShape:u.subShape,faceIndex:u.faceIndex,faceSize:u.faceSize,dimensions:e,hidden:s,idx:h,size:a.length,type:L[i],dual:!!u.dual});if(c[h*3+0]=v[0],c[h*3+1]=v[1],c[h*3+2]=v[2],p)if(u.faceSize===3)p[h*2+0]=0,p[h*2+1]=1/6;else{const g=u.reverse?[1,0]:[0,1];p[h*2+0]=(u.faceIndex+g[0])/u.faceSize,p[h*2+1]=(u.faceIndex+g[1])/u.faceSize}}d.push(c),p&&d.push(p),o.push({start:l?l[i]:0,size:a.length,arity:r,nextIsTri:!!p})}return{infos:o,data:d}},it=(e,t,n)=>{const s=[],l=[];if(!t.currentWords)return{objects:s,partials:l};if(e===0)for(const[d,o]of t.currentWords)s.push({key:t.key,word:o,vertices:[t.vertices.get(d)]}),t.currentWords.delete(d);else if(e===1)for(const[d,o]of t.currentWords){const r={key:t.key,word:o,vertices:[]};for(let i=0;i<t.facet.length;i++){const f=$(n,o+t.facet[i]);f&&n.vertices.has(f)&&r.vertices.push(n.vertices.get(f))}if(n.hosotope&&n.vertices.size===1&&r.vertices.push(N(r.vertices[0],n.rootNormals[n.hosotope.index-1],n.metric)),!(r.vertices.length<e+1)){if(n.hosotope){let i;if(n.hosotopeVertex?i=o.split("").reverse().reduce((f,a)=>N(f,n.rootNormals[n.gens.indexOf(a)],n.metric),n.hosotopeVertex):(n.hosotopeVertex=Q(re(n.rootVertices)[n.hosotope.index],n.metric),i=n.hosotopeVertex),s.push({...r,vertices:[r.vertices[0],i]}),s.push({...r,vertices:[i,r.vertices[1]]}),n.vertices.size===1){const f=i.map(a=>-a);s.push({...r,vertices:[r.vertices[0],f]}),s.push({...r,vertices:[f,r.vertices[1]]})}}else s.push(r);t.currentWords.delete(d)}}else if(e===2){n.hosotopePair=null;for(const[d,o]of t.currentWords){const r=[];for(let a=0;a<t.facet.length;a++){const c=$(n,o+t.facet[a]);c&&n.vertices.has(c)&&r.push(n.vertices.get(c))}if(n.hosotope){n.vertices.size===1&&r.push(r[0].map(c=>-c));let a;if(n.hosotopePair)a=n.hosotopePair.map(c=>o.split("").reverse().reduce((p,h)=>N(p,n.rootNormals[n.gens.indexOf(h)],n.metric),c));else{const c=Q(re(n.rootVertices)[n.hosotope.index],n.metric);n.hosotopePair=[c,N(c,n.rootNormals[n.hosotope.index],n.metric)],a=n.hosotopePair}r.splice(1,0,a[0]),r.push(a[1]),n.vertices.size===1&&(r[3]=r[1].map(c=>-c))}if(r.length<e+1)continue;const i=r.length<t.facet.length||t.partial;i||t.currentWords.delete(d);const f={key:t.key,word:o,vertices:r,faceIndex:0,faceSize:r.length,partial:i};i?l.push(f):s.push(f)}}else if(e===3)for(const[d,o]of t.currentWords){const r=[];for(let a=0;a<t.facet.length;a++){const c=$(n,o+t.facet[a]);c&&n.vertices.has(c)&&r.push(n.vertices.get(c))}if(r.length<e+1)continue;const i=r.length<t.facet.length||t.partial;i||t.currentWords.delete(d);const f={key:t.key,word:o,vertices:r,faceIndex:0,faceSize:r.length,partial:i};i?l.push(f):s.push(f)}return{objects:s,partials:l}},ae=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],ae(e.slice(1),t);const n=t[t.length-1],s=e.find(d=>d[0]===n||d[1]===n);if(!s)return t;const l=e.indexOf(s);return e.splice(l,1),s[0]===n?t.push(s[1]):t.push(s[0]),ae(e,t)},ot=(e,t,n,s)=>{const l=[],d=t.children.find(i=>i.key===n.split("_").slice(-1)[0]),o=[],r=i=>{i.dimensions===e&&o.push(i.facet),i.children.forEach(r)};r(d),t.children.filter(i=>i.key.includes("s")).forEach(r);for(let i=0;i<o.length;i++){const f=o[i];if(f.length<2)continue;const a=[];for(let p=0;p<f.length;p++){const h=$(s,f[p]);h&&s.vertices.has(h)&&a.push(s.vertices.get(h))}let c=new Array(a[0].length).fill(0);for(let p=0;p<a.length;p++){const h=a[p];c=K(c,h)}c=A(c,1/a.length),l.push(R(c,c))}return Fe(...l)},ct=(e,t,n,s,l,d)=>{var f,a,c;const{space:o}=d,r=[],i=[];if(!t.dualCurrentWords)return{objects:r,partials:i};if(e===0){d.dualVertices=d.dualVertices||new Map;for(const[p,h]of t.dualCurrentWords){const u=[];for(let y=0;y<t.facet.length;y++){const w=$(d,h+t.facet[y]);w&&d.vertices.has(w)&&u.push(w)}if(u.length<2)continue;const v=u.length<t.facet.length;let g=new Array(n.dimensions).fill(0);for(let y=0;y<u.length;y++){const w=d.vertices.get(u[y]);g=K(g,w)}if(g=Q(g,o.metric),o.curvature){let y=0;if(s>=0){let w=1;s>0&&s<n.dimensions-1&&(t.midradius||(t.midradius=ot(s,n,l,d)),w=t.midradius);const j=J(o.metric,g);for(let b=0;b<u.length;b++){const x=d.vertices.get(u[b]);y+=R(j,x)}y/=w*u.length,s===n.dimensions-1&&(y=1/y)}else y=1;g=A(g,o.curvature/y)}const m={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:h,vertices:[g],dual:!0,partial:v},k=`${l}#${h}`;d.dualVertices.set(k,{vertex:g,facet:u,partial:v}),v?i.push(m):(r.push(m),t.dualCurrentWords.delete(p))}}else if(e===1){if(!((f=d.dualVertices)!=null&&f.size))return{objects:r,partials:i};d.dualEdges=d.dualEdges||new Map;for(const[p,h]of t.dualCurrentWords){const u=[];for(let y=0;y<t.facet.length;y++){const w=$(d,h+t.facet[y]);w&&d.vertices.has(w)&&u.push(w)}if(!u.length)continue;let v=u.length<t.facet.length;const g=[],m=[];for(const[y,{vertex:w,facet:j,partial:b}]of d.dualVertices.entries())if(u.every(x=>j.includes(x))&&(g.push(w),m.push(y)),v=v||b,g.length===2)break;if(g.length!==2)continue;const k={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:h,vertices:g,dual:!0,partial:v};d.dualEdges.set(`${l}#${h}`,{edge:m,partial:v}),v?i.push(k):(r.push(k),t.dualCurrentWords.delete(p))}}else if(e===2){if(!((a=d.dualVertices)!=null&&a.size)||!((c=d.dualEdges)!=null&&c.size))return{objects:r,partials:i};for(const[p,h]of t.dualCurrentWords){const u=[];for(let b=0;b<t.facet.length;b++){const x=$(d,h+t.facet[b]);x&&d.vertices.has(x)&&u.push(x)}if(u.length<t.facet.length)continue;let v=!1;const g={},m=[];for(const[b,{vertex:x,facet:M,partial:S}]of d.dualVertices.entries())(u.every(O=>M.includes(O))||n.dimensions===2)&&(g[b]=x,m.push(b),v=v||S);if(m.length<3)continue;const k=[];for(const{edge:b,partial:x}of d.dualEdges.values())m.includes(b[0])&&m.includes(b[1])&&(v=v||x,k.push([...b]));if(k.length<3)continue;const y=[],w=ae(k);if(w.length<4)continue;w[0]===w[w.length-1]&&w.pop();for(let b=0;b<w.length;b++){const x=w[b];y.push(g[x])}const j={key:t.compound?t.key.replace(/_/,"dual_"):t.key,word:h,vertices:y,dual:!0,faceSize:y.length,partial:v};v?i.push(j):(r.push(j),t.dualCurrentWords.delete(p))}}return{objects:r,partials:i}},ft=(e,t)=>{const n=[],s=[],l=[];for(const[d,o]of t.currentWords){let r;if(o===""){const i=re(t.space.rootVertices);t.fundamentalVertices=new Map,r=i.map(f=>Q(f,t.space.metric)),t.hashes={vertex:new Set,edge:new Set,face:new Set},t.fundamentalVertices.set("",r)}else{r=[...t.fundamentalVertices.get(o.slice(1))];const i=t.gens.indexOf(o[0]);for(let f=0;f<r.length;f++)r[f]=N(r[f],t.space.rootNormals[i],t.space.metric)}for(let i=0;i<r.length;i++){if(e.dimensions<3){const a=new Array(e.dimensions).fill(0);if(n.push({key:"vertex",word:o,vertices:a}),e.dimensions===2){for(let c=0;c<r.length;c++)s.push({key:"edge",word:o,vertices:[a,A(r[c],1e3)]});l.push({key:"face",word:o,vertices:[a,A(r[i],1e3),A(r[(i+1)%r.length],1e3)]})}}else{const f=ve(r[i]);t.hashes.vertex.has(f)||(n.push({key:"vertex",word:o,vertices:[r[i]]}),t.hashes.vertex.add(f));for(let a=i+1;a<r.length;a++){const c=Z([r[i],r[a]]);t.hashes.edge.has(c)||(s.push({key:"edge",word:o,vertices:[r[i],r[a]]}),t.hashes.edge.add(c));for(let p=a+1;p<r.length;p++){const h=Z([r[i],r[a],r[p]]);if(!t.hashes.face.has(h)){const u=[r[i],r[a],r[p]];o.length%2===1&&u.reverse(),l.push({key:"face",word:o,faceSize:3,vertices:u}),t.hashes.face.add(h)}}}}t.fundamentalVertices.set(o,r)}t.currentWords.delete(d)}return[n,s,l]},ze=(e,t)=>{const n=be(H(e[0],e[2]),H(e[1],e[2]));return R(n,e[2])*(t.curvature||-1)>0},Ae=(e,t)=>{const n={objects:[],partials:[]};for(let s=0;s<2;s++){const l=s===1,d=l?e.partials:e.objects;for(let o=0;o<d.length;o++){const r=d[o],i=[];for(let f=0;f<r.length;f++){const a=r[f],c=a.vertices[0].length;if(a.vertices.length===3&&!a.vertices.reduce((u,v)=>K(u,v),new Array(c).fill(0)).every(u=>U(u)<1e-12)){i.push({...a,vertices:a.vertices,reverse:ze(a.vertices,t.space)});continue}let p=new Array(c).fill(0);for(let u=0;u<a.vertices.length;u++){const v=a.vertices[u];p=K(p,v)}p=A(p,1/a.vertices.length);const h=[];if(t.hosotope&&p.every(u=>U(u)<1e-12)){const u=be(a.vertices[0],a.vertices[1]),v=new Array(c).fill(0);u.map((g,m)=>v[m]=g),h.push(v),h.push(v.map(g=>-g));for(let g=3;g<c;g++){const m=[...v];m[2]=0,m[g]=v[2],h.push(m),h.push(m.map(k=>-k))}}else h.push(p);for(let u=0;u<a.vertices.length;u++)for(let v=0;v<h.length;v++){const g=[a.vertices[u],a.vertices[(u+1)%a.vertices.length],h[v]],m={...a,vertices:g,reverse:ze(g,t.space),faceIndex:u};i.push(m)}}l?n.partials.push(i):n.objects.push(i)}}return n},ut=(e,t,n,s,l,d)=>{const o=[];if(d.fundamental){const r=ft(e,d);for(let i=0;i<r.length;i++){const f={objects:[],partials:[]};f.objects.push(r[i]),o.push(f)}}else for(let r=0;r<(l?4:3);r++){const i={objects:[],partials:[]};if(r>=n.facets.length){o.push(i);continue}const f=n.facets[r];for(let a=0;a<f.parts.length;a++){const c=f.parts[a];let p=c.key;d.compound&&c.dual&&(e.dimensions>2?p=`${L[e.dimensions-r-1]}_${c.key.split("_").slice(-1)[0]}`:p="vertex_0-1");const h=t.get(p),{objects:u,partials:v}=c.dual?ct(r,h,e,s,c.key,d):it(r,h,d);i.objects.push(u),i.partials.push(v)}o.push(i)}return o},at=(e,t,n,s,l)=>{if(s||n.length===0)return t.includes(e);const d=[],o=[];for(const r of n){const i=$(l,r);if(!i)return null;const f=$(l,e+r);if(!f)return null;d.push(i),o.push(f)}return d.sort((r,i)=>r-i),o.sort((r,i)=>r-i),d.every((r,i)=>r===o[i])},gt=(e,t)=>{const{gens:n,localgens:s,facet:l,partial:d,rank:o}=e;let r="";for(let i=0;i<n.length;i++){const f=at(n[i],s,l,d,t);if(f===null)return;f&&(r+=n[i])}if(t.hosotope){if(o===1)r=r.replace(t.hosotope.gen,"");else if(o===2){let i=t.coxeter[t.hosotope.index].findIndex((a,c)=>c!==t.hosotope.index&&a!==2);i<0&&(i=t.hosotope.index<t.dimensions-1?t.hosotope.index+1:0);const f=Object.entries(t.transforms).find(([a,c])=>c.includes(i))[0];r=r.replace(f,t.hosotope.gen)}}return r},Ee=(e,t,n,s,l)=>{const d=l.space.eigens.values.some(i=>i<=0),o={facets:[],infinite:d,done:!0};l.compound&&l.dual&&(l.dual=!1,Object.assign(o,Ee(e,t,n,s,l)),l.dual=!0);const r=i=>{const f=l.dual||l.fundamental?t.dimensions-i.dimensions-1:i.dimensions;i.children.forEach(r);const a=`${L[f]}_${l.dual?"dual_":l.fundamental?"fundamental_":""}${i.key}`,c=f===t.dimensions-1&&(l.dual||l.compound)||l.fundamental||!l.fundamental&&f<(s?4:3);if(i!=null&&i.new){if(o.facets[f]||(o.facets[f]={dimensions:f,processing:0,count:0,parts:[],compute:c,done:!1,dual:l.dual,fundamental:l.fundamental}),!l.compound||!l.dual){n.has(a)||n.set(a,{});const h=n.get(a);h.key||Object.assign(h,{gens:t.gens,rels:t.rels,transforms:t.transforms,key:a,localgens:i.gens,facet:i.facet,partial:!i.done,rank:f,mirrors:i.mirrors,compute:c,done:!1,count:0,dual:l.dual,compound:l.compound,space:l.space,...i.dimensions===0&&!l.fundamental?{rootVertex:l.space.rootVertex,rootNormals:l.space.rootNormals,rootVertices:l.space.rootVertices,metric:l.space.metric}:{}})}const p=l.fundamental?i.mirrors.map(()=>0):i.mirrors;o.facets[f].parts.push({key:a,coxeter:i.coxeter,stellation:i.stellation,mirrors:p,dual:l.dual,fundamental:l.fundamental,count:0,done:!1})}};return t.children.forEach(r),ht(o,t,n,l,s),o},dt=(e,t,n,s)=>{const l=s.dual&&!s.compound||s.fundamental?[...e.facets].reverse():e.facets;s.dual&&!s.compound&&s.metric.length===2&&l.push(l.shift());const d=l.filter(o=>o.compute).every(o=>o.done);e.done=!0;for(let o=0;o<l.length;o++){const r=l[o];r.done=!0,r.count=0,r.processing=0;for(let i=0;i<r.parts.length;i++){const f=r.parts[i],a=f.key,c=t.get(a);s.compound&&!c||(typeof c.facet=="function"&&(c.facet=c.facet(s)),c.subgens===void 0&&(c.subgens=gt(c,s)),!c.done&&(d||c.compute)&&c.subgens!==void 0&&(c.limit=c.compute?n:2e3,o===1&&e.infinite&&(c.limit*=1.75),c.compute?(_e(c),f.count=c.cosets.size,f.processing=c.words.size):f.count=tt(c),f.done=c.done),r.done=r.done&&f.done,r.count+=f.count,r.processing+=f.processing)}e.done=e.done&&r.done}if(s.compound)for(let o=0;o<l.length;o++){const r=l[o];for(let i=0;i<r.parts.length;i++){const f=r.parts[i],a=f.key;if(t.get(a))continue;const c=a.replace(/dual_/g,""),p=t.get(c);p&&(p.compute?(f.count=p.cosets.size,f.processing=p.words.size):f.count=p.count,f.done=p.done,r.count+=f.count,r.processing+=f.processing)}}},ht=(e,t,n,s,l)=>{const d=o=>({dimensions:o.rank,processing:1,count:0,parts:[{key:o.key,coxeter:o.coxeter,stellation:o.stellation,mirrors:o.mirrors,dual:s.dual,fundamental:s.fundamental,count:0,done:!0}],done:!0});if(t.dimensions===0){const o={...t,key:"vertex",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:[""],rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0,vertices:new Map([[1,[0]]])};Object.assign(s,o),n.set(o.key,o),e.facets[0]=d(o)}else if(t.dimensions===1){const o={...t,key:"edge",currentWords:t.currentWords||new Map([[1,""]]),subgens:t.subgens,facet:r=>r.words?Array.from(r.words.values()):[""],rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(o.key,o),e.facets[1]=d(o)}else if(t.dimensions===2){const o=i=>{if(i.fundamental)return[];const f=t.gens.split("").every(h=>t.mirrors[t.transforms[h][0]]),a=t.gens.split("").every(h=>t.transforms[h].length===2),c=Array.from(i.words.values()),p=new Array(c.length);for(let h=0;h<c.length;h++)p[h]=c[a?h:Oe(h,p.length,f)];return p},r={...t,key:"face",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:o,rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(r.key,r),e.facets[2]=d(r)}else if(t.dimensions===3&&l!==null){const o={...t,key:"cell",currentWords:t.currentWords||new Map([[1,""]]),dualCurrentWords:t.dualCurrentWords||new Map([[1,""]]),subgens:t.subgens,facet:r=>Array.from(r.words.values()),rank:t.dimensions,mirrors:t.mirrors,compute:!0,done:!0};n.set(o.key,o),e.facets[3]=d(o)}};let B,C,_,W,E,P;onmessage=({data:{type:e,space:t,dimensions:n,coxeter:s,stellation:l,mirrors:d,ambiance:o,batch:r,hidden:i,reciprocation:f,extrarels:a,section:c,iteration:p}})=>{try{if(p<0&&(_=oe(n,s,l,d,t,a),C={space:t,fundamental:d.length&&d.every(g=>!g),dual:d.some(g=>Ne(g)),compound:d.some(g=>Te(g)),lasts:new Array(3).fill(0),subgens:_.subgens,hosotope:_.hosotope,coxeter:_.coxeter},B=new Map([[`${L[C.dual&&!C.compound||C.fundamental?n-1:0]}_${C.dual&&!C.compound?"dual_":C.fundamental?"fundamental_":""}${_.root.key}`,C]]),W=Ee(r,_,B,c,C),E=[],P=[],Object.assign(self,{shape:_,polytope:W,fullObjects:E,fullRawObjects:P,tcParams:B,root:C})),e==="paint"){const g=ee(_.dimensions,E,o,i);postMessage({color:g},g.data.filter(m=>m).map(m=>m.buffer));return}if(e==="section"){if(!P.length)return;let g=P;c!==null&&(g=Ve(g,c,C)),C.fundamental||(g[2]=Ae(g[2],C)),E=g;const m=ue(_.dimensions,g,i),k=ee(_.dimensions,g,o,i);C.lasts=m.infos.map(y=>y.start+y.nonpartial),postMessage({geometry:m,color:k},m.data.flat(1).concat(k.data).filter(y=>y).map(y=>y.buffer));return}if(e==="display"){const g=ue(_.dimensions,E,i),m=ee(_.dimensions,E,o,i);C.lasts=g.infos.map(k=>k.start+k.nonpartial),postMessage({geometry:g,color:m},g.data.flat(1).concat(m.data).filter(k=>k).map(k=>k.buffer));return}e==="iterate"&&dt(W,B,r,C);let h=ut(_,B,W,f,c,C);if(c!==null){for(let g=0;g<h.length;g++){const m=h[g];P[g]||(P[g]={objects:[],partials:[]}),P[g].objects.push(...m.objects),P[g].partials=m.partials}h=Ve(h,c,C)}C.fundamental||(h[2]=Ae(h[2],C));for(let g=0;g<h.length;g++){const m=h[g];E[g]||(E[g]={objects:[],partials:[]}),E[g].objects.push(...m.objects),E[g].partials=m.partials}const u=ue(_.dimensions,h,i,C.lasts),v=ee(_.dimensions,h,o,i,C.lasts);C.lasts=u.infos.map(g=>g.start+g.nonpartial),W.gens=_.gens,W.subgens=_.subgens,W.rels=_.rels,W.transforms=_.transforms,W.extrarels=_.extrarels,W.fundamental=C.fundamental,W.dual=C.dual,W.compound=C.compound,W.size=C.fundamental?C.words.size:C.vertices.size,postMessage({polytope:W,geometry:u,color:v},u.data.flat(1).concat(v.data).filter(g=>g).map(g=>g.buffer))}catch(h){postMessage({error:h.message})}}})();
