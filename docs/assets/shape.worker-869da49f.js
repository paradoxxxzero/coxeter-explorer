(function(){"use strict";const R=["vertex","edge","face"],T=(e,t=null,n=1,o=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(o)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,d)=>e+d*n)},Q=(e,t)=>e.length!==t.length?!1:e.every((n,o)=>Array.isArray(n)?Q(n,t[o]):n===t[o]),G=e=>e!==""&&e!=="x",We=e=>e==="m"||e==="b",N=e=>e==="s"||e==="b",ge=(e,t)=>{let n=0;for(let o=0;o<e.length;o++)n+=e[o]*t[o];return n},Me=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]-t[o];return n},ne=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]*t;return n},Oe=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let o=0;o<e.length;o++)t[n].push(e[o][n])}return t},oe=(e,t)=>{const n=new Array(e.length);for(let o=0;o<e.length;o++){let l=0;for(let d=0;d<e[0].length;d++)l+=e[o][d]*t[d];n[o]=l}return n},qe=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},B=e=>{const t=new Array(e).fill(1);return qe(t)},se=(e,t)=>e.filter((n,o)=>!t.includes(o)),de=(e,t)=>se(e,t).map(n=>se(n,t)),he=(e,t,n)=>Me(e,ne(oe(me(n),t),2*ge(oe(Ee(n),e),t))),ae=(e,t,n=-1)=>t.some((o,l)=>o.some((d,f)=>l===f&&d===0))?ne(e,1/e[e.length-1]):ne(e,n/Ie(ye(ge(oe(t,e),e)))),Ee=e=>e.map((t,n)=>t.map((o,l)=>n===l&&o===0?1:o)),me=e=>e.map(t=>t.map(n=>ye(n))),J=(e,t,n,o)=>{const l=Y/e,d=Y/t,f=Y/n;return pe(Y/_e(-D(l)*D(f)+X(l)*X(f)*((D(d)-D(o*l)*D(f))/(X(o*l)*X(f)))))},{abs:ye,cos:D,sin:X,tan:Je,cosh:Xe,sinh:Ye,acos:_e,acosh:Ze,atan:$e,atan2:et,min:tt,max:nt,round:pe,sqrt:Ie,cbrt:ot,sign:st,ceil:it,floor:rt,log:lt,exp:ct,hypot:ft,pow:Ne,PI:Y}=Math,we=new ArrayBuffer(8),Pe=new Float64Array(we),ve=new Int32Array(we);function Ue(e){return~~e===e?~~e:(Pe[0]=e,ve[0]^ve[1])}const be=10**4,ie=e=>{let t="";for(let n=0;n<e.length;n++)t+=Ue(pe(e[n]*be)/be).toString(),n<e.length-1&&(t+="|");return t},O=e=>String.fromCharCode(97+e),je=e=>e.charCodeAt(0)-97,re=(e,t="",n=[])=>{const o=[];for(let l=0;l<e.length;l++){const[d,f]=e[l],a=e.filter((g,y)=>y!==l);if(n.length){const g=n[n.length-1];if(f.some(y=>y===g)){const y=f[1]===g,u=y?d.toUpperCase():d,c=y?[...f].reverse():f;if(c[1]===n[0])return[t+u];a.length&&o.push(...re(a,t+u,n.concat(c.slice(1))))}}else o.push(...re(a,d,f))}return o},H=(e,t,n,o,l,d=[])=>{let f="";const a=o.map((s,i)=>d.includes(i)||s?"":O(i)).join(""),g={},y=[];for(let s=0;s<e;s++)if(!d.includes(s)){if(!N(o[s])){const i=O(s);f+=i,g[i]=[s],y.push(i.repeat(2))}for(let i=s+1;i<e;i++){if(d.includes(i))continue;const r=t[s][i];if(N(o[s])&&N(o[i])){const w=O((s+1)*e+i);f+=w,g[w]=[s,i],y.push(w.repeat(r))}else if(N(o[s])&&!N(o[i])){const w=O((s+1)*e+i);f+=w,g[w]=[s,i,s],y.push(w.repeat(2)),y.push((w+O(i)).repeat(r%2===0?r/2:r))}else if(!N(o[s])&&N(o[i])){const w=O((s+1)*e+i);f+=w,g[w]=[i,s,i],y.push(w.repeat(2)),y.push((w+O(s)).repeat(r%2===0?r/2:r))}else r>1&&y.push((O(s)+O(i)).repeat(r))}}const u=Object.entries(g).filter(([s,i])=>i.length===3),c=Object.entries(g).filter(([s,i])=>i.length===2);if(c.length>1){const s=re(c);y.push(...s.map(i=>i.split("").reverse().join("")))}if(u.length>1)for(let s=0;s<u.length;s++){const[i,r]=u[s];for(let w=s+1;w<u.length;w++){const[b,p]=u[w];if(r[1]===p[1]){const k=c.find(([z,M])=>M[0]===r[0]&&M[1]===p[0]);if(k){const z=k[0];y.push(i.toUpperCase()+z.toUpperCase()+b+z)}}else if(r[0]===p[0]){const k=t[r[1]][p[1]];k>1&&y.push((i+b).repeat(k))}}}if(!o.some(s=>N(s))&&!n.every(s=>s.every(i=>i===1))&&l.curvature>0){if(e===4&&n[0][1]>1!=n[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(s=>d.includes(s))||(n[0][1]>1&&y.push("abcdcb".repeat(J(t[0][1],t[1][2],t[0][2],n[0][1]))),n[2][3]>1&&y.push("abcdcb".repeat(J(t[2][3],t[1][2],t[1][3],n[2][3]))));else for(let s=1;s<e;s++)for(let i=0;i<s;i++)if(n[i][s]>1){if(i+2<e){const r=J(t[i+1][s+1],t[i][s],t[i][s+1],n[i][s]);r&&!d.includes(i)&&!d.includes(s)&&!d.includes(i+2)&&y.push((O(i)+O(s)+O(i+2)+O(s)).repeat(r))}if(i-1>=0){const r=J(t[i-1][s-1],t[i][s],t[i-1][s],n[i][s]);r&&!d.includes(i)&&!d.includes(s)&&!d.includes(i-1)&&y.push((O(i)+O(s)+O(i)+O(i-1)).repeat(r))}}}return{gens:f,subgens:a,rels:y,transforms:g}},le=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),q=(e,t,n)=>{let o,l,d;if(t===0)o=l=d=n;else{const f=n<.5?n*(1+t):n+t-n*t,a=2*n-f;o=le(a,f,e+1/3),l=le(a,f,e),d=le(a,f,e-1/3)}return[o,l,d]},Z=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Fe={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>q(e.length*.03%1,.75,.7)},Te=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e})=>q(e.length*.17%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>q(...Z[e.length%Z.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,opacity:.9},transparency:"oit",color:({word:e,type:t})=>t==="face"?q(e.length*.3%1,1,.6):[0,0,0]},synthwave:{background:[...q(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>q((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>q(e.length*.03%1,1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>q(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:n,size:o})=>t==="face"?q((e-2)*.21%1,1,.8):q(n/o,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?q(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:o})=>{const l=e.length?je(e[e.length-1])/n:0;return q(l%1,1,t==="face"?.6:o.face?0:.8)}},harlequin:{background:[...q(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const o=e.split("").map(d=>je(d)).reduce((d,f)=>d+f,0),l=[...Z[o%Z.length]];return t%2&&(l[2]*=.5),q(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>q(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>q(e/t,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>q(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Ne(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Fe,...t,transparent:{}}])),Be=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},_=(e,t)=>{let n=t,o=0;for(;e.quotientMap[n];)o++,n=e.quotientMap[n];return o>1&&(e.quotientMap[t]=n),n},xe=(e,t,n)=>{const o=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=_(e,t),n=_(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const d=e.cosets.get(t),f=e.cosets.get(n);e.cosets.delete(n);for(const[a,g]of f)d.has(a)?l.push([d.get(a),g]):d.set(a,g)}return _(e,o)},ke=(e,t,n,o)=>{t=_(e,t);const l=e.cosets.get(t);l.has(n)?xe(e,l.get(n),o):l.set(n,o)},$=(e,t,n,o)=>{t=_(e,t);let l;const d=e.cosets.get(t);return d.has(n)?(l=_(e,d.get(n)),o!==void 0&&l!==o&&xe(e,o,l)):(o?l=o:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),ke(e,t,n,l),ke(e,l,Be(n),t)),l},ze=function(e,t,n){let o=n;for(let l=t.length-1;l>0;l--)o=$(e,o,t[l]);$(e,o,t[0],n)},Re=function(e){if(!e.words){const t=_(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=_(e,t),o=e.cosets.get(n),l=e.words.get(n);if(o.size<e.gens.length*2)return;const d=[];for(let f=0;f<e.gens.length;f++){const a=e.gens[f],g=_(e,o.get(a));if(!e.words.has(g)){if(e.cosets.get(g).size<e.gens.length*2)return;d.push([a,g])}}e.remaining.shift();for(let f=0;f<d.length;f++){const[a,g]=d[f],y=a+l;if(e.words.set(g,y),e.currentWords.set(g,y),e.lastCoset=g,e.remaining.push(g),e.vertices){let u=e.vertices.get(n);for(let c=0;c<e.transforms[a].length;c++){const s=e.transforms[a][c];u=he(u,e.rootNormals[s],e.metric)}e.vertices.set(g,u)}}}},L=(e,t)=>{let n=_(e,1);for(let o=t.length-1;o>=0;o--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=_(e,l.get(t[o])),e.cosets.get(n).size<e.gens.length*2))return}return n},Se=e=>{if(!e.cosets){e.unvisited=[1],e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)ze(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length>0;){const o=_(e,e.unvisited.shift());if(!e.seen.has(o)){e.seen.add(o),n=o;break}}if(n===null){e.done=!0;break}for(let o=0;o<e.gens.length;o++)$(e,n,e.gens[o].toUpperCase()),$(e,n,e.gens[o]);for(let o=0;o<e.rels.length;o++)ze(e,e.rels[o],n)}},De=e=>(Se(e),e.cosets.size),Ve=e=>(Se(e),Re(e),e),He=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const o=new Set;for(let l=0;l<e.length;l++){const d=e[l];if(d)for(let f=0;f<d.length;f++){const a=d[f];for(let g=0;g<n[a].length;g++){const y=O(n[a][g]);o.has(y)||o.add(y)}if(o.size>=t)return!0}}return!1},ce=(e,t,n,o,l)=>{const d=T(n.length).filter(u=>!l.includes(u));let f="";const a=Object.entries(o),g=a.filter(([u,c])=>c.length===1),y=a.filter(([u,c])=>c.length===3);for(let u=0;u<a.length;u++){const[c,s]=a[u];if(s.length===1){const i=s[0];if(!l.includes(i)&&!y.some(([r,w])=>w[1]===i)){f+=c;continue}if(!G(e[i]))continue;!e[i]&&!d.some(r=>n[r][i]!==2)&&(f+=c)}else if(s.length===2){const i=s[0],r=s[1],w=n[i][r];if(t.gens.includes(c)&&(t.dimensions===1?w===2:w>2)){f+=c;continue}if(!G(e[i])||!G(e[r]))continue}else if(s.length===3&&l.length&&typeof l[l.length-1]=="string"&&l[l.length-1].includes("s")){const i=s[0],r=s[1],w=n[i][r],b=l[l.length-1].split("s").filter(p=>p);for(let p=0;p<b.length;p++){const k=b[p],z=o[Object.keys(o)[k]];if(z.length===3&&s[1]===z[1]){const M=n[z[0]][z[1]];if((t.dimensions===1?![2,4].includes(w)||[2,4].includes(M):w!==2)&&(f+=c),g.find(([v,V])=>z.every(h=>h!==V[0]))){const v=g.find(([V,h])=>h[0]===z[1]);v&&(f+=v[0])}}}}}return f},fe=(e,t,n,o,l,d=null,f=null,a=null,g=new Map)=>{const y=!f;o.every(u=>!u)&&(o=o.map(()=>1)),d=d||o.map((u,c)=>G(u)?null:c).filter(u=>u!==null),f=f||{new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:o,skips:d,...H(e,t,n,o,l,d),quotient:"",facet:[""],children:[]},a=a||f.transforms;for(let u=0;u<e;u++){if(d.includes(u)||d.includes("s"))continue;const c=[...d,u],s=c.sort().join("-");let i=!1;if(!g.has(s)){i=!0;const b={key:s,dimensions:e-c.length,coxeter:de(t,c),stellation:de(n,c),mirrors:se(o,c),skips:c,...H(e,t,n,o,l,c)};if(b.gens===null)continue;Ve(b),g.set(s,b)}const r=g.get(s),w=Array.from(r.words.values());if(He(w,r.dimensions,r.transforms)){let b=ce(o,r,t,a,c),p={new:i,...r,quotient:b,facet:w,children:[]};r.dimensions>0&&(p=fe(e,t,n,o,l,c,p,a,g)),f.children.push(p)}}if(f.children.length===0&&e-d.length>1){console.info("No leaf found, digging deeper",d);for(let u=0;u<e;u++){if(d.includes(u))continue;const c=[...d,u],s=c.sort().join("-");let r={new:!1,...g.get(s),quotient:"",facet:[""],children:[]};r=fe(e,t,n,o,l,c,r,a,g),f.children.push(r)}}if(y&&o.some(u=>N(u))){let u=[];for(let c=1;c<e;c++){const s=[...d,...T(e-c).map(()=>"s")],i=e-s.length;if(c===1){const r=[],w=j=>{j.children.forEach(w),j.dimensions===1&&j.new&&r.push(j)};w(f);const b=Object.entries(f.transforms).filter(([j,v])=>v.length!==1||o[v[0]]).filter(([j,v])=>v.length!==3||t[v[0]][v[1]]!==2).map(([j])=>j);for(let j=0;j<r.length;j++){const v=r[j];b.includes(v.gens)&&b.splice(b.indexOf(v.gens),1)}const p=u;u=[];const k=B(i).map((j,v)=>j.map((V,h)=>v===h?1:v===h+1||v===h-1?4:2)),z=B(i).map(j=>j.map(()=>1)),M=T(i).map(()=>"s");for(let j=0;j<b.length;j++){const v=b[j];s[s.length-1]=f.gens.indexOf(v)+"s";const V={key:s.join("-"),dimensions:i,coxeter:k,stellation:z,mirrors:M,skips:s,...H(i,k,z,M,l,s)};V.gens=v;const h={new:!0,...V,quotient:ce(o,V,t,a,s),facet:["",v],children:j===0?p:[]};u.push(h)}}else if(c===2){const r=B(i).map((j,v)=>j.map((V,h)=>v===h?1:v===h+1||v===h-1?3:2)),w=B(i).map(j=>j.map(()=>1)),b=T(i).map(()=>"s"),p=[],k=Object.entries(f.transforms).filter(([j,v])=>v.length>=2).filter(([j,v])=>v.length!==3||t[v[0]][v[1]]!==2),z=Object.entries(f.transforms).filter(([j,v])=>v.length===1);for(let j=0;j<k.length;j++){const[v,V]=k[j];for(let h=j+1;h<k.length;h++){const[x,A]=k[h];V[V.length-1]===A[A.length-1]&&p.push(["",v,x]),V.length!==A.length&&(V.length===2&&V[0]===A[2]||V.length===3&&V[2]===A[0])&&p.push(["",v.toUpperCase(),x.toUpperCase()])}if(V.length===3)for(let h=0;h<z.length;h++){const[x,A]=z[h];V.every(E=>E!==A[0])&&p.push(["",v,x+v])}}const M=u;u=[],p.length||p.push([""]);for(let j=0;j<p.length;j++){const v=p[j];s[s.length-1]=v.length===1?"s":f.gens.indexOf(v[1].toLowerCase())+"s"+f.gens.indexOf(v[2].replace(v[1],"").toLowerCase());const V={key:s.join("-"),dimensions:i,coxeter:r,stellation:w,mirrors:b,skips:s,...H(i,r,w,b,l,s)},h={new:!0,...V,quotient:ce(o,V,t,a,s),facet:v,children:j===0?M:[]};u.push(h)}}else{const r=B(i).map((z,M)=>z.map((j,v)=>M===v?1:2)),w=B(i).map(z=>z.map(()=>1)),b=T(i).map(()=>"s"),p=u;u=[];const k={new:!0,key:s.join("-"),dimensions:i,coxeter:r,stellation:w,mirrors:b,skips:s,...H(i,r,w,b,l,s),facet:[""],quotient:"",children:p};u.push(k)}}f.children.push(...u)}return f},ue=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],ue(e.slice(1),t);const n=t[t.length-1],o=e.find(d=>d[0]===n||d[1]===n);if(!o)return t;const l=e.indexOf(o);return e.splice(l,1),o[0]===n?t.push(o[1]):t.push(o[0]),ue(e,t)},Le=(e,t,n,o)=>{const l=[],d=[];if(e===0){o.dualVertices=o.dualVertices||[];for(const[f,a]of t.currentWords){const g=[];for(let u=0;u<t.facet.length;u++){const c=L(o,a+t.facet[u]);c&&o.vertices.has(c)&&g.push(c)}if(g.length<t.facet.length)continue;let y=new Array(n.dimensions).fill(0);for(let u=0;u<g.length;u++){const c=o.vertices.get(g[u]);for(let s=0;s<c.length;s++)y[s]+=c[s]}y=ae(y,o.space.metric,1),l.push({word:a,vertices:[y]}),o.dualVertices.push({vertex:y,facet:g}),t.currentWords.delete(f)}}else if(e===1){o.dualEdges=o.dualEdges||[];for(const[f,a]of t.currentWords){const g=[];for(let c=0;c<t.facet.length;c++){const s=L(o,a+t.facet[c]);s&&o.vertices.has(s)&&g.push(s)}if(g.length<t.facet.length)continue;const y=[],u=[];for(let c=0;c<o.dualVertices.length;c++){const{vertex:s,facet:i}=o.dualVertices[c];g.every(r=>i.includes(r))&&(y.push(s),u.push(c))}if(y.length===2){const c={word:a,vertices:y};l.push(c),o.dualEdges.push(u),t.currentWords.delete(f)}}}else if(e===2)for(const[f,a]of t.currentWords){const g=[];for(let p=0;p<t.facet.length;p++){const k=L(o,a+t.facet[p]);k&&o.vertices.has(k)&&g.push(k)}if(g.length<t.facet.length)continue;const y={};for(let p=0;p<o.dualVertices.length;p++){const{vertex:k,facet:z}=o.dualVertices[p];g.every(M=>z.includes(M))&&(y[p]=k)}const u=Object.keys(y).map(Number);if(u.length<3)continue;const c=[];for(let p=0;p<o.dualEdges.length;p++){const[k,z]=o.dualEdges[p];u.includes(k)&&u.includes(z)&&c.push([k,z])}const s=[],i=ue(c);if(i.length<4)continue;let r=!0;i[0]===i[i.length-1]&&(i.pop(),r=!1);for(let p=0;p<i.length;p++){const k=i[p];s.push(y[k])}if(s.length===3){const p={word:a,vertices:s};l.push(p),t.currentWords.delete(f);continue}const w=a.length%2?0:1,b=new Array(n.dimensions).fill(0);for(let p=0;p<s.length;p++){const k=s[p];for(let z=0;z<k.length;z++)b[z]+=k[z]}for(let p=0;p<n.dimensions;p++)b[p]/=s.length;for(let p=0;p<s.length;p++){const k={word:a,vertices:[s[(p+w)%s.length],s[(p+(1-w))%s.length],b],faceIndex:p,faceSize:s.length,partial:r};r?d.push(k):(l.push(k),t.currentWords.delete(f))}}return{objects:l,partials:d}},Ce=(e,t,n)=>{const o=[],l=[],d=[];for(const[f,a]of e.currentWords){let g;if(a===""){const y=Oe(n.rootVertices);e.fundamentalVertices=new Map,g=T(t.dimensions).map(u=>ae(y[u],n.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",g)}else{g=[...e.fundamentalVertices.get(a.slice(1))];const y=e.gens.indexOf(a[0]);for(let u=0;u<g.length;u++)g[u]=he(g[u],n.rootNormals[y],n.metric)}for(let y=0;y<g.length;y++){const u=ie(g[y]);e.hashes.vertex.has(u)||(o.push({word:a,cosetId:f,vertices:[g[y]]}),e.hashes.vertex.add(u));for(let c=y+1;c<g.length;c++){const s=[g[y],g[c]].sort((i,r)=>{for(let w=0;w<i.length;w++){if(i[w]<r[w])return-1;if(i[w]>r[w])return 1}return 0}).map(i=>ie(i)).join("-");e.hashes.edge.has(s)||(l.push({word:a,cosetId:f,vertices:[g[y],g[c]]}),e.hashes.edge.add(s));for(let i=c+1;i<g.length;i++){const r=[g[y],g[c],g[i]].sort((w,b)=>{for(let p=0;p<w.length;p++){if(w[p]<b[p])return-1;if(w[p]>b[p])return 1}return 0}).map(w=>ie(w)).join("-");e.hashes.face.has(r)||(d.push({word:a,cosetId:f,vertices:[g[y],g[c],g[i]]}),e.hashes.face.add(r))}}e.fundamentalVertices.set(a,g)}e.currentWords.delete(f)}return[o,l,d]},Ke=(e,t,n=!1,o=!1)=>{if(n){if(o)return e;const l=e>0?1-e%2:0;return e>=t/2+l?2*(t-e)-1+l:2*e-l}return e>=t/2?2*(t-e)-1:2*e},Qe=(e,t,n,o)=>{const l=[],d=[];if(e===0)for(const[f,a]of t.currentWords)l.push({word:a,vertices:[t.vertices.get(f)]}),t.currentWords.delete(f);else if(e===1)for(const[f,a]of t.currentWords){const g={word:a,vertices:[]};for(let y=0;y<t.facet.length;y++){const u=L(o,a+t.facet[y]);u&&o.vertices.has(u)&&g.vertices.push(o.vertices.get(u))}g.vertices.length<e+1||(l.push(g),t.currentWords.delete(f))}else if(e===2)for(const[f,a]of t.currentWords){const g=t.mirrors.every(r=>!!r),y=t.mirrors.every(r=>N(r)),u=a.length%2?0:1,c=[];for(let r=0;r<t.facet.length;r++){const w=Ke(r,t.facet.length,g,y),b=L(o,a+t.facet[w]);b&&o.vertices.has(b)&&c.push(o.vertices.get(b))}if(c.length<e+1)continue;const s=c.length<t.facet.length;if(c.length===3){u&&([c[2],c[1]]=[c[1],c[2]]);const r={word:a,vertices:c,faceIndex:0,faceSize:3,partial:s};s?d.push(r):(l.push(r),t.currentWords.delete(f));continue}const i=new Array(n.dimensions).fill(0);for(let r=0;r<c.length;r++){const w=c[r];for(let b=0;b<w.length;b++)i[b]+=w[b]}for(let r=0;r<n.dimensions;r++)i[r]/=c.length;for(let r=0;r<c.length;r++){const w={word:a,vertices:[c[(r+u)%c.length],c[(r+(1-u))%c.length],i],faceIndex:r,faceSize:c.length,partial:s};s?d.push(w):(l.push(w),t.currentWords.delete(f))}}return{objects:l,partials:d}};let U,C,W;onmessage=({data:{first:e,space:t,dimensions:n,coxeter:o,stellation:l,mirrors:d,ambiance:f,draw:a,batch:g,hidden:y}})=>{var u,c;try{let s=!0;e&&(U=new Map,C=[0,0,0],W=fe(n,o,l,d,t));const i=T(W.dimensions).join("-"),r=[],w=d.every(h=>!h),b=d.some(h=>We(h)),p={[n-1]:b,0:!0,1:b||a.edge&&!w,2:b||a.face&&!w},k=h=>{const x=b?n-h.dimensions-1:h.dimensions;h.children.forEach(k);const A=p[x],E=R[x];if(h!=null&&h.new){r[x]||(r[x]={dimensions:x,processing:a[E]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const F=t.eigens.values;if(U.has(h.key))U.get(h.key).keys.push(h.key);else{let m=A?g:5;E==="edge"&&t.curvature<=0&&(m*=1.5);const P={...W,keys:[h.key],subgens:h.quotient,facet:h.facet,subdimensions:x,mirrors:h.mirrors,limit:m,space:t,...h.dimensions===0&&!w?{rootVertex:t.rootVertex,rootNormals:t.rootNormals,metric:t.metric}:{}};U.set(h.key,P)}const S=U.get(h.key);S.done||(A?(Ve(S),F.some(m=>m<=0)?S.count=1/0:S.count=S.cosets.size):F.some(m=>m<=0)?(S.count=1/0,S.done=!0):S.count=De(S)),r[x].detail.push({key:h.key,coxeter:h.coxeter,stellation:h.stellation,mirrors:h.mirrors,count:S.count,done:S.done});const I=r[x].aggregated.find(({coxeter:m,stellation:P,mirrors:K})=>Q(m,h.coxeter)&&Q(P,h.stellation)&&Q(K,h.mirrors));I?(I.done=I.done&&S.done,I.count+=S.count,I.key+=","+h.key):r[x].aggregated.push({key:h.key,coxeter:h.coxeter,stellation:h.stellation,mirrors:h.mirrors,count:S.count,done:S.done}),a[E]&&S.words&&(r[x].processing+=S.words.size),r[x].count+=S.count,r[x].done=r[x].done&&S.done,s=s&&S.done}};W.children.forEach(k);const z=U.get(i);if(W.dimensions===2&&(W.currentWords=new Map([[1,""]]),W.facet=Array.from(z.words.values()),W.done=!0,U.set("",{...W,subgens:W.subgens,facet:W.facet,subdimensions:W.dimensions,mirrors:W.mirrors}),r[2]={dimensions:2,processing:1,count:0,detail:[{key:"",coxeter:W.coxeter,stellation:W.stellation,mirrors:W.mirrors,count:1,done:!0}],aggregated:[],done:!0}),r[0].done&&(!a.edge||(u=r[1])!=null&&u.done)&&(!a.face||(c=r[2])!=null&&c.done))for(let h of U.values())h.limit=200;const M=[];if(w){const h=Ce(z,W,t);for(let x=0;x<h.length;x++)a[R[x]]?(M.push({start:C[x],size:h[x].length,objects:[h[x]],partials:[]}),C[x]+=h[x].length):M.push(null)}else for(let h=0;h<3;h++){const x=h;if((b?!p[x]:!a[R[h]])||!r[x]){M.push(null);continue}const A={start:C[h],size:0,objects:[],partials:[]};for(let E=0;E<r[x].detail.length;E++){const F=r[x].detail[E];if(y.includes(F.key))continue;const S=U.get(F.key);if(S.currentWords.size){const{objects:I,partials:m}=(b?Le:Qe)(h,S,W,z);if(b&&!a[R[h]])continue;A.objects.push(I),A.size+=I.length+m.length,C[h]+=I.length,A.partials.push(m)}}M.push(A)}const j=[],v=[],V=W.dimensions>4?9:W.dimensions;for(let h=0;h<M.length;h++){const x=M[h];if(!x){j.push(null),v.push(null);continue}const A=[new Float32Array(x.size*3)];for(let S=0;S<h+1;S++)A.push(new Float32Array(x.size*V));let E=0;const F=x.objects.concat(x.partials);for(let S=0;S<F.length;S++){const I=F[S];for(let m=0;m<I.length;m++){const P=I[m];for(let ee=0;ee<P.vertices.length;ee++){const Ae=P.vertices[ee];for(let te=0;te<Ae.length;te++)A[ee+1][E*V+te]=Ae[te]}const K=Te[f].color({word:P.word,key:P.key,subShape:S%x.objects.length,faceIndex:P.faceIndex,faceSize:P.faceSize,dimensions:W.dimensions,draw:a,idx:E,size:x.size,type:R[h]});A[0][E*3+0]=K[0],A[0][E*3+1]=K[1],A[0][E*3+2]=K[2],E++}}j.push(A),v.push({start:x.start,size:x.size})}r.size=w?z.words.size:z.vertices.size,r.done=s,postMessage({polytope:r,infos:v,data:j},{options:{transfer:[j.flat(1)]}})}catch(s){postMessage({error:s.message})}}})();
