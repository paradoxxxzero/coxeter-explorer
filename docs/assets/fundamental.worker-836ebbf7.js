(function(){"use strict";const L=(t,e)=>{const r=new Array(t.length);for(let n=0;n<t.length;n++){let l=0;for(let o=0;o<t[0].length;o++)l+=t[n][o]*e[o];r[n]=l}return r},T=t=>{const e=new Array(t);for(let r=0;r<t;r++)e[r]=new Array(t).fill(0),e[r][r]=1;return e},U=t=>{const e=t.length,r=[];for(let n=0;n<e;n++)r.push([...t[n],...T(e)[n]]);for(let n=0;n<e;n++){const l=r[n][n];for(let o=n+1;o<e;o++){const a=r[o][n]/l;for(let s=n;s<2*e;s++)r[o][s]-=a*r[n][s]}}for(let n=e-1;n>=0;n--){const l=r[n][n];for(let o=n-1;o>=0;o--){const a=r[o][n]/l;for(let s=0;s<2*e;s++)r[o][s]-=a*r[n][s]}for(let o=e;o<2*e;o++)r[n][o]/=l}return r.map(n=>n.slice(e))},$=(t,e,r)=>{let n=0;for(let l=0;l<t.length;l++)n+=t[l]*e[l]*(l===t.length-1&&r||1);return n},W=(t,e)=>$(t,t,e),J=(t,e,r)=>{t=t.slice();const n=2*$(t,e,r);for(let l=0;l<t.length;l++)t[l]-=n*(r||l!==t.length-1?e[l]:0);return t},K=(t,e)=>{if(t=t.slice(),e===0){for(let n=0;n<t.length;n++)t[n]/=t[t.length-1];return t}const r=(e===-1&&v(t[t.length-1])||1)/Z(Y(1e-32,D(W(t,e))));for(let n=0;n<t.length;n++)t[n]*=r;return t},Q=(t,e,r)=>{let n=t.map(s=>isNaN(s)?1:+s),l=e.slice(),o;for(let s=0;s<n.length&&(o=U(l),o.some(i=>i.some(h=>isNaN(h)||D(h)>1e8)));s++){console.warn("Non invertible matrix, retrying by shifting mirrors"),l.push(l.shift()),n.push(n.shift());if(s===n.length-1)return console.warn("Non invertible matrix, returning default value"),[0,0,1]}const a=L(o,n);return a[a.length-1]*=r||1,K(a,r)},V=(t,e,r,n)=>{const l=H/t,o=H/e,a=H/r;return F(H/X(-I(l)*I(a)+C(l)*C(a)*((I(o)-I(n*l)*I(a))/(C(n*l)*C(a)))))},{abs:D,cos:I,sin:C,tan:ue,cosh:de,sinh:pe,acos:X,acosh:me,atan:ye,atan2:be,min:Ae,max:Y,round:F,sqrt:Z,sign:v,ceil:_e,floor:we,log:ke,exp:je,hypot:xe,pow:Ie,PI:H}=Math,O=new ArrayBuffer(8),z=new Float64Array(O),G=new Int32Array(O);function ee(t){return~~t===t?~~t:(z[0]=t,G[0]^G[1])}const R=10**4,te=t=>{let e="";for(let r=0;r<t.length;r++)e+=ee(F(t[r]*R)/R).toString(),r<t.length-1&&(e+="|");return e};function*ne(t,e){if(e<0||t.length<e)return;const r=Array.from(Array(e).keys());for(;;){yield r.map(l=>t[l]);let n=e-1;for(;n>=0&&r[n]>=t.length-e+n;)n--;if(n<0)return;for(let l=r[n]+1;n<e;n++,l++)r[n]=l}}const q=(t,e=2)=>Array.from(ne(t,e)),d=t=>String.fromCharCode(97+t),re=(t,e,r,n,l,o=[])=>{const a=[];for(let s=0;s<t;s++)o.includes(s)||a.push(d(s).repeat(2));for(let s=1;s<t;s++)for(let i=0;i<s;i++)!o.includes(s)&&!o.includes(i)&&e[s][i]>1&&a.push((d(i)+d(s)).repeat(e[s][i]));if(r&&!r.every(s=>s.every(i=>i===1))&&l>0){if(t===4&&(r[0][1]>1||r[2][3]>1)&&e[0][1]>3&&e[2][3]>3)r[0][1]>1&&a.push("abcdcb".repeat(V(e[0][1],e[1][2],e[0][2],r[0][1]))),r[2][3]>1&&a.push("abcdcb".repeat(V(e[2][3],e[1][2],e[1][3],r[2][3])));else for(let s=1;s<t;s++)for(let i=0;i<s;i++)if(r[i][s]>1){if(i+2<t){const h=V(e[i+1][s+1],e[i][s],e[i][s+1],r[i][s]);a.push((d(i)+d(s)+d(i+2)+d(s)).repeat(h))}if(i-1>=0){const h=V(e[i-1][s-1],e[i][s],e[i-1][s],r[i][s]);a.push((d(i)+d(s)+d(i)+d(i-1)).repeat(h))}}}return a},le=t=>t!==""&&t!=="x",se=(t,e=[])=>t.map((r,n)=>e.includes(n)?"":d(n)).join(""),oe=(t,e=[])=>t.map((r,n)=>e.includes(n)||r?"":d(n)).join(""),ie=(t,e,r,n,l)=>{const o=n.map((h,y)=>le(h)?null:y).filter(h=>h),a=re(t,e,r,n,l,o),s=se(n,o),i=oe(n,o);return{gens:s,subgens:i,rels:a}},ae=(t,e)=>{if(e.left===e.right)return!1;for(;e.left!==e.right;){const r=t.normal[e.left_coset][e.rel[e.left]];if(r===void 0)break;e.left++,e.left_coset=r}for(;e.left!==e.right;){const r=t.reverse[e.right_target][e.rel[e.right]];if(r===void 0)break;e.right--,e.right_target=r}return e.left===e.right?(t.normal[e.left_coset][e.rel[e.right]]=e.right_target,t.reverse[e.right_target][e.rel[e.right]]=e.left_coset,!0):!1},fe=t=>{const{gens:e,subgens:r,rels:n,cosets:l,rows:o,words:a,limit:s}=t,i=e.length,h=n.map(f=>[...f].map(b=>e.indexOf(b))),y=r.split("").map(f=>e.indexOf(f));if(l.normal.length===0){l.normal.push(new Array(i).fill()),l.reverse.push(new Array(i).fill());for(let f=0;f<y.length;f++)l.normal[0][y[f]]=0,l.reverse[0][y[f]]=0}for(o.length===0&&o.push(...h.map(f=>({rel:f,left:0,right:f.length-1,left_coset:0,right_target:0})));o.length&&l.normal.length<s;){for(;;){let c=!1;for(let g=o.length-1;g>=0;g--)ae(l,o[g])&&(c=!0,o.splice(g,1));if(!c)break}const f=l.normal.length;let b=!1;for(let c=0;c<l.normal.length;c++){const g=l.normal[c];for(let m=0;m<g.length;m++){let u=g[m];if(u===void 0){u=l.normal.length,l.normal.push(new Array(i).fill()),l.reverse.push(new Array(i).fill()),l.normal[c][m]=u,l.reverse[u][m]=c,o.push(...h.map(A=>({rel:A,left:0,right:A.length-1,left_coset:f,right_target:f}))),b=!0;break}}if(b)break}}o.length||(t.done=!0),a.length===0&&(a[0]="");let j=!0,p=l.normal.length;for(;ce(l.normal.length,a)&&j&&--p;){j=!1;for(let f=0;f<a.length;f++){if(a[f]===void 0)continue;const b=l.normal[f];for(let c=0;c<b.length;c++){const g=b[c];g===void 0||a[g]!==void 0||(a[g]=a[f]+e[c],j=!0)}}}return j||console.warn("Hole in the cosets"),p===0&&console.warn("Max iterations reached"),{cosets:l,rows:o,words:a}},ce=(t,e)=>{for(let r=0;r<t;r++)if(e[r]===void 0)return!0;return!1};let w=null,S=null,N=null,P=null,B=null,M=0;const he=(t,e,r,n,l,o)=>{const a=()=>({cosets:{normal:[],reverse:[]},rows:[],words:[],done:!1,lastDrawn:0});S=new Array(t).fill().map((s,i)=>Q(new Array(t).fill().map((h,y)=>y===i?1:0),l,o)),w={...ie(t,e,r,new Array(t).fill(1),o),...a()},N=new Map,P=new Set,B=new Set,M=0},ge=(t,e)=>{const{rootVertex:r,mirrorsPlanes:n,curvature:l}=t;let o=r;for(let a=0;a<e.length;a++)o=J(o,n[e.charCodeAt(a)-97],l);return o};onmessage=({data:{order:t,curvature:e,mirrorsPlanes:r,coxeter:n,stellation:l,mirrors:o,rootVertex:a,dimensions:s,uuid:i}})=>{t===0&&he(s,n,l,o,r,e);const h=t===0?1:(t+1)*10,y=q(new Array(S.length).fill().map((p,f)=>f)),j=q(new Array(S.length).fill().map((p,f)=>f),3);try{let p=[],f=[],b=[];if(!w.done){w.limit=h,fe(w);for(let c=w.lastDrawn;c<w.words.length;c++){const g=w.words[c];if(g===void 0)continue;const m=[];for(let u=0;u<S.length;u++){const A=S[u],k=ge({rootVertex:A,mirrorsPlanes:r,curvature:e},g),_=te(k);if(N.has(_))m.push(N.get(_));else{p.push({vertex:k,word:g,i:c});const x=M+p.length-1;N.set(_,x),m.push(x)}}w.lastDrawn=c+1;for(let u=0;u<y.length;u++){const[A,k]=y[u],[_,x]=[m[A],m[k]],E=A<k?`${_}-${x}`:`${x}-${_}`;P.has(E)||(f.push({start:_,end:x,word:g}),P.add(E))}for(let u=0;u<j.length;u++){const A=j[u].map(_=>m[_]),k=A.sort().join("-");B.has(k)||(b.push({vertices:A,word:g}),B.add(k))}}}M+=p.length,postMessage({vertices:p,edges:f,faces:b,order:t,uuid:i})}catch(p){postMessage({error:p.message,uuid:i})}}})();
