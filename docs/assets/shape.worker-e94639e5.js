(function(){"use strict";const R=e=>e!==""&&e!=="x",Se=e=>e==="m"||e==="b"||e==="c"||e==="d",Ve=e=>e==="c"||e==="d",q=e=>e==="s"||e==="b"||e==="d",N=(e,t=null,n=1,s=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(s)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((l,d)=>e+d*n)},H=(e,t)=>e.length!==t.length?!1:e.every((n,s)=>Array.isArray(n)?H(n,t[s]):n===t[s]),ce=(e,t,n)=>Pe(e,P(K(Me(n),t),2*J(K(Ce(n),e),t))),le=(e,t)=>{if(t.some((s,l)=>s.some((d,u)=>l===u&&d===0)))return e[e.length-1]===0&&(e[e.length-1]=1e-16),P(e,1/e[e.length-1]);let n=J(K(t,e),e);return n===0&&(n=1e-16),P(e,-1/We(fe(n)))},Ce=e=>e.map((t,n)=>t.map((s,l)=>n===l&&s===0?1:s)),Me=e=>e.map(t=>t.map(n=>fe(n))),L=(e,t,n,s)=>{const l=G/e,d=G/t,u=G/n;return ue(G/Ae(-U(l)*U(u)+Q(l)*Q(u)*((U(d)-U(s*l)*U(u))/(Q(s*l)*Q(u)))))},{abs:fe,cos:U,sin:Q,tan:Ye,cosh:Ze,sinh:et,acos:Ae,acosh:tt,atan:nt,atan2:st,min:ot,max:rt,round:ue,sqrt:We,cbrt:it,sign:ct,ceil:lt,floor:ft,log:ut,exp:gt,hypot:dt,pow:Oe,PI:G}=Math,qe=(...e)=>e.reduce((t,n)=>t+n,0)/e.length,ge=new ArrayBuffer(8),Ee=new Float64Array(ge),de=new Int32Array(ge);function me(e){return~~e===e?~~e:(Ee[0]=e,de[0]^de[1])}const he=10**4,Z=e=>{let t="";for(let n=0;n<e.length;n++)t+=me(ue(e[n]*he)/he).toString(),n<e.length-1&&(t+="|");return t},M=e=>String.fromCharCode(97+e),ae=e=>e.charCodeAt(0)-97,ee=(e,t="",n=[])=>{const s=[];for(let l=0;l<e.length;l++){const[d,u]=e[l],a=e.filter((c,v)=>v!==l);if(n.length){const c=n[n.length-1];if(u.some(v=>v===c)){const v=u[1]===c,g=v?d.toUpperCase():d,i=v?[...u].reverse():u;if(i[1]===n[0])return[t+g];a.length&&s.push(...ee(a,t+g,n.concat(i.slice(1))))}}else s.push(...ee(a,d,u))}return s},B=(e,t,n,s,l,d=[])=>{let u="";const a=s.map((o,r)=>d.includes(r)||o?"":M(r)).join(""),c={},v=[];for(let o=0;o<e;o++)if(!d.includes(o)){if(!q(s[o])){const r=M(o);u+=r,c[r]=[o],v.push(r.repeat(2))}for(let r=o+1;r<e;r++){if(d.includes(r))continue;const f=t[o][r];if(q(s[o])&&q(s[r])){const h=M((o+1)*e+r);u+=h,c[h]=[o,r],f>1&&v.push(h.repeat(f))}else if(q(s[o])&&!q(s[r])){const h=M((o+1)*e+r);u+=h,c[h]=[o,r,o],v.push(h.repeat(2)),f>1&&v.push((h+M(r)).repeat(f%2===0?f/2:f))}else if(!q(s[o])&&q(s[r])){const h=M((o+1)*e+r);u+=h,c[h]=[r,o,r],v.push(h.repeat(2)),f>1&&v.push((h+M(o)).repeat(f%2===0?f/2:f))}else f>1&&v.push((M(o)+M(r)).repeat(f))}}const g=Object.entries(c).filter(([o,r])=>r.length===3),i=Object.entries(c).filter(([o,r])=>r.length===2);if(i.length>1){const o=ee(i);v.push(...o.map(r=>r.split("").reverse().join("")))}if(g.length>1)for(let o=0;o<g.length;o++){const[r,f]=g[o];for(let h=o+1;h<g.length;h++){const[w,b]=g[h];if(f[1]===b[1]){const V=i.find(([y,k])=>k[0]===f[0]&&k[1]===b[0]);if(V){const y=V[0];v.push(r.toUpperCase()+y.toUpperCase()+w+y)}}else if(f[0]===b[0]){const V=t[f[1]][b[1]];V>1&&v.push((r+w).repeat(V))}}}if(!s.some(o=>q(o))&&!n.every(o=>o.every(r=>r===1))&&l.curvature>0){if(e===4&&n[0][1]>1!=n[2][3]>1&&t[0][1]>3&&t[2][3]>3)[0,1,2,3].some(o=>d.includes(o))||(n[0][1]>1&&v.push("abcdcb".repeat(L(t[0][1],t[1][2],t[0][2],n[0][1]))),n[2][3]>1&&v.push("abcdcb".repeat(L(t[2][3],t[1][2],t[1][3],n[2][3]))));else for(let o=1;o<e;o++)for(let r=0;r<o;r++)if(n[r][o]>1){if(r+2<e){const f=L(t[r+1][o+1],t[r][o],t[r][o+1],n[r][o]);f&&!d.includes(r)&&!d.includes(o)&&!d.includes(r+2)&&v.push((M(r)+M(o)+M(r+2)+M(o)).repeat(f))}if(r-1>=0){const f=L(t[r-1][o-1],t[r][o],t[r-1][o],n[r][o]);f&&!d.includes(r)&&!d.includes(o)&&!d.includes(r-1)&&v.push((M(r)+M(o)+M(r)+M(r-1)).repeat(f))}}}return{gens:u,subgens:a,rels:v,transforms:c}},J=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},F=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]+t[s];return n},Pe=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]-t[s];return n},P=(e,t)=>{const n=[];for(let s=0;s<e.length;s++)n[s]=e[s]*t;return n},pe=e=>{const t=[];for(let n=0;n<e[0].length;n++){t.push([]);for(let s=0;s<e.length;s++)t[n].push(e[s][n])}return t},K=(e,t)=>{const n=new Array(e.length);for(let s=0;s<e.length;s++){let l=0;for(let d=0;d<e[0].length;d++)l+=e[s][d]*t[d];n[s]=l}return n},Ie=e=>{const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=new Array(e.length).fill(0),t[n][n]=e[n];return t},I=e=>{const t=new Array(e).fill(1);return Ie(t)},te=(e,t)=>e.filter((n,s)=>!t.includes(s)),ve=(e,t)=>te(e,t).map(n=>te(n,t)),_e=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},O=(e,t)=>{let n=t,s=0;for(;e.quotientMap[n];)s++,n=e.quotientMap[n];return s>1&&(e.quotientMap[t]=n),n},be=(e,t,n)=>{const s=t,l=[[t,n]];for(;l.length>0;)if([t,n]=l.pop(),t>n&&([t,n]=[n,t]),t=O(e,t),n=O(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const d=e.cosets.get(t),u=e.cosets.get(n);e.cosets.delete(n);for(const[a,c]of u)d.has(a)?l.push([d.get(a),c]):d.set(a,c)}return O(e,s)},we=(e,t,n,s)=>{t=O(e,t);const l=e.cosets.get(t);l.has(n)?be(e,l.get(n),s):l.set(n,s)},X=(e,t,n,s)=>{t=O(e,t);let l;const d=e.cosets.get(t);return d.has(n)?(l=O(e,d.get(n)),s!==void 0&&l!==s&&be(e,s,l)):(s?l=s:(l=e.nextVertex++,e.cosets.set(l,new Map),e.unvisited.push(l)),we(e,t,n,l),we(e,l,_e(n),t)),l},xe=function(e,t,n){let s=n;for(let l=t.length-1;l>0;l--)s=X(e,s,t[l]);X(e,s,t[0],n)},Ne=function(e){if(!e.words){const t=O(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(t,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=O(e,t),s=e.cosets.get(n),l=e.words.get(n);if(s.size<e.gens.length*2)return;const d=[];for(let u=0;u<e.gens.length;u++){const a=e.gens[u],c=O(e,s.get(a));if(!e.words.has(c)){if(e.cosets.get(c).size<e.gens.length*2)return;d.push([a,c])}}e.remaining.shift();for(let u=0;u<d.length;u++){const[a,c]=d[u],v=a+l;if(e.words.set(c,v),e.currentWords.set(c,v),e.lastCoset=c,e.remaining.push(c),e.vertices){let g=e.vertices.get(n);for(let i=0;i<e.transforms[a].length;i++){const o=e.transforms[a][i];g=ce(g,e.rootNormals[o],e.metric)}e.vertices.set(c,g)}}}},_=(e,t)=>{let n=O(e,1);for(let s=t.length-1;s>=0;s--){const l=e.cosets.get(n);if(l.size<e.gens.length*2||(n=O(e,l.get(t[s])),e.cosets.get(n).size<e.gens.length*2))return}return n},je=e=>{if(e.cosets)e.unvisited.splice(0,e.pointer),e.pointer=0;else{e.unvisited=[1],e.pointer=0,e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)xe(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length-e.pointer>0;){const s=e.unvisited[e.pointer++],l=O(e,s);if(!e.seen.has(l)){e.seen.add(l),n=l;break}}if(n===null){e.done=!0;break}for(let s=0;s<e.gens.length;s++)X(e,n,e.gens[s].toUpperCase()),X(e,n,e.gens[s]);for(let s=0;s<e.rels.length;s++)xe(e,e.rels[s],n)}},Ue=e=>(je(e),e.cosets.size),ye=e=>(je(e),Ne(e),e),Be=(e,t,n)=>{if(t===0)return!0;if(e.length<=t)return!1;const s=new Set;for(let l=0;l<e.length;l++){const d=e[l];if(d)for(let u=0;u<d.length;u++){const a=d[u];for(let c=0;c<n[a].length;c++){const v=M(n[a][c]);s.has(v)||s.add(v)}if(s.size>=t)return!0}}return!1},ne=(e,t,n,s,l)=>{const d=N(n.length).filter(g=>!l.includes(g));let u="";const a=Object.entries(s),c=a.filter(([g,i])=>i.length===1),v=a.filter(([g,i])=>i.length===3);for(let g=0;g<a.length;g++){const[i,o]=a[g];if(o.length===1){const r=o[0];if(!l.includes(r)&&!v.some(([f,h])=>h[1]===r)){u+=i;continue}if(!R(e[r]))continue;!e[r]&&!d.some(f=>n[f][r]!==2)&&(u+=i)}else if(o.length===2){const r=o[0],f=o[1],h=n[r][f];if(t.gens.includes(i)&&(t.dimensions===1?h===2:h>2)){u+=i;continue}if(!R(e[r])||!R(e[f]))continue}else if(o.length===3&&l.length&&typeof l[l.length-1]=="string"&&l[l.length-1].includes("s")){const r=o[0],f=o[1],h=n[r][f],w=l[l.length-1].split("s").filter(b=>b);for(let b=0;b<w.length;b++){const V=w[b],y=s[Object.keys(s)[V]];if(y.length===3&&o[1]===y[1]){const k=n[y[0]][y[1]];if((t.dimensions===1?![2,4].includes(h)||[2,4].includes(k):h!==2)&&(u+=i),c.find(([x,j])=>y.every(S=>S!==j[0]))){const x=c.find(([j,S])=>S[0]===y[1]);x&&(u+=x[0])}}}}}return u},se=(e,t,n,s,l,d=null,u=null,a=null,c=new Map)=>{const v=!u;s.every(g=>!g)&&(s=s.map(()=>1)),d=d||s.map((g,i)=>R(g)?null:i).filter(g=>g!==null),u=u||{new:!0,key:"",dimensions:e,coxeter:t,stellation:n,mirrors:s,skips:d,...B(e,t,n,s,l,d),quotient:"",facet:[""],children:[]},a=a||u.transforms;for(let g=0;g<e;g++){if(d.includes(g)||d.includes("s"))continue;const i=[...d,g],o=i.sort().join("-");let r=!1;if(!c.has(o)){r=!0;const w={key:o,dimensions:e-i.length,coxeter:ve(t,i),stellation:ve(n,i),mirrors:te(s,i),skips:i,...B(e,t,n,s,l,i)};if(w.gens===null)continue;ye(w),c.set(o,w)}const f=c.get(o),h=Array.from(f.words.values());if(Be(h,f.dimensions,f.transforms)){let w=ne(s,f,t,a,i),b={new:r,...f,quotient:w,facet:h,children:[]};f.dimensions>0&&(b=se(e,t,n,s,l,i,b,a,c)),u.children.push(b)}}if(u.children.length===0&&e-d.length>1){console.debug("No leaf found, digging deeper",d);for(let g=0;g<e;g++){if(d.includes(g))continue;const i=[...d,g],o=i.sort().join("-");let f={new:!1,...c.get(o),quotient:"",facet:[""],children:[]};f=se(e,t,n,s,l,i,f,a,c),u.children.push(f)}}if(v&&s.some(g=>q(g))){let g=[];for(let i=1;i<e;i++){const o=[...d,...N(e-i).map(()=>"s")],r=e-o.length;if(i===1){const f=[],h=z=>{z.children.forEach(h),z.dimensions===1&&z.new&&f.push(z)};h(u);const w=Object.entries(u.transforms).filter(([z,x])=>x.length!==1||s[x[0]]).filter(([z,x])=>x.length!==3||t[x[0]][x[1]]!==2).map(([z])=>z);for(let z=0;z<f.length;z++){const x=f[z];w.includes(x.gens)&&w.splice(w.indexOf(x.gens),1)}const b=g;g=[];const V=I(r).map((z,x)=>z.map((j,S)=>x===S?1:x===S+1||x===S-1?4:2)),y=I(r).map(z=>z.map(()=>1)),k=N(r).map(()=>"s");for(let z=0;z<w.length;z++){const x=w[z];o[o.length-1]=u.gens.indexOf(x)+"s";const j={key:o.join("-"),dimensions:r,coxeter:V,stellation:y,mirrors:k,skips:o,...B(r,V,y,k,l,o)};j.gens=x;const S={new:!0,...j,quotient:ne(s,j,t,a,o),facet:["",x],children:z===0?b:[]};g.push(S)}}else if(i===2){const f=I(r).map((z,x)=>z.map((j,S)=>x===S?1:x===S+1||x===S-1?3:2)),h=I(r).map(z=>z.map(()=>1)),w=N(r).map(()=>"s"),b=[],V=Object.entries(u.transforms).filter(([z,x])=>x.length>=2).filter(([z,x])=>x.length!==3||t[x[0]][x[1]]!==2),y=Object.entries(u.transforms).filter(([z,x])=>x.length===1);for(let z=0;z<V.length;z++){const[x,j]=V[z];for(let S=z+1;S<V.length;S++){const[E,W]=V[S];j[j.length-1]===W[W.length-1]&&b.push(["",x,E]),j.length!==W.length&&(j.length===2&&j[0]===W[2]||j.length===3&&j[2]===W[0])&&b.push(["",x.toUpperCase(),E.toUpperCase()])}if(j.length===3)for(let S=0;S<y.length;S++){const[E,W]=y[S];j.every(m=>m!==W[0])&&b.push(["",x,E+x])}}const k=g;g=[],b.length||b.push([""]);for(let z=0;z<b.length;z++){const x=b[z];o[o.length-1]=x.length===1?"s":u.gens.indexOf(x[1].toLowerCase())+"s"+u.gens.indexOf(x[2].replace(x[1],"").toLowerCase());const j={key:o.join("-"),dimensions:r,coxeter:f,stellation:h,mirrors:w,skips:o,...B(r,f,h,w,l,o)},S={new:!0,...j,quotient:ne(s,j,t,a,o),facet:x,children:z===0?k:[]};g.push(S)}}else{const f=I(r).map((y,k)=>y.map((z,x)=>k===x?1:2)),h=I(r).map(y=>y.map(()=>1)),w=N(r).map(()=>"s"),b=g;g=[];const V={new:!0,key:o.join("-"),dimensions:r,coxeter:f,stellation:h,mirrors:w,skips:o,...B(r,f,h,w,l,o),facet:[""],quotient:"",children:b};g.push(V)}}u.children.push(...g)}return u},T=["vertex","edge","face"],oe=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),A=(e,t,n)=>{let s,l,d;if(t===0)s=l=d=n;else{const u=n<.5?n*(1+t):n+t-n*t,a=2*n-u;s=oe(a,u,e+1/3),l=oe(a,u,e),d=oe(a,u,e-1/3)}return[s,l,d]},Y=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Fe={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>A(e.length*.03%1,.75,.7)},Te=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e,dual:t})=>A((e.length*.17-(t?.43:0))%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>A(...Y[e.length%Y.length])},cathedral:{background:[.6,.6,.6,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,opacity:.9},transparency:"oit",color:({word:e,type:t})=>t==="face"?A(e.length*.3%1,1,.6):[0,0,0]},synthwave:{background:[...A(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>A((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e,dual:t})=>A(e.length*.03%1-(t?.25:0),1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>A(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({faceSize:e,type:t,idx:n,size:s})=>t==="face"?A((e-2)*.21%1,1,.8):A(n/s,.75,.5)},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?A(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:s})=>{const l=e.length?ae(e[e.length-1])/n:0;return A(l%1,1,t==="face"?.6:s.face?0:.8)}},harlequin:{background:[...A(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,idx:t,type:n})=>{const s=e.split("").map(d=>ae(d)).reduce((d,u)=>d+u,0),l=[...Y[s%Y.length]];return t%2&&(l[2]*=.5),A(...l)}},pure:{background:[0,0,0,1],color:({word:e})=>A(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({faceIndex:e,faceSize:t})=>A(e/t,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},glass:{background:[0,0,0,1],transparency:"blend",opacity:.2,ambient:0,diffuse:"fresnel",specular:"blinn-phong",face:{shininess:16,diffuse:!1},color:({subShape:e,word:t,type:n})=>n!=="vertex"?A((e*.21+t.length*.03)%1,1,.8):[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>A(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-Oe(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...Fe,...t,transparent:{}}])),$e=(e,t,n,s)=>{const l=[],d=[],u=e>4?9:e;for(let a=0;a<t.length;a++){const c=t[a];if(!c){l.push(null),d.push(null);continue}const v=[new Float32Array(c.size*3)];for(let o=0;o<a+1;o++)v.push(new Float32Array(c.size*u));let g=0;const i=c.objects.concat(c.partials);for(let o=0;o<i.length;o++){const r=i[o];if(r)for(let f=0;f<r.length;f++){const h=r[f];for(let b=0;b<h.vertices.length;b++){const V=h.vertices[b];for(let y=0;y<V.length;y++)v[b+1][g*u+y]=V[y]}const w=Te[n].color({word:h.word,key:h.key,subShape:o%c.objects.length,faceIndex:h.faceIndex,faceSize:h.faceSize,dimensions:e,draw:s,idx:g,size:c.size,type:T[a],dual:!!h.dual});v[0][g*3+0]=w[0],v[0][g*3+1]=w[1],v[0][g*3+2]=w[2],g++}}l.push(v),d.push({start:c.start,size:c.size})}return{infos:d,data:l}},De=(e,t,n=!1,s=!1)=>{if(n){if(s)return e;t%2&&t--;const l=e>0?1-e%2:0;return e>=t/2+l?2*(t-e)-1+l:2*e-l}return e>=t/2?2*(t-e)-1:2*e},Re=(e,t,n,s)=>{const l=[],d=[];if(e===0)for(const[u,a]of t.currentWords)l.push({word:a,vertices:[t.vertices.get(u)]}),t.currentWords.delete(u);else if(e===1)for(const[u,a]of t.currentWords){const c={word:a,vertices:[]};for(let v=0;v<t.facet.length;v++){const g=_(s.root,a+t.facet[v]);g&&s.root.vertices.has(g)&&c.vertices.push(s.root.vertices.get(g))}c.vertices.length<e+1||(l.push(c),t.currentWords.delete(u))}else if(e===2)for(const[u,a]of t.currentWords){const c=t.mirrors.every(f=>!!f),v=t.mirrors.every(f=>q(f)),g=a.length%2?0:1,i=[];for(let f=0;f<t.facet.length;f++){const h=De(f,t.facet.length,c,v),w=_(s.root,a+t.facet[h]);w&&s.root.vertices.has(w)&&i.push(s.root.vertices.get(w))}if(i.length<e+1)continue;const o=i.length<t.facet.length;if(i.length===3){g&&([i[2],i[1]]=[i[1],i[2]]);const f={word:a,vertices:i,faceIndex:0,faceSize:3,partial:o};o?d.push(f):(l.push(f),t.currentWords.delete(u));continue}let r=new Array(n.dimensions).fill(0);for(let f=0;f<i.length;f++){const h=i[f];r=F(r,h)}r=P(r,1/i.length);for(let f=0;f<i.length;f++){const h={word:a,vertices:[i[(f+g)%i.length],i[(f+(1-g))%i.length],r],faceIndex:f,faceSize:i.length,partial:o};o?d.push(h):(l.push(h),t.currentWords.delete(u))}}return{objects:l,partials:d}},re=(e,t=null)=>{if(!e.length)return t||[];if(!t)return t=e[0],re(e.slice(1),t);const n=t[t.length-1],s=e.find(d=>d[0]===n||d[1]===n);if(!s)return t;const l=e.indexOf(s);return e.splice(l,1),s[0]===n?t.push(s[1]):t.push(s[0]),re(e,t)},He=(e,t,n,s)=>{const l=[],d=t.children.find(c=>c.key===n.replace("d","")),u=[],a=c=>{c.dimensions===e&&u.push(c.facet),c.children.forEach(a)};a(d),t.children.filter(c=>c.key.includes("s")).forEach(a);for(let c=0;c<u.length;c++){const v=u[c];if(v.length<2)continue;const g=[];for(let o=0;o<v.length;o++){const r=_(s,v[o]);r&&s.vertices.has(r)&&g.push(s.vertices.get(r))}let i=new Array(g[0].length).fill(0);for(let o=0;o<g.length;o++){const r=g[o];i=F(i,r)}i=P(i,1/g.length),l.push(J(i,i))}return qe(...l)},Le=(e,t,n,s,l,d)=>{var v,g,i;const{space:u}=s.root,a=[],c=[];if(e===0){s.root.dualVertices=s.root.dualVertices||new Map;for(const[o,r]of t.currentWords){const f=[];for(let V=0;V<t.facet.length;V++){const y=_(s.root,r+t.facet[V]);y&&s.root.vertices.has(y)&&f.push(y)}if(f.length<2)continue;const h=f.length<t.facet.length;let w=new Array(n.dimensions).fill(0);for(let V=0;V<f.length;V++){const y=s.root.vertices.get(f[V]);w=F(w,y)}if(w=le(w,u.metric),u.curvature){let V=0;if(l>=0){let y=1;l>0&&l<n.dimensions-1&&(t.midradius||(t.midradius=He(l,n,d,s.root)),y=t.midradius);const k=K(u.metric,w);for(let z=0;z<f.length;z++){const x=s.root.vertices.get(f[z]);V+=J(k,x)}V/=y*f.length,l===n.dimensions-1&&(V=1/V)}else V=1;w=P(w,u.curvature/V)}const b={word:r,vertices:[w],dual:!0,partial:h};s.root.dualVertices.set(`${d}#${r}`,{vertex:w,facet:f,partial:h}),h?c.push(b):(a.push(b),t.currentWords.delete(o))}}else if(e===1){if(!((v=s.root.dualVertices)!=null&&v.size))return{objects:a,partials:c};s.root.dualEdges=s.root.dualEdges||new Map;for(const[o,r]of t.currentWords){const f=[];for(let y=0;y<t.facet.length;y++){const k=_(s.root,r+t.facet[y]);k&&s.root.vertices.has(k)&&f.push(k)}if(!f.length)continue;let h=f.length<t.facet.length;const w=[],b=[];for(const[y,{vertex:k,facet:z,partial:x}]of s.root.dualVertices.entries())if(f.every(j=>z.includes(j))&&(w.push(k),b.push(y)),h=h||x,w.length===2)break;if(w.length!==2)continue;const V={word:r,vertices:w,dual:!0,partial:h};s.root.dualEdges.set(`${d}#${r}`,{edge:b,partial:h}),h?c.push(V):(a.push(V),t.currentWords.delete(o))}}else if(e===2){if(!((g=s.root.dualVertices)!=null&&g.size)||!((i=s.root.dualEdges)!=null&&i.size))return{objects:a,partials:c};for(const[o,r]of t.currentWords){const f=[];for(let j=0;j<t.facet.length;j++){const S=_(s.root,r+t.facet[j]);S&&s.root.vertices.has(S)&&f.push(S)}if(f.length<t.facet.length)continue;let h=!1;const w={},b=[];for(const[j,{vertex:S,facet:E,partial:W}]of s.root.dualVertices.entries())(f.every(m=>E.includes(m))||n.dimensions===2)&&(w[j]=S,b.push(j),h=h||W);if(b.length<3)continue;const V=[];for(const{edge:j,partial:S}of s.root.dualEdges.values())b.includes(j[0])&&b.includes(j[1])&&(h=h||S,V.push([...j]));if(V.length<3)continue;const y=[],k=re(V);if(k.length<4)continue;k[0]===k[k.length-1]&&k.pop();for(let j=0;j<k.length;j++){const S=k[j];y.push(w[S])}if(y.length===3){const j={word:r,vertices:y,dual:!0,partial:h};h?c.push(j):(a.push(j),t.currentWords.delete(o));continue}const z=r.length%2?0:1;let x=new Array(n.dimensions).fill(0);for(let j=0;j<y.length;j++){const S=y[j];x=F(x,S)}x=P(x,1/y.length);for(let j=0;j<y.length;j++){const S={word:r,vertices:[y[(j+z)%y.length],y[(j+(1-z))%y.length],x],dual:!0,faceIndex:j,faceSize:y.length,partial:h};h?c.push(S):(a.push(S),t.currentWords.delete(o))}}}return{objects:a,partials:c}},Qe=(e,t,n)=>{const s=[],l=[],d=[];for(const[u,a]of e.currentWords){let c;if(a===""){const v=pe(n.rootVertices);e.fundamentalVertices=new Map,c=v.map(g=>le(g,n.metric)),e.hashes={vertex:new Set,edge:new Set,face:new Set},e.fundamentalVertices.set("",c)}else{c=[...e.fundamentalVertices.get(a.slice(1))];const v=e.gens.indexOf(a[0]);for(let g=0;g<c.length;g++)c[g]=ce(c[g],n.rootNormals[v],n.metric)}for(let v=0;v<c.length;v++){const g=Z(c[v]);e.hashes.vertex.has(g)||(s.push({word:a,cosetId:u,vertices:[c[v]]}),e.hashes.vertex.add(g));for(let i=v+1;i<c.length;i++){const o=[c[v],c[i]].sort((r,f)=>{for(let h=0;h<r.length;h++){if(r[h]<f[h])return-1;if(r[h]>f[h])return 1}return 0}).map(r=>Z(r)).join("-");e.hashes.edge.has(o)||(l.push({word:a,cosetId:u,vertices:[c[v],c[i]]}),e.hashes.edge.add(o));for(let r=i+1;r<c.length;r++){const f=[c[v],c[i],c[r]].sort((h,w)=>{for(let b=0;b<h.length;b++){if(h[b]<w[b])return-1;if(h[b]>w[b])return 1}return 0}).map(h=>Z(h)).join("-");e.hashes.face.has(f)||(d.push({word:a,cosetId:u,vertices:[c[v],c[i],c[r]]}),e.hashes.face.add(f))}}e.fundamentalVertices.set(a,c)}e.currentWords.delete(u)}return[s,l,d]},Ge=(e,t,n,s,l,d,u,a,c)=>{u.root.lasts||(u.root.lasts=new Array(3).fill(0));const v=[];if(l){const g=Qe(u.root,e,n);for(let i=0;i<g.length;i++)s[T[i]]?(v.push({start:u.root.lasts[i],size:g[i].length,objects:[g[i]],partials:[]}),u.root.lasts[i]+=g[i].length):v.push(null)}else for(let g=0;g<3;g++){if(!u[g]||!d&&!s[T[g]]){v.push(null);continue}const i={start:u.root.lasts[g],size:0,objects:[],partials:[]};for(let o=0;o<u[g].detail.length;o++){const r=u[g].detail[o],f=t.get(r.key);if(!r.dual&&a.includes(r.key)||!f.compute||!f.currentWords.size){i.objects.push(null),i.partials.push(null);continue}const{objects:h,partials:w}=r.dual?Le(g,f,e,u,c,r.key):Re(g,f,e,u);!s[T[g]]||a.includes(r.key)||(i.objects.push(h),i.size+=h.length+w.length,u.root.lasts[g]+=h.length,i.partials.push(w))}v.push(i)}return v},ze=(e,t,n,s,l,d,u,a,c=[])=>{c.done=!0;let v=!0;for(const i of n.values())if(i.compute&&!i.done){v=!1;break}const g=i=>{const o=u||d?t.dimensions-i.dimensions-1:i.dimensions;i.children.forEach(g);const r=a[o],f=T[o],h=`${u?"d":d?"f":""}${i.key}`;if(i!=null&&i.new){c[o]||(c[o]={dimensions:o,processing:l[f]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const w=s.eigens.values;if(!n.has(h)){const k={...t,key:h,subgens:i.quotient,facet:i.facet,subdimensions:o,mirrors:i.mirrors,compute:r,space:s,...i.dimensions===0&&!d?{rootVertex:s.rootVertex,rootNormals:s.rootNormals,metric:s.metric}:{}};n.set(h,k)}const b=n.get(h);i.dimensions===0&&(c.root=b),b.done||(b.limit=r?e:v?1e3:1,f==="edge"&&s.curvature<=0&&(b.limit*=1.75),r?(ye(b),w.some(k=>k<=0)?b.count=1/0:b.count=b.cosets.size):w.some(k=>k<=0)?(b.count=1/0,b.done=!0):b.limit&&(b.count=Ue(b)));const V=d?i.mirrors.map(()=>0):i.mirrors;c[o].detail.push({key:h,coxeter:i.coxeter,stellation:i.stellation,mirrors:V,dual:u,fundamental:d,count:b.count,done:b.done});const y=c[o].aggregated.find(({coxeter:k,stellation:z,mirrors:x})=>H(k,i.coxeter)&&H(z,i.stellation)&&H(x,V));y?(y.done=y.done&&b.done,y.count+=b.count,y.key+=","+h):c[o].aggregated.push({key:h,coxeter:i.coxeter,stellation:i.stellation,mirrors:V,count:b.count,done:b.done}),l[f]&&b.words&&(c[o].processing+=b.words.size),c[o].count+=b.count,c[o].done=c[o].done&&b.done,c[o].dual=u,c[o].fundamental=d,c.done=c.done&&b.done}};return t.children.forEach(g),c.size=d?c.root.words.size:c.root.vertices.size,c};let $,C;onmessage=({data:{first:e,space:t,dimensions:n,coxeter:s,stellation:l,mirrors:d,ambiance:u,draw:a,batch:c,hidden:v,reciprocation:g}})=>{var i;try{e&&($=new Map,C=se(n,s,l,d,t));const o=d.every(k=>!k),r=d.some(k=>Se(k)),f=d.some(k=>Ve(k)),h=o?{[n-1]:!0}:r?{[n-1]:!0,[n-2]:a.edge||a.face,[n-3]:a.face,0:!0}:{0:!0,1:a.edge,2:a.face},w=ze(c,C,$,t,a,o,r&&!f,h);f&&ze(c,C,$,t,a,o,r,h,w),C.dimensions===2&&(C.currentWords=new Map([[1,""]]),C.facet=Array.from(w.root.words.values()),C.done=!0,$.set("f",{...C,subgens:C.subgens,facet:C.facet,subdimensions:C.dimensions,mirrors:C.mirrors,compute:!0}),w[2]={dimensions:2,processing:1,count:1,detail:[{key:"f",coxeter:C.coxeter,stellation:C.stellation,mirrors:C.mirrors,dual:r,count:1,done:!0}],aggregated:[{key:"f",coxeter:C.coxeter,stellation:C.stellation,mirrors:C.mirrors,dual:r,count:1,done:!0}],done:!0});const b=Ge(C,$,t,a,o,r,w,v,g);if(w.done&&((i=w.root.vertices)==null?void 0:i.size)===2){const k=[...w.root.vertices.values()],z=P(F(k[1],k[0]),.5),x=k[0].map((j,S)=>j===0?S:null).filter(j=>j!==null);if(a.edge){const j=[];for(let S=0;S<x.length;S++){const E=x[S];for(let W=-1;W<2;W+=2){const m=z.map((p,D)=>D===E?W:p);j.push({word:"",vertices:[k[0],m]}),j.push({word:"",vertices:[m,k[1]]})}b[1]={start:0,size:j.length,objects:[j],partials:[]}}}if(a.face){const j=[];for(let S=0;S<x.length;S++){const E=x[S];for(let W=-1;W<2;W+=2){const m=z.map((p,D)=>D===E?W:p);for(let p=S+1;p<x.length;p++){const D=x[p];for(let ie=-1;ie<2;ie+=2){const ke=z.map((Je,Ke)=>Ke===D?ie:Je);j.push({word:"",vertices:[m,ke,k[0]]}),j.push({word:"",vertices:[ke,m,k[1]]})}}}}b[2]={start:0,size:j.length,objects:[j],partials:[]}}}const{infos:V,data:y}=$e(C.dimensions,b,u,a);w.root=void 0,postMessage({polytope:w,infos:V,data:y},y.flat(1).filter(k=>k).map(k=>k.buffer))}catch(o){postMessage({error:o.message})}}})();
