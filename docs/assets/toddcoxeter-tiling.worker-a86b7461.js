(function(){"use strict";const w=t=>t!==""&&t!=="x",q=(t,e,l)=>{let a=0;for(let s=0;s<t.length;s++)a+=t[s]*e[s]*(s===t.length-1&&l||1);return a},B=(t,e,l)=>{t=t.slice();const a=2*q(t,e,l);for(let s=0;s<t.length;s++)t[s]-=a*(l||s!==t.length-1?e[s]:0);return t},D=(t,e,l,a)=>{const s=v/t,o=v/e,n=v/l;return F(v/E(-P(s)*P(n)+I(s)*I(n)*((P(o)-P(a*s)*P(n))/(I(a*s)*I(n)))))},{abs:Y,cos:P,sin:I,tan:Z,cosh:$,sinh:x,acos:E,acosh:z,atan:ee,atan2:te,min:ne,max:se,round:F,sqrt:le,sign:ae,ceil:re,floor:fe,log:ie,exp:oe,hypot:ce,pow:he,PI:v}=Math;function*G(t,e){if(e<0||t.length<e)return;const l=Array.from(Array(e).keys());for(;;){yield l.map(s=>t[s]);let a=e-1;for(;a>=0&&l[a]>=t.length-e+a;)a--;if(a<0)return;for(let s=l[a]+1;a<e;a++,s++)l[a]=s}}const H=(t,e=2)=>Array.from(G(t,e)),u=t=>String.fromCharCode(97+t),L=t=>t.charCodeAt(0)-97,M=(t,e,l,a,s)=>{const o=[];for(let n=0;n<t;n++)w(a[n])&&o.push(u(n).repeat(2));for(let n=1;n<t;n++)for(let f=0;f<n;f++)e[n][f]>1&&w(a[n])&&w(a[f])&&o.push((u(f)+u(n)).repeat(e[n][f]));if(l&&!l.every(n=>n.every(f=>f===1))&&s>0){if(t===4&&(l[0][1]>1||l[2][3]>1)&&e[0][1]>3&&e[2][3]>3)l[0][1]>1&&o.push("abcdcb".repeat(D(e[0][1],e[1][2],e[0][2],l[0][1]))),l[2][3]>1&&o.push("abcdcb".repeat(D(e[2][3],e[1][2],e[1][3],l[2][3])));else for(let n=1;n<t;n++)for(let f=0;f<n;f++)if(l[f][n]>1){if(f+2<t){const g=D(e[f+1][n+1],e[f][n],e[f][n+1],l[f][n]);o.push((u(f)+u(n)+u(f+2)+u(n)).repeat(g))}if(f-1>=0){const g=D(e[f-1][n-1],e[f][n],e[f-1][n],l[f][n]);o.push((u(f)+u(n)+u(f)+u(f-1)).repeat(g))}}}return o},S=t=>t.map((e,l)=>w(e)?u(l):"").join(""),T=(t,e,l,a,s)=>{const o=M(t,e,l,a,s),n=S(a),f=a.map((g,m)=>g||!w(g)?"":u(m)).join("");return{gens:n,subgens:f,rels:o}},U=(t,e,l,a,s)=>{const o=M(t,e,l,a,s),n=S(a),f=[];for(let g=0;g<a.length;g++)if(a[g]){let m=u(g);for(let c=0;c<t;c++)e[g][c]===2&&(a[c]||(m+=u(c)));f.push({gens:n,subgens:m,rels:o,pair:[0,u(g)]})}return f},W=(t,e,l,a,s)=>{const o=M(t,e,l,a,s),n=S(a),f=[],g=H([...Array(t).keys()]);for(let m=0;m<g.length;m++){let c=g[m];(c[1]-c[0])%2===0&&(c=[c[1],c[0]]);const y=e[c[0]][c[1]],_=[];if(a[c[0]]&&a[c[1]]&&y>=2)for(let r=0;r<y;r++){const h=c.map(d=>u(d)).join("").repeat(r);_.push(h),_.push(u(c[1])+h)}else if((a[c[0]]||a[c[1]])&&y>2)for(let r=0;r<y;r++){const h=c.map(d=>u(d)).join("").repeat(r);_.push(h)}else continue;let i=u(c[0])+u(c[1]);for(let r=0;r<t;r++)e[c[0]][r]===2&&e[c[1]][r]===2&&(a[r]||(i+=u(r)));f.push({gens:n,subgens:i,rels:o,face:_})}return f},J=(t,e)=>{if(e.left===e.right)return!1;for(;e.left!==e.right;){const l=t.normal[e.left_coset][e.rel[e.left]];if(l===void 0)break;e.left++,e.left_coset=l}for(;e.left!==e.right;){const l=t.reverse[e.right_target][e.rel[e.right]];if(l===void 0)break;e.right--,e.right_target=l}return e.left===e.right?(t.normal[e.left_coset][e.rel[e.right]]=e.right_target,t.reverse[e.right_target][e.rel[e.right]]=e.left_coset,!0):!1},O=t=>{const{gens:e,subgens:l,rels:a,cosets:s,rows:o,words:n,limit:f}=t,g=e.length,m=a.map(i=>[...i].map(r=>e.indexOf(r))),c=l.split("").map(i=>e.indexOf(i));if(s.normal.length===0){s.normal.push(new Array(g).fill()),s.reverse.push(new Array(g).fill());for(let i=0;i<c.length;i++)s.normal[0][c[i]]=0,s.reverse[0][c[i]]=0}for(o.length===0&&o.push(...m.map(i=>({rel:i,left:0,right:i.length-1,left_coset:0,right_target:0})));o.length&&s.normal.length<f;){for(;;){let h=!1;for(let d=o.length-1;d>=0;d--)J(s,o[d])&&(h=!0,o.splice(d,1));if(!h)break}const i=s.normal.length;let r=!1;for(let h=0;h<s.normal.length;h++){const d=s.normal[h];for(let p=0;p<d.length;p++){let b=d[p];if(b===void 0){b=s.normal.length,s.normal.push(new Array(g).fill()),s.reverse.push(new Array(g).fill()),s.normal[h][p]=b,s.reverse[b][p]=h,o.push(...m.map(j=>({rel:j,left:0,right:j.length-1,left_coset:i,right_target:i}))),r=!0;break}}if(r)break}}o.length||(t.done=!0),n.length===0&&(n[0]="");let y=!0,_=s.normal.length;for(;K(s.normal.length,n)&&y&&--_;){y=!1;for(let i=0;i<n.length;i++){if(n[i]===void 0)continue;const r=s.normal[i];for(let h=0;h<r.length;h++){const d=r[h];d===void 0||n[d]!==void 0||(n[d]=n[i]+u(h),y=!0)}}}return y||console.warn("Hole in the cosets"),_===0&&console.warn("Max iterations reached"),{cosets:s,rows:o,words:n}},K=(t,e)=>{for(let l=0;l<t;l++)if(e[l]===void 0)return!0;return!1};let k=null,N=null,R=null;const Q=(t,e,l,a,s)=>{const o=()=>({cosets:{normal:[],reverse:[]},rows:[],words:[],done:!1,lastDrawn:0});k={...T(t,e,l,a,s),...o()},N=U(t,e,l,a,s).map(n=>({...n,...o()})),R=W(t,e,l,a,s).map(n=>({...n,...o()}))},X=(t,e)=>{const{rootVertex:l,mirrorsPlanes:a,curvature:s}=t;let o=l;for(let n=0;n<e.length;n++)o=B(o,a[e.charCodeAt(n)-97],s);return o},C=(t,e=0)=>{for(let l=0;l<t.length;l++){const a=L(t[l]),s=k.cosets.normal[e][a];if(s===void 0)return;e=s}return e};onmessage=({data:{order:t,curvature:e,mirrorsPlanes:l,coxeter:a,stellation:s,mirrors:o,rootVertex:n,dimensions:f,uuid:g}})=>{t===0&&Q(f,a,s,o,e);const m=(t+1)*(e>0?500:100);try{let c=[],y=[],_=[];if(!k.done){k.limit=m,O(k);for(let i=k.lastDrawn;i<k.words.length;i++){const r=k.words[i];if(r===void 0){c.push({vertex:new Array(f).fill(NaN),word:""});continue}const h=X({rootVertex:n,mirrorsPlanes:l,curvature:e},r);c.push({vertex:h,word:r,i}),k.lastDrawn=i+1}}for(let i=0;i<N.length;i++){const r=N[i];r.done||(r.limit=m*(e>0?1:e<0?1.5:3),O(r));const h=r.pair[0],d=C(r.pair[1]);for(let p=r.lastDrawn;p<r.words.length;p++){const b=r.words[p];if(b===void 0)continue;const j=C(b,h),A=C(b,d);if(j===void 0||A===void 0){r.lastDrawn=p;break}y.push({start:j,end:A,word:b}),r.lastDrawn=p+1}}for(let i=0;i<R.length;i++){const r=R[i];r.done||(r.limit=m*(e>0?1:e<0?1.5:2.5),O(r));let h=!1;const d=[];for(let p=0;p<r.face.length;p++){const b=r.face[p],j=C(b);if(j===void 0){h=!0;break}d.push(j)}if(h)break;for(let p=r.lastDrawn;p<r.words.length;p++){const b=r.words[p];if(b===void 0)continue;const j=[];for(let A=0;A<d.length;A++){const V=C(b,d[A]);if(V===void 0){h=!0;break}j.push(V)}if(h){r.lastDrawn=p;break}_.push({vertices:j,word:b}),r.lastDrawn=p+1}}postMessage({vertices:c,edges:y,faces:_,order:t,uuid:g})}catch(c){postMessage({error:c.message,uuid:g})}}})();
