(function(){"use strict";const N=["vertex","edge","face"],O=(e,t=null,n=1,o=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(o)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((s,r)=>e+r*n)},W=(e,t)=>e.length!==t.length?!1:e.every((n,o)=>Array.isArray(n)?W(n,t[o]):n===t[o]),J=(e,t)=>{let n=0;for(let o=0;o<e.length;o++)n+=e[o]*t[o];return n},K=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]-t[o];return n},Q=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]*t;return n},U=(e,t)=>{const n=new Array(e.length);for(let o=0;o<e.length;o++){let s=0;for(let r=0;r<e[0].length;r++)s+=e[o][r]*t[r];n[o]=s}return n},X=(e,t,n)=>K(e,Q(U(Z(n),t),2*J(U(Y(n),e),t))),Y=e=>e.map((t,n)=>t.map((o,s)=>n===s&&o===0?1:o)),Z=e=>e.map(t=>t.map(n=>$(n))),{abs:$,cos:ce,sin:le,tan:fe,cosh:ue,sinh:ge,acos:de,acosh:he,atan:ye,atan2:we,min:ve,max:xe,round:ke,sqrt:ae,cbrt:je,sign:be,ceil:ze,floor:Ce,log:Me,exp:We,hypot:qe,pow:m,PI:Ae}=Math,D=e=>e.charCodeAt(0)-97,T=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),v=(e,t,n)=>{let o,s,r;if(t===0)o=s=r=n;else{const u=n<.5?n*(1+t):n+t-n*t,c=2*n-u;o=T(c,u,e+1/3),s=T(c,u,e),r=T(c,u,e-1/3)}return[o,s,r]},q=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],I={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>v(e.length*.03%1,.75,.7)},p=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e})=>v(e.length*.17%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>v(...q[e.length%q.length])},synthwave:{background:[...v(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>v((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>v(e.length*.03%1,1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>v(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.1,diffuse:"fresnel"},color:({len:e,vertices:t,type:n})=>n==="face"?v(((e||t.length)-2)*.21%1,1,.8):[1,1,1]},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e,type:t})=>t!=="vertex"?v(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e,type:t,dimensions:n,draw:o})=>{const s=e.length?D(e[e.length-1])/n:0;return v(s%1,1,t==="face"?.6:o.face?0:.8)}},harlequin:{background:[...v(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,index:t,type:n})=>{const o=e.split("").map(r=>D(r)).reduce((r,u)=>r+u,0),s=[...q[o%q.length]];return n==="face"&&t%2&&(s[2]*=.5),v(...s)}},pure:{background:[0,0,0,1],color:({word:e})=>v(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({index:e})=>v((e||0)*.13%1,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e,type:t,draw:n})=>v(e.length*.06%1,1,t==="face"?.6:n.face?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e,type:t})=>t==="face"?new Array(3).fill(1-m(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:()=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:()=>[0,0,0]}}).map(([e,t])=>[e,{...I,...t,transparent:{}}])),ee=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},a=(e,t)=>{let n=t,o=0;for(;e.quotientMap[n];)o++,n=e.quotientMap[n];return o>1&&(e.quotientMap[t]=n),n},L=(e,t,n)=>{const o=t,s=[[t,n]];for(;s.length>0;)if([t,n]=s.pop(),t=a(e,t),n=a(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const r=e.cosets.get(t),u=e.cosets.get(n);e.cosets.delete(n);for(const[c,l]of u)r.has(c)?s.push([r.get(c),l]):r.set(c,l)}return a(e,o)},P=(e,t,n,o)=>{t=a(e,t);const s=e.cosets.get(t);s.has(n)?L(e,s.get(n),o):s.set(n,o)},A=(e,t,n,o)=>{t=a(e,t);let s;const r=e.cosets.get(t);return r.has(n)?(s=a(e,r.get(n)),o!==void 0&&s!==o&&L(e,o,s)):(o?s=o:(s=e.nextVertex++,e.cosets.set(s,new Map),e.unvisited.push(s)),P(e,t,n,s),P(e,s,ee(n),t)),s},R=function(e,t,n){let o=n;for(let s=t.length-1;s>0;s--)o=A(e,o,t[s]);A(e,o,t[0],n)},te=function(e){if(!e.words){const t=a(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastWord="",e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(1,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=a(e,t),o=e.cosets.get(n),s=e.words.get(n);if(o.size<e.gens.length*2)return;const r=[];for(let u=0;u<e.gens.length;u++){const c=e.gens[u],l=a(e,o.get(c));if(!e.words.has(l)){if(e.cosets.get(l).size<e.gens.length*2)return;r.push([u,c,l])}}e.remaining.shift();for(let u=0;u<r.length;u++){const[c,l,y]=r[u],w=l+s;if(e.words.set(y,w),e.currentWords.set(y,w),e.lastCoset=y,e.lastWord=w,e.remaining.push(y),e.vertices){const g=X(e.vertices.get(n),e.rootNormals[c],e.metric);e.vertices.set(y,g)}}}},B=(e,t)=>{let n=1;for(let o=t.length-1;o>=0;o--){const s=e.cosets.get(n);if(s.size<e.gens.length*2||(n=a(e,s.get(t[o])),e.cosets.get(n).size<e.gens.length*2))return}return n},G=e=>{if(!e.cosets){e.unvisited=[1],e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)R(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length>0;){const o=a(e,e.unvisited.shift());if(!e.seen.has(o)){e.seen.add(o),n=o;break}}if(n===null){e.done=!0;break}for(let o=0;o<e.gens.length;o++)A(e,n,e.gens[o].toUpperCase()),A(e,n,e.gens[o]);for(let o=0;o<e.rels.length;o++)R(e,e.rels[o],n)}},ne=e=>(G(e),e.cosets.size),oe=e=>(G(e),te(e),e);let z,_;const ie=(e,t,n=!1)=>{if(n){const o=e>0?1-e%2:0;return e>=t/2+o?2*(t-e)-1+o:2*e-o}return e>=t/2?2*(t-e)-1:2*e};onmessage=({data:{shape:e,space:t,first:n,ambiance:o,draw:s}})=>{var r,u;try{const c=new Array(e.dimensions);let l=!0;n&&(z=new Map,_=[0,0,0]);const y=i=>{i.children.forEach(y);const d=N[i.dimensions];if(i!=null&&i.new){c[i.dimensions]||(c[i.dimensions]={dimensions:i.dimensions,processing:s[d]?0:void 0,count:0,detail:[],aggregated:[],done:!0});const x=t.eigens.values;if(!z.has(i.key)){const h=i.dimensions===0?500:s[d]?250:10;z.set(i.key,{...e,subgens:i.quotient,space:i.space,subdimensions:i.dimensions,mirrors:i.mirrors,limit:h,...i.dimensions===0?{rootVertex:t.rootVertex,rootNormals:t.rootNormals,metric:t.metric}:{}})}const f=z.get(i.key);f.done||(s[d]||i.dimensions===0?(oe(f),x.some(h=>h<=0)?f.count=1/0:f.count=f.cosets.size):x.some(h=>h<=0)?(f.count=1/0,f.done=!0):f.count=ne(f)),c[i.dimensions].detail.push({key:i.key,coxeter:i.coxeter,stellation:i.stellation,mirrors:i.mirrors,count:f.count,done:f.done,objects:f.objects});const b=c[i.dimensions].aggregated.find(({coxeter:h,stellation:C,mirrors:M})=>W(h,i.coxeter)&&W(C,i.stellation)&&W(M,i.mirrors));b?(b.done=b.done&&f.done,b.count+=f.count,b.key+=","+i.key):c[i.dimensions].aggregated.push({key:i.key,coxeter:i.coxeter,stellation:i.stellation,mirrors:i.mirrors,count:f.count,done:f.done}),s[d]&&f.words&&(c[i.dimensions].processing+=f.words.size),c[i.dimensions].count+=f.count,c[i.dimensions].done=c[i.dimensions].done&&f.done,l=l&&f.done}};if(e.children.forEach(y),c[0].done&&(!s.edge||(r=c[1])!=null&&r.done)&&(!s.face||(u=c[2])!=null&&u.done))for(let i of z.values())i.limit=200;const w=[];for(let i=0;i<c.length&&i<3;i++){if(!s[N[i]]){w.push(null);continue}const d={start:_[i],size:0,objects:[],partials:[]};for(let x=0;x<c[i].detail.length;x++){const f=c[i].detail[x],b=z.get(f.key);if(b.currentWords.size){const{objects:h,partials:C}=se(b,e,t);d.objects.push(h),d.size+=h.length+C.length,_[i]+=h.length,d.partials.push(C)}}w.push(d)}const g=[],j=[],k=e.dimensions>4?9:e.dimensions;for(let i=0;i<w.length;i++){const d=w[i];if(!d){g.push(null),j.push(null);continue}const x=[new Float32Array(d.size*3)];for(let h=0;h<i+1;h++)x.push(new Float32Array(d.size*k));let f=0;const b=d.objects.concat(d.partials);for(let h=0;h<b.length;h++){const C=b[h];for(let M=0;M<C.length;M++){const V=C[M];for(let E=0;E<V.vertices.length;E++){const H=V.vertices[E];for(let S=0;S<H.length;S++)x[E+1][f*k+S]=H[S]}const F=p[o].color({word:V.word,key:V.key,subShape:h,index:M,len:C.length,dimensions:e.dimensions,draw:s,type:N[i]});x[0][f*3+0]=F[0],x[0][f*3+1]=F[1],x[0][f*3+2]=F[2],f++}}g.push(x),j.push({start:d.start,size:d.size})}c.top=z.get(O(e.dimensions).join("-")).vertices.size,c.done=l,postMessage({visit:c,infos:j,data:g},{options:{transfer:[g.flat(1)]}})}catch(c){postMessage({error:c.message})}};function se(e,t,n){const o=[],s=[];if(e.subdimensions===0)for(const[r,u]of e.currentWords)o.push({word:u,cosetId:r,vertices:[e.vertices.get(r)]}),e.currentCosetId=r,e.currentWords.delete(r);else if(e.subdimensions===1){const r=z.get(O(t.dimensions).join("-"));for(const[u,c]of e.currentWords){const l={word:c,vertices:[]};for(let y=0;y<e.space.length;y++){const w=B(r,c+e.space[y]);w&&r.vertices.has(w)&&l.vertices.push(r.vertices.get(w))}l.vertices.length<2||(o.push(l),e.currentWords.delete(u))}}else if(e.subdimensions===2){const r=z.get(O(t.dimensions).join("-"));for(const[u,c]of e.currentWords){const l=[];for(let g=0;g<e.space.length;g++){const j=e.mirrors.every(d=>!!d),k=ie(g,e.space.length,j),i=B(r,c+e.space[k]);i&&r.vertices.has(i)&&l.push(r.vertices.get(i))}if(l.length<3)continue;const y=l.length<e.space.length;if(l.length===3){const g={word:c,vertices:l,index:0,partial:y};y?s.push(g):(o.push(g),e.currentWords.delete(u));continue}const w=new Array(t.dimensions).fill(0);for(let g=0;g<l.length;g++){const j=l[g];for(let k=0;k<j.length;k++)w[k]+=j[k]}for(let g=0;g<t.dimensions;g++)w[g]/=l.length;for(let g=0;g<l.length;g++){const j=c.length%2===n.curvature>0?0:1,k={word:c,vertices:[l[(g+j)%l.length],l[(g+(1-j))%l.length],w],index:g,partial:y};y?s.push(k):(o.push(k),e.currentWords.delete(u))}}}return{objects:o,partials:s}}})();
