(function(){"use strict";const T=(e,t=null,n=1,o=!1)=>{if(t===null&&(t=e,e=0),n===0)throw new Error("Step cannot be zero.");if(t<e&&n>0||t>e&&n<0){if(o)return[];n=-n}return new Array(Math.ceil((t-e)/n)).fill().map((i,l)=>e+l*n)},M=(e,t)=>e.length!==t.length?!1:e.every((n,o)=>Array.isArray(n)?M(n,t[o]):n===t[o]),B=(e,t)=>{let n=0;for(let o=0;o<e.length;o++)n+=e[o]*t[o];return n},G=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]-t[o];return n},H=(e,t)=>{const n=[];for(let o=0;o<e.length;o++)n[o]=e[o]*t;return n},F=(e,t)=>{const n=new Array(e.length);for(let o=0;o<e.length;o++){let i=0;for(let l=0;l<e[0].length;l++)i+=e[o][l]*t[l];n[o]=i}return n},J=(e,t,n)=>G(e,H(F(Q(n),t),2*B(F(K(n),e),t))),K=e=>e.map((t,n)=>t.map((o,i)=>n===i&&o===0?1:o)),Q=e=>e.map(t=>t.map(n=>X(n))),{abs:X,cos:ie,sin:re,tan:se,cosh:ce,sinh:le,acos:fe,acosh:ge,atan:ue,atan2:de,min:he,max:ye,round:we,sqrt:ve,cbrt:ke,sign:xe,ceil:je,floor:be,log:ze,exp:Ce,hypot:Me,pow:Y,PI:ae}=Math,O=e=>e.charCodeAt(0)-97,E=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e),h=(e,t,n)=>{let o,i,l;if(t===0)o=i=l=n;else{const s=n<.5?n*(1+t):n+t-n*t,c=2*n-s;o=E(c,s,e+1/3),i=E(c,s,e),l=E(c,s,e-1/3)}return[o,i,l]},a=[[10/360,.56,.91],[0/360,.59,.88],[316/360,.72,.86],[267/360,.84,.81],[343/360,.81,.75],[350/360,.65,.77],[23/360,.92,.75],[41/360,.86,.83],[115/360,.54,.76],[170/360,.57,.73],[189/360,.71,.73],[199/360,.76,.69],[217/360,.92,.76],[232/360,.97,.85]],Z={background:[0,0,0,1],glow:!1,shading:"ads",diffuse:"lambert",specular:!1,shininess:32,opacity:1,ambient:.2,roughness:.85,gouraud:!1,transparency:"oit",color:({word:e})=>h(e.length*.03%1,.75,.7)},$=Object.fromEntries(Object.entries({neon:{background:[0,0,0,1],glow:{exposure:1.75,strength:2,offset:{up:2,down:2},steps:3,pow:2},shading:!1,face:{opacity:.025},transparency:"blend",color:({word:e})=>h(e.length*.17%1,.5,.6)},disco:{background:[0,0,0,1],glow:{exposure:1.5,strength:2,offset:{up:2,down:2},steps:4,pow:2},face:{gouraud:!0,diffuse:"fresnel",opacity:.025},transparency:"blend",color:({word:e})=>h(...a[e.length%a.length])},synthwave:{background:[...h(.77,.6,.04),1],glow:{exposure:1.5,strength:3,offset:{up:3,down:3},steps:3,pow:2},shading:!1,face:{opacity:.015},afterImage:.7,transparency:"blend",color:({word:e})=>h((.5-e.length*.05%.5+.65)%1,.4,.6)},colorful:{background:[1,1,1,1],diffuse:"oren-nayar",specular:"cook-torrance",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>h(e.length*.03%1,1,.8)},shiny:{background:[0,0,0,1],diffuse:"lambert",specular:"blinn-phong",shininess:32,opacity:1,ambient:.2,gouraud:!1,face:{gouraud:!0,opacity:.1,diffuse:"fresnel",specular:!1},transparency:"oit",color:({word:e})=>h(-(e.length*.07)%1,1,.8)},shape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.1,diffuse:"fresnel"},color:({len:e,vertices:t},n)=>n==="face"?h(((e||t.length)-2)*.21%1,1,.8):[1,1,1]},subShape:{background:[1,1,1,1],transparency:"oit",face:{gouraud:!0,opacity:.2,diffuse:"fresnel"},color:({subShape:e},t)=>t!=="vertex"?h(e*.21%1,1,.8):[1,1,1]},reflection:{background:[1,1,1,1],diffuse:"cel",face:{opacity:.6,gouraud:!1},transparency:"blend",color:({word:e},t,{dimensions:n,showFaces:o})=>{const i=e.length?O(e[e.length-1])/n:0;return h(i%1,1,t==="face"?.6:o?0:.8)}},harlequin:{background:[...h(240/360,.23,.09),1],face:{opacity:.6},transparency:"oit",color:({word:e,index:t},n,{dimensions:o,showFaces:i})=>{const l=e.split("").map(c=>O(c)).reduce((c,u)=>c+u,0),s=[...a[l%a.length]];return n==="face"&&t%2&&(s[2]*=.5),h(...s)}},pure:{background:[0,0,0,1],color:({word:e})=>h(e.length*.03%1,.75,.7)},facets:{background:[0,0,0,1],color:({word:e,index:t})=>h((t||0)*.13%1,.75,.7)},monochrome:{background:[.12,.12,.12,1],diffuse:"reverse",ambient:0,face:{opacity:.1},transparency:"oit",color:()=>[1,1,1]},plain:{extended:!0,background:[1,1,1,1],glow:!1,shading:!1,color:({word:e},t,{dimensions:n,showFaces:o})=>h(e.length*.06%1,1,t==="face"?.6:o?.05:.5)},plainblack:{extended:!0,background:[1,1,1,1],shading:!1,color:({word:e},t)=>t==="face"?new Array(3).fill(1-Y(.9,e.length+1)):[0,0,0]},normals:{extended:!0,background:[1,1,1,1],shading:"normal",color:e=>[0,0,0]},uvs:{extended:!0,background:[1,1,1,1],shading:"uv",color:e=>[0,0,0]}}).map(([e,t])=>[e,{...Z,...t,transparent:{}}])),m=e=>{const t=e.toUpperCase();return e===t?e.toLowerCase():t},v=(e,t)=>{let n=t,o=0;for(;e.quotientMap[n];)o++,n=e.quotientMap[n];return o>1&&(e.quotientMap[t]=n),n},_=(e,t,n)=>{const o=t,i=[[t,n]];for(;i.length>0;)if([t,n]=i.pop(),t=v(e,t),n=v(e,n),t!==n){e.quotientMap[n]=t,e.seen.has(n)&&!e.seen.has(t)&&e.seen.add(t);const l=e.cosets.get(t),s=e.cosets.get(n);e.cosets.delete(n);for(const[c,u]of s)l.has(c)?i.push([l.get(c),u]):l.set(c,u)}return v(e,o)},U=(e,t,n,o)=>{t=v(e,t);const i=e.cosets.get(t);i.has(n)?_(e,i.get(n),o):i.set(n,o)},W=(e,t,n,o)=>{t=v(e,t);let i;const l=e.cosets.get(t);return l.has(n)?(i=v(e,l.get(n)),o!==void 0&&i!==o&&_(e,o,i)):(o?i=o:(i=e.nextVertex++,e.cosets.set(i,new Map),e.unvisited.push(i)),U(e,t,n,i),U(e,i,m(n),t)),i},D=function(e,t,n){let o=n;for(let i=t.length-1;i>0;i--)o=W(e,o,t[i]);W(e,o,t[0],n)},I=function(e){if(!e.words){const t=v(e,1);e.words=new Map,e.words.set(t,""),e.currentWords=new Map,e.currentWords.set(t,""),e.lastWord="",e.lastCoset=t,e.remaining=[t],e.rootVertex&&e.rootNormals&&e.metric&&(e.vertices=new Map,e.vertices.set(1,e.rootVertex))}for(;e.remaining.length>0;){const t=e.remaining[0],n=v(e,t),o=e.cosets.get(n);if(o.size<e.gens.length*2)return;for(let i=0;i<e.gens.length;i++){const l=e.gens[i],s=v(e,o.get(l));if(!e.words.has(s)&&e.cosets.get(s).size<e.gens.length*2)return}e.remaining.shift();for(let i=0;i<e.gens.length;i++){const l=e.gens[i],s=v(e,o.get(l));if(e.words.has(s))continue;const c=l+e.words.get(n);if(e.words.set(s,c),e.currentWords.set(s,c),e.lastCoset=s,e.lastWord=c,e.remaining.push(s),e.vertices){const u=J(e.vertices.get(n),e.rootNormals[i],e.metric);e.vertices.set(s,u)}}}},L=(e,t)=>{let n=1;for(let o=t.length-1;o>=0;o--){const i=e.cosets.get(n);if(i.size<e.gens.length*2||(n=v(e,i.get(t[o])),e.cosets.get(n).size<e.gens.length*2))return}return n},P=e=>{if(!e.cosets){e.unvisited=[1],e.cosets=new Map([[1,new Map]]),e.nextVertex=2,e.seen=new Set,e.quotientMap={};for(let t=0;t<e.subgens.length;t++)D(e,e.subgens[t],1)}e.limit=e.limit||1e3,e.done=!1;for(let t=0;t<e.limit;t++){let n=null;for(;e.unvisited.length>0;){const o=v(e,e.unvisited.shift());if(!e.seen.has(o)){e.seen.add(o),n=o;break}}if(n===null){e.done=!0;break}for(let o=0;o<e.gens.length;o++)W(e,n,e.gens[o].toUpperCase()),W(e,n,e.gens[o]);for(let o=0;o<e.rels.length;o++)D(e,e.rels[o],n)}},p=e=>(P(e),e.cosets.size),ee=e=>(P(e),I(e),e);let j,S;const te=(e,t,n=!1)=>{if(n){const o=e>0?1-e%2:0;return e>=t/2+o?2*(t-e)-1+o:2*e-o}return e>=t/2?2*(t-e)-1:2*e};onmessage=({data:{shape:e,space:t,first:n,ambiance:o}})=>{var i,l;try{const s=new Array(e.dimensions);let c=!0;n&&(j=new Map,S=[0,0,0]);const u=r=>{if(r.children.forEach(u),r!=null&&r.new){s[r.dimensions]||(s[r.dimensions]={dimensions:r.dimensions,processing:r.dimensions<3?0:void 0,count:0,detail:[],aggregated:[],done:!0});const y=t.eigens.values;j.has(r.key)||j.set(r.key,{...e,subgens:r.quotient,space:r.space,subdimensions:r.dimensions,mirrors:r.mirrors,limit:r.dimensions<3?(3-r.dimensions)*250:10,...r.dimensions===0?{rootVertex:t.rootVertex,rootNormals:t.rootNormals,metric:t.metric}:{}});const f=j.get(r.key);f.done||(r.dimensions<3?(ee(f),y.some(d=>d<=0)?f.count=1/0:f.count=f.cosets.size):y.some(d=>d<=0)?(f.count=1/0,f.done=!0):f.count=p(f)),s[r.dimensions].detail.push({key:r.key,coxeter:r.coxeter,stellation:r.stellation,mirrors:r.mirrors,count:f.count,done:f.done,objects:f.objects});const w=s[r.dimensions].aggregated.find(({coxeter:d,stellation:b,mirrors:C})=>M(d,r.coxeter)&&M(b,r.stellation)&&M(C,r.mirrors));w?(w.done=w.done&&f.done,w.count+=f.count,w.key+=","+r.key):s[r.dimensions].aggregated.push({key:r.key,coxeter:r.coxeter,stellation:r.stellation,mirrors:r.mirrors,count:f.count,done:f.done}),f.words&&(s[r.dimensions].processing+=f.words.size),s[r.dimensions].count+=f.count,s[r.dimensions].done=s[r.dimensions].done&&f.done,c=c&&f.done}};if(e.children.forEach(u),s[0].done&&((i=s[1])!=null&&i.done)&&((l=s[2])!=null&&l.done))for(let r of j.values())r.limit=200;const g=[];for(let r=0;r<s.length&&r<3;r++){const y={start:S[r],size:0,objects:[]};for(let f=0;f<s[r].detail.length;f++){const w=s[r].detail[f],d=j.get(w.key);if(d.currentWords.size){const b=ne(d,e,t);y.objects.push(b),y.size+=b.length}}g.push(y),S[r]+=y.size}const k=[],x=[],z=e.dimensions>4?9:e.dimensions;for(let r=0;r<g.length;r++){const y=g[r],f=[new Float32Array(y.size*3)];for(let d=0;d<r+1;d++)f.push(new Float32Array(y.size*z));let w=0;for(let d=0;d<y.objects.length;d++){const b=y.objects[d];for(let C=0;C<b.length;C++){const q=b[C];for(let A=0;A<q.vertices.length;A++){const R=q.vertices[A];for(let V=0;V<R.length;V++)f[A+1][w*z+V]=R[V]}const N=$[o].color({word:q.word,key:q.key,subShape:d},r);f[0][w*3+0]=N[0],f[0][w*3+1]=N[1],f[0][w*3+2]=N[2],w++}}k.push(f),x.push({start:y.start,size:y.size})}s.top=g[0].start+g[0].size,s.done=c,postMessage({visit:s,infos:x,data:k},{options:{transfer:[k.flat(1)]}})}catch(s){postMessage({error:s.message})}};function ne(e,t,n){const o=[];if(e.subdimensions===0)for(const[i,l]of e.currentWords)o.push({word:l,cosetId:i,vertices:[e.vertices.get(i)]}),e.currentCosetId=i,e.currentWords.delete(i);else if(e.subdimensions===1){const i=j.get(T(t.dimensions).join("-"));for(const[l,s]of e.currentWords){const c={word:s,vertices:[]};for(let u=0;u<e.space.length;u++){const g=L(i,s+e.space[u]);g&&i.vertices.has(g)&&c.vertices.push(i.vertices.get(g))}c.vertices.length===2&&(o.push(c),e.currentWords.delete(l))}}else if(e.subdimensions===2){const i=j.get(T(t.dimensions).join("-"));for(const[l,s]of e.currentWords){const c=[];for(let g=0;g<e.space.length;g++){const k=e.mirrors.every(r=>!!r),x=te(g,e.space.length,k),z=L(i,s+e.space[x]);z&&i.vertices.has(z)&&c.push(i.vertices.get(z))}if(c.length<e.space.length)continue;if(c.length===3){const g={word:s,vertices:c};o.push(g),e.currentWords.delete(l);continue}const u=new Array(t.dimensions).fill(0);for(let g=0;g<c.length;g++){const k=c[g];for(let x=0;x<k.length;x++)u[x]+=k[x]}for(let g=0;g<t.dimensions;g++)u[g]/=c.length;for(let g=0;g<c.length;g++){const k=s.length%2===n.curvature>0?0:1,x={word:s,vertices:[c[(g+k)%c.length],c[(g+(1-k))%c.length],u],index:g};o.push(x),e.currentWords.delete(l)}}}return o}})();
